[{"C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\index.js":"1","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\App.js":"2","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\reportWebVitals.js":"3","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\EmployeeList.js":"4","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\CreateEmployee.js":"5","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\EmployeeDetails.js":"6","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\CreateJobApplication.js":"7","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\GlobalComponents.js":"8","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\LoginUser.js":"9","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Services\\AuthService.js":"10","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\MainComponent.js":"11","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\Dashboard.js":"12","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Services\\Globals.js":"13","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\TeamManager.js":"14","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\StartPage.js":"15","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\UserTasks.js":"16"},{"size":242,"mtime":1626196431129,"results":"17","hashOfConfig":"18"},{"size":1019,"mtime":1641546606228,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":13499,"mtime":1642060231321,"results":"21","hashOfConfig":"18"},{"size":10166,"mtime":1642056535968,"results":"22","hashOfConfig":"18"},{"size":5263,"mtime":1641205994946,"results":"23","hashOfConfig":"18"},{"size":2647,"mtime":1641205919490,"results":"24","hashOfConfig":"18"},{"size":5630,"mtime":1641206151551,"results":"25","hashOfConfig":"18"},{"size":2643,"mtime":1641631103214,"results":"26","hashOfConfig":"18"},{"size":2323,"mtime":1641899545325,"results":"27","hashOfConfig":"18"},{"size":6744,"mtime":1641631069020,"results":"28","hashOfConfig":"18"},{"size":11178,"mtime":1641298946226,"results":"29","hashOfConfig":"18"},{"size":70,"mtime":1641207518125,"results":"30","hashOfConfig":"18"},{"size":247,"mtime":1641296074226,"results":"31","hashOfConfig":"18"},{"size":766,"mtime":1641546900095,"results":"32","hashOfConfig":"18"},{"size":18247,"mtime":1642075175708,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"yin7gd",{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},"C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\index.js",[],["75","76"],"C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\App.js",["77","78","79"],"import './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { createTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport LoginUser from './Components/LoginUser';\nimport MainComponent from './Components/MainComponent';\nimport StartPage from './Components/StartPage';\n\nconst theme = createTheme({\n  palette: {\n    secondary: {\n      light: \"#3b783d\",\n      main: \"#367338\",\n      dark: \"#2e6630\",\n      contrastText: \"#fff\"\n    },\n    type: 'dark'\n  }\n})\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <StartPage />\n          </Route>\n          <Route path=\"/login\">\n            <LoginUser />\n          </Route>\n          <Route path=\"/main\" >\n            <MainComponent />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\reportWebVitals.js",[],"C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\EmployeeList.js",["80","81","82"],"C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\CreateEmployee.js",["83","84"],"C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\EmployeeDetails.js",["85"],"import React, { useEffect, useState } from \"react\";\r\nimport APIURL from '../Services/Globals'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainConteiner: {\r\n        marginTop: \"1.8rem\",\r\n        background: theme.palette.grey[800],\r\n        padding: '1.5rem',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    title: {\r\n        margin: \"-1.5rem\",\r\n        textAlign: 'center',\r\n        padding: '1px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n    },\r\n    gridConteiner: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: `1fr 1fr 1fr`,\r\n        gridTemplateRows: \"1fr \",\r\n        justifyContent: \"space-evenly\",\r\n        alignContent: \"center\",\r\n        marginTop: \"0.5rem\",\r\n        '& p': {\r\n            margin: \"5px\",\r\n            display: 'inline',\r\n            fontSize: \"17px\"\r\n        },\r\n        '& h3': {\r\n            margin: \"5px\",\r\n            display: 'inline',\r\n\r\n        }\r\n    },\r\n    permitionChip: {\r\n        margin: \"2px\",\r\n        marginLeft: \"5px\",\r\n        boxShadow: theme.shadows[2],\r\n        fontSize: \"14px\",\r\n        fontWeight: \"501\"\r\n\r\n    }\r\n}));\r\n\r\nexport const EmployeeDetails = () => {\r\n    const classes = useStyles();\r\n    const [employee, setEmployee] = useState({});\r\n    const params = useParams();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getEmploee(params.id);\r\n    }, [])\r\n\r\n    const getEmploee = async (empID) => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        await fetch(APIURL + `employee/get/` + empID,\r\n            requestOptions\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => setEmployee(data));\r\n    }\r\n\r\n    return (\r\n        <div className={classes.mainConteiner}>\r\n            <div className={classes.title}>\r\n                <h2>Employee Details:</h2>\r\n            </div>\r\n            {employee.person === undefined ? null :\r\n                <div className={classes.gridConteiner}>\r\n                    <div>\r\n                        <h2 className={classes.header}>Personsal Info</h2>\r\n                        <div>\r\n                            <h3>Name: </h3>\r\n                            <p>{employee.person.name}</p>\r\n                        </div>\r\n                        <div  >\r\n                            <h3>Surname: </h3>\r\n                            <p>{employee.person.surname}</p>\r\n                        </div>\r\n                        <div  >\r\n                            <h3>Phone Number: </h3>\r\n                            <p>{employee.person.phoneNumber}</p>\r\n                        </div>\r\n                        <div  >\r\n                            <h3>Email: </h3>\r\n                            <p>{employee.person.email}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <h2 className={classes.header}>Address:</h2>\r\n                        <div  >\r\n                            <h3>City: </h3>\r\n                            <p>{employee.person.employeeAddress.city}</p>\r\n                        </div>\r\n                        <div   >\r\n                            <h3>Street: </h3>\r\n                            <p>{employee.person.employeeAddress.street}</p>\r\n                        </div>\r\n                        <div  >\r\n                            <h3>Post Code: </h3>\r\n                            <p>{employee.person.employeeAddress.postCode}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h2 className={classes.header}>Occupation info</h2>\r\n                        <div  >\r\n                            <h3>Employment Date: </h3>\r\n                            <p>{employee.employmentDate.toString().split('T')[0]}</p>\r\n                        </div>\r\n                        <div  >\r\n                            <h3>Position: </h3>\r\n                            <p>{employee.position.name}</p>\r\n                        </div>\r\n                        <div  >\r\n                            <h3>Department: </h3>\r\n                            <p>{employee.department.name}</p>\r\n                        </div>\r\n                        <div  >\r\n                            <h3>Work Type: </h3>\r\n                            <p>{employee.remoteWork === true ? \"Remote\" : \"Office\"}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            }\r\n            {employee.permissions === undefined ||\r\n                employee.permissions.length === 0 ? null :\r\n                <div>\r\n                    <h2>Employee Permissions: </h2>\r\n                    {employee.permissions.map((permition, index) => (\r\n                        <Chip\r\n                            className={classes.permitionChip}\r\n                            key={index}\r\n                            label={permition.name}\r\n                            color=\"primary\"\r\n                        />\r\n\r\n                    ))}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\CreateJobApplication.js",["86"],"import React, { useEffect, useState } from \"react\";\r\nimport APIURL from '../Services/Globals'\r\n\r\nconst CreateJobApplication = () => {\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [isSelected, setIsSelected] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    const PostJobApplication = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"id\": 0, \"name\": \"Json\", \"surname\": \"j\",\r\n                \"phoneNumber\": 0, \"email\": \"temp@mail.net\",\r\n                \"EmployeeAddressId\": 0,\r\n                \"employeeAddress\":\r\n                    { \"id\": 0, \"city\": \"New York\", \"postCode\": \"11-111\", \"street\": \"str 11\" }\r\n            })\r\n        };\r\n        fetch(APIURL + 'JobApplications', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => console.log(data));\r\n    }\r\n\r\n    const changeHandler = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n        setIsSelected(true);\r\n    };\r\n\r\n    const handleSubmission = () => {\r\n        const formData = new FormData();\r\n\r\n        formData.append('Id', 0);\r\n        formData.append('Name', \"Json\");\r\n        formData.append('Surname', \"xy\");\r\n        formData.append('Email', \"e3@gr\");\r\n        formData.append('Content', \"bzdury\");\r\n        formData.append('PositionId', 1);\r\n        formData.append('ApplicationDate', \"2021-02-01\");\r\n        formData.append('CVPath', \"\");\r\n        formData.append('CVFile', selectedFile);\r\n\r\n        fetch(\r\n            'http://localhost:5000/api/JobApplications',\r\n            {\r\n                method: 'POST',\r\n                body: formData,\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                console.log('Success:', result);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" name=\"file\" onChange={changeHandler} />\r\n            {isSelected ? (\r\n                <div>\r\n                    <p>Filename: {selectedFile.name}</p>\r\n                    <p>Filetype: {selectedFile.type}</p>\r\n                    <p>Size in bytes: {selectedFile.size}</p>\r\n\r\n                </div>\r\n            ) : (\r\n                <p>Select a file to show details</p>\r\n            )}\r\n            <div>\r\n                <button onClick={handleSubmission}>Submit</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default CreateJobApplication;","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\GlobalComponents.js",["87","88"],"import { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTextField = withStyles({\r\n    root: {\r\n\r\n        '& .MuiInputBase-root': {\r\n            color: \"white\",\r\n            marginRight: \"10px\",\r\n            marginLeft: \"20px\",\r\n            marginBottom: \"11px\",\r\n        },\r\n\r\n        '& .MuiFormLabel-root': {\r\n            color: \"#999999\",\r\n            marginLeft: \"20px\",\r\n        },\r\n\r\n        '& label.Mui-focused': {\r\n            color: 'white',\r\n        },\r\n        '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:before': {\r\n            borderBottomColor: '#999999',\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nconst StyledSelectFC = withStyles({\r\n    root: {\r\n        '& .MuiInputBase-root': {\r\n            color: \"white\",\r\n            marginRight: \"10px\",\r\n            marginLeft: \"20px\",\r\n            marginBottom: \"11px\",\r\n        },\r\n\r\n        '& .MuiFormLabel-root': {\r\n            color: \"#999999\",\r\n            marginLeft: \"20px\",\r\n        },\r\n\r\n        '& label.Mui-focused': {\r\n            color: 'white',\r\n        },\r\n        '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:before': {\r\n            borderBottomColor: '#999999',\r\n        },\r\n        '& .MuiSelect-icon': {\r\n            color: '#999999',\r\n        },\r\n    },\r\n})(FormControl);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 138,\r\n    },\r\n    darkChipListBox: {\r\n        display: 'flex',\r\n    },\r\n    chipListContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(0.5),\r\n        paddingTop: \"12px\",\r\n        width: \"max-content\",\r\n        margin: \"0\",\r\n    },\r\n    chipItem: {\r\n        margin: theme.spacing(0.5),\r\n    }\r\n}));\r\n\r\nexport const DarkTextField = ({ onChange, label, name, type }) => {\r\n    return (\r\n        <StyledTextField\r\n            onChange={onChange}\r\n            label={label}\r\n            name={name}\r\n            type={type}\r\n        />\r\n    );\r\n};\r\n\r\nexport const DarkSelect = ({ onChange, label, name, value, firstVal, collection }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <StyledSelectFC className={classes.formControl}>\r\n            <InputLabel id=\"select-params-label\">{label}</InputLabel>\r\n            <Select\r\n                labelId=\"select-params-label\"\r\n                id=\"select-params\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                defaultValue=\"\"\r\n            >\r\n                {\r\n                    firstVal === undefined ? null :\r\n                        <MenuItem key={0} value={firstVal.id} >{firstVal.name}</MenuItem>\r\n                }\r\n                {collection === undefined ? null :\r\n                    collection.map((item, index) => (\r\n                        <MenuItem key={index + 1} value={item}>{item.name}</MenuItem>\r\n                    ))\r\n                }\r\n            </Select>\r\n        </StyledSelectFC>\r\n    );\r\n};\r\n\r\nexport const DarkChipList = ({ onChange, label, name, value, firstVal, firstLabel, collection, clipListCollection, onDelete }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.darkChipListBox}>\r\n            <StyledSelectFC className={classes.formControl}>\r\n                <InputLabel id=\"select-params-label\">{label}</InputLabel>\r\n                <Select\r\n                    labelId=\"select-params-label\"\r\n                    id=\"select-params\"\r\n                    name={name}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                >\r\n                    {firstVal === undefined ? <div></div> :\r\n                        <MenuItem value={firstVal}>{firstLabel}</MenuItem>\r\n                    }\r\n                    {collection === undefined ? <div></div> :\r\n                        collection.map((item, index) => (\r\n                            <MenuItem id={\"permissionMenuItem\" + item.id} key={index} value={item}>{item.name}</MenuItem>\r\n                        ))\r\n                    }\r\n                </Select>\r\n            </StyledSelectFC>\r\n            <ul className={classes.chipListContainer}>\r\n                {clipListCollection === undefined ? <div></div> :\r\n                    clipListCollection.map((data, index) => {\r\n                        return (\r\n                            <li key={index}>\r\n                                <Chip\r\n                                    className={classes.chipItem}\r\n                                    label={data.name}\r\n                                    onDelete={() => onDelete(data)}\r\n                                />\r\n                            </li>\r\n                        );\r\n                    })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default {\r\n    DarkChipList,\r\n    DarkSelect,\r\n    DarkTextField\r\n};","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\LoginUser.js",[],"C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Services\\AuthService.js",["89"],"import APIURL from './Globals'\r\n\r\nconst login = (loginData) => {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(loginData)\r\n    };\r\n    return fetch(APIURL + 'users/login', requestOptions)\r\n        .then((response) => {\r\n            if (response.ok)\r\n                return response.json();\r\n            else\r\n                return Promise.reject();\r\n        })\r\n        .then(data => {\r\n            localStorage.setItem(\"user\", JSON.stringify(data))\r\n        })\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nexport const authHeader = () => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (user && user.token) {\r\n        return 'Bearer ' + user.token;\r\n    } else {\r\n        return {};\r\n    }\r\n}\r\n\r\nexport const getUserAccess = () => {\r\n    const permissions = getCurrentUser().userDetails.employeeDTO.permissions;\r\n    if (permissions === undefined || permissions.length < 1) {\r\n        return false;\r\n    }\r\n    const isUsserPermit = (premName) => {\r\n        let isPermit = false;\r\n        permissions.forEach(element => {\r\n            if (element.name === premName) {\r\n                isPermit = true;\r\n                return;\r\n            }\r\n        });\r\n        return isPermit;\r\n    }\r\n\r\n    const allowedViews = {\r\n        humanResources: isUsserPermit(\"Human-Resources\"),\r\n        admin: isUsserPermit('Admin'),\r\n        teamManager: isUsserPermit('Team-Manager')\r\n    };\r\n\r\n    if (allowedViews.admin) {\r\n        allowedViews = {\r\n            humanResources: true,\r\n            admin: true,\r\n            teamManager: true\r\n        }\r\n    }\r\n    return allowedViews;\r\n}\r\n\r\nconst testRoles = () => {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() }),\r\n    };\r\n    fetch(APIURL + 'users?page=1&size=4', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => console.log(data))\r\n}\r\n// eslint-disable-next-line\r\nexport default {\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n    authHeader,\r\n    getUserAccess,\r\n    testRoles\r\n};","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\MainComponent.js",["90","91","92","93"],"import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from \"react-router-dom\";\r\nimport EmployeeList from './EmployeeList';\r\nimport Dashboard from './Dashboard';\r\nimport CreateJobApplication from './CreateJobApplication';\r\nimport CreateEmployee from './CreateEmployee';\r\nimport { EmployeeDetails } from './EmployeeDetails';\r\nimport LoginUser from './LoginUser';\r\nimport TeamManager from './TeamManager';\r\nimport UserTasks from './UserTasks';\r\nimport { getUserAccess, logout } from '../Services/AuthService';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        background: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: '1.5rem',\r\n        paddingTop: '5rem',\r\n    },\r\n    linkButtons: {\r\n        textDecoration: \"none\",\r\n        color: \"white\",\r\n    },\r\n}));\r\n\r\nconst MainComponent = () => {\r\n    const [userAccess, setUserAccess] = useState(getUserAccess());\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n\r\n        console.log(userAccess);\r\n    }, []);\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        history.push(\"/login\");\r\n    }\r\n    const classes = useStyles();\r\n    return (\r\n        <Router>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                            Human Resources Manager\r\n                        </Typography>\r\n                        <Button onClick={handleLogout}>Logout</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <Toolbar />\r\n                    <div className={classes.drawerContainer}>\r\n                        <List>\r\n                            {userAccess.humanResources === false ? null :\r\n                                <Link className={classes.linkButtons} to=\"/main/dashboard\">\r\n                                    <ListItem button>\r\n                                        <ListItemText primary=\"Dashboard\" />\r\n                                    </ListItem>\r\n                                </Link>\r\n                            }\r\n                            <Link className={classes.linkButtons} to=\"/main/tasks\">\r\n                                <ListItem button>\r\n                                    <ListItemText primary=\"My Tasks\" />\r\n                                </ListItem>\r\n                            </Link>\r\n                            {userAccess.humanResources === false ? null :\r\n                                <Link className={classes.linkButtons} to=\"/main/employees\">\r\n                                    <ListItem button>\r\n                                        <ListItemText primary=\"Employees\" />\r\n                                    </ListItem>\r\n                                </Link>\r\n                            }\r\n                            {userAccess.humanResources === false ? null :\r\n                                <Link className={classes.linkButtons} to=\"/main/create-employee\">\r\n                                    <ListItem button>\r\n                                        <ListItemText primary=\"Create Employee\" />\r\n                                    </ListItem>\r\n                                </Link>\r\n                            }\r\n                            {userAccess.teamManager === false ? null :\r\n                                <Link className={classes.linkButtons} to=\"/main/team-manager\">\r\n                                    <ListItem button>\r\n                                        <ListItemText primary=\"Team-Manager\" />\r\n                                    </ListItem>\r\n                                </Link>\r\n                            }\r\n                            {userAccess.humanResources === false ? null :\r\n                                <Link className={classes.linkButtons} to=\"/main/applications\">\r\n                                    <ListItem button>\r\n                                        <ListItemText primary=\"Applications\" />\r\n                                    </ListItem>\r\n                                </Link>\r\n                            }\r\n                            <Link className={classes.linkButtons} to=\"/login\">\r\n                                <ListItem button>\r\n                                    <ListItemText primary=\"Login\" />\r\n                                </ListItem>\r\n                            </Link>\r\n                        </List>\r\n                    </div>\r\n                </Drawer>\r\n                <main className={classes.content}>\r\n                    <Switch>\r\n                        <Route path=\"/main/dashboard\">\r\n                            <Dashboard />\r\n                        </Route>\r\n                        <Route path=\"/main/tasks\">\r\n                            <UserTasks />\r\n                        </Route>\r\n                        <Route path=\"/main/create-employee\">\r\n                            <CreateEmployee />\r\n                        </Route>\r\n                        <Route path=\"/main/employees\" >\r\n                            <EmployeeList />\r\n                        </Route>\r\n                        <Route path=\"/main/employee-details/:id\" >\r\n                            <EmployeeDetails />\r\n                        </Route>\r\n                        <Route path=\"/main/team-manager\">\r\n                            <TeamManager />\r\n                        </Route>\r\n                    </Switch>\r\n                </main>\r\n            </div >\r\n        </Router >\r\n    );\r\n}\r\nexport default MainComponent;","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\Dashboard.js",["94","95"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport APIURL from '../Services/Globals'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.progressBox} position=\"relative\" display=\"inline-flex\">\r\n            <CircularProgress className={classes.progressBox} variant=\"determinate\" {...props} />\r\n            <Box\r\n                top={0}\r\n                left={0}\r\n                bottom={0}\r\n                right={0}\r\n                position=\"absolute\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <Typography variant=\"h5\" component=\"div\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        backgroundColor: theme.palette.grey[400],\r\n        color: \"black\",\r\n    },\r\n}))(TableCell)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: '1.5rem',\r\n        width: '100%',\r\n        background: theme.palette.grey[800],\r\n        color: \"white\",\r\n    },\r\n    remoteWorkBox: {\r\n        marginTop: '1.5rem',\r\n        width: \"307px\",\r\n        padding: \"10px\",\r\n        background: theme.palette.grey[800],\r\n        color: \"white\",\r\n    },\r\n    statsBox: {\r\n        marginTop: '1.5rem',\r\n        marginLeft: '1.5rem',\r\n        width: \"120px\",\r\n        height: \"60px\",\r\n        padding: \"12px\",\r\n        position: \"relative\",\r\n        background: theme.palette.grey[800],\r\n        color: \"white\",\r\n    },\r\n    progressBox: {\r\n        width: \"100% !important\",\r\n        height: \"100% !important\",\r\n    },\r\n    container: {\r\n        maxHeight: 540,\r\n    },\r\n    button: {\r\n        background: theme.palette.grey[300],\r\n        padding: \".4rem\",\r\n        \"margin-left\": \".2rem\",\r\n        \"margin-right\": \".2rem\",\r\n        color: theme.palette.grey[800]\r\n    },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n    const classes = useStyles();\r\n    const [employees, setEmployees] = useState([]);\r\n    const [stats, setStats] = useState();\r\n    const [progress, setProgress] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        if (stats !== undefined) {\r\n            const timer = setInterval(() => {\r\n                setProgress((prevProgress) => (prevProgress === stats.remoteEmploeesPercentage\r\n                    ? stats.remoteEmploeesPercentage\r\n                    : prevProgress + 1));\r\n            }, 45);\r\n            return () => {\r\n                clearInterval(timer);\r\n            };\r\n        }\r\n    }, [stats]);\r\n\r\n    useEffect(() => {\r\n        console.log(APIURL);\r\n        getEmploees(1, 5);\r\n        getStats();\r\n    }, []);\r\n\r\n    const getEmploees = async (page, size) => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        await fetch(APIURL +\r\n            `employee/all?page=${page}&size=${size}&order=date-desc`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => (setEmployees(data.items), console.log(data.items)));\r\n    }\r\n\r\n    const getStats = async () => {\r\n        const requestOptions = {\r\n            method: 'Get'\r\n        };\r\n        await fetch(APIURL + `home/stats`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => (setStats(data)));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {stats === undefined ? <div></div> :\r\n                <Grid container>\r\n                    <Card className={classes.remoteWorkBox}>\r\n                        <Grid container item spacing={4}>\r\n                            <Grid item xs={7} >\r\n                                <Typography noWrap variant=\"h5\">{stats.totalRemoteEmployees} Employees</Typography>\r\n                                <Typography noWrap variant=\"subtitle1\">Work Remotely</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                                <CircularProgressWithLabel value={progress} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Card>\r\n                    <Card className={classes.statsBox}>\r\n                        <Typography noWrap variant=\"h5\">{stats.totalEmployees}</Typography>\r\n                        <Typography noWrap variant=\"subtitle1\">Total Employees</Typography>\r\n                    </Card>\r\n                    <Card className={classes.statsBox}>\r\n                        <Typography noWrap variant=\"h5\">{stats.totalJobApplications}</Typography>\r\n                        <Typography noWrap variant=\"subtitle1\">Job Applicatios</Typography>\r\n                    </Card>\r\n                </Grid>\r\n            }\r\n            {employees === undefined ? <div></div> :\r\n                <Card className={classes.root}>\r\n                    <CardHeader\r\n                        title=\"Newly Hired Employees:\"\r\n                    />\r\n\r\n                    <TableContainer className={classes.container}>\r\n                        <Table stickyHeader aria-label=\"sticky table\" >\r\n                            <TableHead>\r\n                                <TableRow >\r\n                                    <StyledTableCell align=\"center\">\r\n                                        #\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        ID\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Name\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Surname\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Email\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Position\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Department\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Remote Work\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Employment Date\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell>\r\n                                    </StyledTableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody >\r\n                                {employees.map((employee, index) => (\r\n                                    <TableRow hover key={employee.id}>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {index + 1}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.id}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.person.name}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.person.surname}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.person.email}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.position.name}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.department.name}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.remoteWork === true ?\r\n                                                <CheckCircleIcon /> : <CloseIcon />}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.employmentDate.toString().split('T')[0]}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            <Link to={{ pathname: `/main/employee-details/${employee.id}` }}>\r\n                                                <IconButton className={classes.button} size=\"small\" aria-label=\"view\">\r\n                                                    <VisibilityIcon />\r\n                                                </IconButton>\r\n                                            </Link>\r\n                                        </StyledTableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Card>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default Dashboard;","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Services\\Globals.js",[],"C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\TeamManager.js",["96","97","98"],"import React, { useEffect, useState } from \"react\";\r\nimport APIURL from '../Services/Globals';\r\n\r\nconst TeamManager = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Team Manager</h2>\r\n        </div>\r\n    );\r\n}\r\nexport default TeamManager;","C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\StartPage.js",[],"C:\\Users\\Komputer\\source\\repos\\HumanResourcesManager\\human-resources-manager-client\\src\\Components\\UserTasks.js",["99","100","101","102","103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":2,"column":17,"nodeType":"110","messageId":"111","endLine":2,"endColumn":26},{"ruleId":"108","severity":1,"message":"112","line":2,"column":28,"nodeType":"110","messageId":"111","endLine":2,"endColumn":36},{"ruleId":"108","severity":1,"message":"113","line":3,"column":50,"nodeType":"110","messageId":"111","endLine":3,"endColumn":54},{"ruleId":"114","severity":1,"message":"115","line":102,"column":8,"nodeType":"116","endLine":102,"endColumn":27,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"118","line":106,"column":8,"nodeType":"116","endLine":106,"endColumn":10,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":118,"column":52,"nodeType":"122","messageId":"123","endLine":118,"endColumn":53},{"ruleId":"124","severity":1,"message":"125","line":88,"column":13,"nodeType":"126","messageId":"127","endLine":88,"endColumn":49,"fix":"128"},{"ruleId":"114","severity":1,"message":"129","line":90,"column":8,"nodeType":"116","endLine":90,"endColumn":29,"suggestions":"130"},{"ruleId":"114","severity":1,"message":"131","line":58,"column":8,"nodeType":"116","endLine":58,"endColumn":10,"suggestions":"132"},{"ruleId":"108","severity":1,"message":"133","line":12,"column":11,"nodeType":"110","messageId":"111","endLine":12,"endColumn":29},{"ruleId":"108","severity":1,"message":"134","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":13},{"ruleId":"135","severity":1,"message":"136","line":173,"column":1,"nodeType":"137","endLine":177,"endColumn":3},{"ruleId":"138","severity":1,"message":"139","line":62,"column":9,"nodeType":"110","messageId":"140","endLine":62,"endColumn":21},{"ruleId":"108","severity":1,"message":"141","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":28},{"ruleId":"108","severity":1,"message":"142","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":17},{"ruleId":"108","severity":1,"message":"143","line":56,"column":24,"nodeType":"110","messageId":"111","endLine":56,"endColumn":37},{"ruleId":"114","severity":1,"message":"144","line":61,"column":8,"nodeType":"116","endLine":61,"endColumn":10,"suggestions":"145"},{"ruleId":"108","severity":1,"message":"146","line":16,"column":8,"nodeType":"110","messageId":"111","endLine":16,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":132,"column":52,"nodeType":"122","messageId":"123","endLine":132,"endColumn":53},{"ruleId":"108","severity":1,"message":"109","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"112","line":1,"column":28,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"147","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"124","severity":1,"message":"148","line":41,"column":9,"nodeType":"126","messageId":"127","endLine":46,"endColumn":10,"fix":"149"},{"ruleId":"124","severity":1,"message":"150","line":47,"column":9,"nodeType":"126","messageId":"127","endLine":52,"endColumn":10,"fix":"151"},{"ruleId":"124","severity":1,"message":"152","line":53,"column":9,"nodeType":"126","messageId":"127","endLine":58,"endColumn":10,"fix":"153"},{"ruleId":"154","severity":1,"message":"155","line":68,"column":17,"nodeType":"156","messageId":"157","endLine":78,"endColumn":18},{"ruleId":"114","severity":1,"message":"158","line":82,"column":8,"nodeType":"116","endLine":82,"endColumn":10,"suggestions":"159"},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEmploees'. Either include it or remove the dependency array.","ArrayExpression",["162"],"React Hook useEffect has a missing dependency: 'getSearchProps'. Either include it or remove the dependency array.",["163"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-useless-computed-key","Unnecessarily computed property ['permissions'] found.","Property","unnecessarilyComputedProperty",{"range":"164","text":"165"},"React Hook useEffect has a missing dependency: 'employee'. Either include it or remove the dependency array. You can also do a functional update 'setEmployee(e => ...)' if you only need 'employee' in the 'setEmployee' call.",["166"],"React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["167"],"'PostJobApplication' is assigned a value but never used.","'Paper' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-const-assign","'allowedViews' is constant.","const","'CreateJobApplication' is defined but never used.","'LoginUser' is defined but never used.","'setUserAccess' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userAccess'. Either include it or remove the dependency array.",["168"],"'Button' is defined but never used.","'APIURL' is defined but never used.","Unnecessarily computed property ['completed'] found.",{"range":"169","text":"170"},"Unnecessarily computed property ['requested'] found.",{"range":"171","text":"172"},"Unnecessarily computed property ['inprogress'] found.",{"range":"173","text":"174"},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'adddItemsToColumn'. Either include it or remove the dependency array.",["175"],"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},[2476,2491],"'permissions'",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},[1333,1346],"'completed'",[1500,1513],"'requested'",[1667,1681],"'inprogress'",{"desc":"186","fix":"187"},"Update the dependencies array to be: [getEmploees, page, rowsPerPage]",{"range":"188","text":"189"},"Update the dependencies array to be: [getSearchProps]",{"range":"190","text":"191"},"Update the dependencies array to be: [employee, employeePermissions]",{"range":"192","text":"193"},"Update the dependencies array to be: [params.id]",{"range":"194","text":"195"},"Update the dependencies array to be: [userAccess]",{"range":"196","text":"197"},"Update the dependencies array to be: [adddItemsToColumn]",{"range":"198","text":"199"},[3560,3579],"[getEmploees, page, rowsPerPage]",[3641,3643],"[getSearchProps]",[2533,2554],"[employee, employeePermissions]",[1524,1526],"[params.id]",[1904,1906],"[userAccess]",[2626,2628],"[adddItemsToColumn]"]