{"ast":null,"code":"import APIURL from './Globals';\nexport const getTasks = async (page, size, employeeid, taskName, status, bStartTime, aStartTime) => {\n  let getTasksUrl = `tasks?page=${page}&size=${size}&employeeid=${employeeid}`;\n\n  if (taskName !== undefined || taskName !== '') {\n    getTasksUrl += `&name=${taskName}`;\n  }\n\n  if (status !== undefined || status !== '') {\n    getTasksUrl += `&status=${status}`;\n  }\n\n  if (bStartTime !== undefined) {\n    getTasksUrl += `&b_start_time=${bStartTime}`;\n  }\n\n  ;\n\n  if (aStartTime !== undefined) {\n    getTasksUrl += `&a_start_time=${aStartTime}`;\n  }\n\n  ;\n  const requestOptions = {\n    method: 'Get',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return await fetch(APIURL + getTasksUrl, requestOptions).then(response => {\n    if (response.ok) return response.json();else return Promise.reject();\n  }).then(data => {\n    return data;\n  });\n};\nexport const changeTaskStatus = async (taskID, status) => {\n  const requestOptions = {\n    method: 'Put',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return await fetch(APIURL + `tasks?id=${taskID}&status=${status}`, requestOptions).then(response => {\n    if (response.ok) return response.json();else return Promise.reject();\n  }).then(data => {\n    return data;\n  });\n}; // eslint-disable-next-line\n\nexport default {\n  getTasks,\n  changeTaskStatus\n};","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Services/TasksService.js"],"names":["APIURL","getTasks","page","size","employeeid","taskName","status","bStartTime","aStartTime","getTasksUrl","undefined","requestOptions","method","headers","fetch","then","response","ok","json","Promise","reject","data","changeTaskStatus","taskID"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AAEA,OAAO,MAAMC,QAAQ,GAAG,OAAOC,IAAP,EAAaC,IAAb,EAAmBC,UAAnB,EAA+BC,QAA/B,EAAyCC,MAAzC,EAAiDC,UAAjD,EAA6DC,UAA7D,KAA4E;AAChG,MAAIC,WAAW,GAAI,cAAaP,IAAK,SAAQC,IAAK,eAAcC,UAAW,EAA3E;;AAEA,MAAIC,QAAQ,KAAKK,SAAb,IAA0BL,QAAQ,KAAK,EAA3C,EAA+C;AAC3CI,IAAAA,WAAW,IAAK,SAAQJ,QAAS,EAAjC;AACH;;AAED,MAAIC,MAAM,KAAKI,SAAX,IAAwBJ,MAAM,KAAK,EAAvC,EAA2C;AACvCG,IAAAA,WAAW,IAAK,WAAUH,MAAO,EAAjC;AACH;;AAED,MAAIC,UAAU,KAAKG,SAAnB,EAA8B;AAC1BD,IAAAA,WAAW,IAAK,iBAAgBF,UAAW,EAA3C;AACH;;AAAA;;AAED,MAAIC,UAAU,KAAKE,SAAnB,EAA8B;AAC1BD,IAAAA,WAAW,IAAK,iBAAgBD,UAAW,EAA3C;AACH;;AAAA;AAED,QAAMG,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,KADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAFU,GAAvB;AAIA,SAAO,MAAMC,KAAK,CAACd,MAAM,GAAGS,WAAV,EACdE,cADc,CAAL,CAEXI,IAFW,CAELC,QAAD,IAAc;AACjB,QAAIA,QAAQ,CAACC,EAAb,EACI,OAAOD,QAAQ,CAACE,IAAT,EAAP,CADJ,KAGI,OAAOC,OAAO,CAACC,MAAR,EAAP;AACP,GAPY,EAQRL,IARQ,CAQHM,IAAI,IAAI;AACV,WAAOA,IAAP;AACH,GAVQ,CAAb;AAWH,CAlCM;AAoCP,OAAO,MAAMC,gBAAgB,GAAG,OAAOC,MAAP,EAAejB,MAAf,KAA0B;AACtD,QAAMK,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,KADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAFU,GAAvB;AAIA,SAAO,MAAMC,KAAK,CAACd,MAAM,GACpB,YAAWuB,MAAO,WAAUjB,MAAO,EADtB,EAEdK,cAFc,CAAL,CAGXI,IAHW,CAGLC,QAAD,IAAc;AACjB,QAAIA,QAAQ,CAACC,EAAb,EACI,OAAOD,QAAQ,CAACE,IAAT,EAAP,CADJ,KAGI,OAAOC,OAAO,CAACC,MAAR,EAAP;AACP,GARY,EASRL,IATQ,CASHM,IAAI,IAAI;AACV,WAAOA,IAAP;AACH,GAXQ,CAAb;AAYH,CAjBM,C,CAmBP;;AACA,eAAe;AACXpB,EAAAA,QADW;AAEXqB,EAAAA;AAFW,CAAf","sourcesContent":["import APIURL from './Globals'\r\n\r\nexport const getTasks = async (page, size, employeeid, taskName, status, bStartTime, aStartTime) => {\r\n    let getTasksUrl = `tasks?page=${page}&size=${size}&employeeid=${employeeid}`;\r\n\r\n    if (taskName !== undefined || taskName !== '') {\r\n        getTasksUrl += `&name=${taskName}`\r\n    }\r\n\r\n    if (status !== undefined || status !== '') {\r\n        getTasksUrl += `&status=${status}`\r\n    }\r\n\r\n    if (bStartTime !== undefined) {\r\n        getTasksUrl += `&b_start_time=${bStartTime}`\r\n    };\r\n\r\n    if (aStartTime !== undefined) {\r\n        getTasksUrl += `&a_start_time=${aStartTime}`\r\n    };\r\n\r\n    const requestOptions = {\r\n        method: 'Get',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n    return await fetch(APIURL + getTasksUrl,\r\n        requestOptions\r\n    ).then((response) => {\r\n        if (response.ok)\r\n            return response.json();\r\n        else\r\n            return Promise.reject();\r\n    })\r\n        .then(data => {\r\n            return data\r\n        })\r\n}\r\n\r\nexport const changeTaskStatus = async (taskID, status) => {\r\n    const requestOptions = {\r\n        method: 'Put',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n    return await fetch(APIURL +\r\n        `tasks?id=${taskID}&status=${status}`,\r\n        requestOptions\r\n    ).then((response) => {\r\n        if (response.ok)\r\n            return response.json();\r\n        else\r\n            return Promise.reject();\r\n    })\r\n        .then(data => {\r\n            return data\r\n        })\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    getTasks,\r\n    changeTaskStatus\r\n};"]},"metadata":{},"sourceType":"module"}