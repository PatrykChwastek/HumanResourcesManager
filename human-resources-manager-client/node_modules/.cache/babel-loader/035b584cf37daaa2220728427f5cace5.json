{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport APIURL from './Globals';\nimport React, { useEffect, useState } from \"react\";\n\nconst getAllPermissions = () => {};\n\nexport const AllPermissions = () => {\n  _s();\n\n  const [permissions, setPermissions] = useState([]);\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  () => fetch(APIURL + 'permissions', requestOptions).then(response => response.json()).then(responseData => {\n    setPermissions(responseData);\n  }).catch(error => console.warn(error));\n\n  return permissions;\n};\n\n_s(AllPermissions, \"+rteAw63k/TB7UxsCYtQoSJQMY8=\");\n\n_c = AllPermissions;\nexport default {\n  AllPermissions\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPermissions\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Services/PermissonsService.js"],"names":["APIURL","React","useEffect","useState","getAllPermissions","AllPermissions","permissions","setPermissions","requestOptions","method","headers","fetch","then","response","json","responseData","catch","error","console","warn"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAGA,MAAMC,iBAAiB,GAAG,MAAM,CAE/B,CAFD;;AAIA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMK,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,KADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAFU,GAAvB;;AAKA,QAAMC,KAAK,CAACX,MAAM,GAAG,aAAV,EAAyBQ,cAAzB,CAAL,CACDI,IADC,CACKC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADlB,EAEDF,IAFC,CAEKG,YAAD,IAAkB;AACpBR,IAAAA,cAAc,CAACQ,YAAD,CAAd;AACH,GAJC,EAKDC,KALC,CAKKC,KAAK,IAAIC,OAAO,CAACC,IAAR,CAAaF,KAAb,CALd,CAAN;;AAOA,SAAOX,WAAP;AACH,CAhBM;;GAAMD,c;;KAAAA,c;AAkBb,eAAe;AACXA,EAAAA;AADW,CAAf","sourcesContent":["import APIURL from './Globals'\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\nconst getAllPermissions = () => {\r\n\r\n}\r\n\r\nexport const AllPermissions = () => {\r\n    const [permissions, setPermissions] = useState([]);\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n\r\n    () => fetch(APIURL + 'permissions', requestOptions)\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n            setPermissions(responseData);\r\n        })\r\n        .catch(error => console.warn(error));\r\n\r\n    return permissions;\r\n};\r\n\r\nexport default {\r\n    AllPermissions\r\n};"]},"metadata":{},"sourceType":"module"}