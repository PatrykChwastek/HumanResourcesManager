{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\Tasks\\\\TasksList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport APIURL from '../../Services/Globals';\nimport { getCurrentUser } from '../../Services/AuthService';\nimport moment from \"moment\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getTasks, changeTaskStatus } from \"../../Services/TasksService\";\nimport { DarkTextField, DarkSelect } from '../GlobalComponents';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Accordion, AccordionSummary, AccordionDetails, Chip } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from \"@date-io/moment\";\nimport Checkbox from '@material-ui/core/Checkbox';\nconst useStyles = makeStyles(theme => ({\n  filterBox: {\n    padding: \".1rem\",\n    paddingLeft: \"1.1rem\",\n    paddingRight: \"1.1rem\",\n    borderRadius: '4px',\n    marginLeft: '8px',\n    width: \"max-content\",\n    background: theme.palette.grey[800],\n    boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\n    \"& .MuiAccordion-root\": {\n      margin: \"0px\",\n      color: \"black\",\n      backgroundColor: '#bdbdbd',\n      borderRadius: \"4px\",\n      width: '243px',\n      boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\"\n    },\n    \"& .MuiCollapse-root\": {\n      position: \"absolute\",\n      top: \"40px\",\n      paddingTop: \"20px\",\n      backgroundColor: '#bdbdbd',\n      zIndex: '1',\n      borderRadius: \"4px\",\n      boxShadow: \"-1px 2px 1px 0px rgb(0 0 0 / 20%), -2px 3px 3px 0px rgb(0 0 0 / 35%), 1px 2px 1px 1px rgb(0 0 0 / 30%)\"\n    },\n    \"& .MuiAccordionDetails-root\": {\n      flexWrap: 'wrap'\n    }\n  },\n  filterDate: {\n    padding: '0 6px',\n    margin: '3px',\n    display: 'flex',\n    width: '190px'\n  },\n  whiteText: {\n    color: \"white\",\n    margin: \"0px\",\n    marginRight: \"8px\"\n  },\n  tasksContainer: {\n    margin: '0 auto',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  listComponent: {\n    margin: '8px',\n    width: '100%',\n    paddingTop: 0,\n    backgroundColor: theme.palette.background.paper,\n    color: 'white',\n    boxShadow: theme.shadows[2],\n    borderRadius: '4px',\n    display: \"flex\",\n    flexDirection: 'column'\n  },\n  pagination: {\n    display: 'grid',\n    padding: '8px',\n    marginTop: 'auto',\n    \"& .Mui-selected\": {\n      color: 'white',\n      backgroundColor: 'rgb(63 81 181 / 80%)'\n    },\n    \"& .MuiPaginationItem-outlined\": {\n      boxShadow: theme.shadows[2],\n      border: '1px solid rgb(149 149 149 / 23%)'\n    }\n  },\n  tasksDetailsCol: {\n    margin: \"8px\",\n    width: '100%',\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '6px 0',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2],\n    borderRadius: '3px 3px 0 0',\n    width: '100%'\n  },\n  statusContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    margin: '4px',\n    marginLeft: '15px'\n  },\n  chipContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignContent: 'space-around',\n    alignItems: 'stretch',\n    flexwrap: 'nowrap',\n    justifyContent: 'space-evenly'\n  },\n  timeChip: {\n    margin: \"2px\",\n    boxShadow: theme.shadows[2],\n    fontSize: \"12px\",\n    fontWeight: \"550\"\n  },\n  subtaskAccordion: {\n    backgroundColor: '#bdbdbd',\n    color: \"black\",\n    marginTop: \"8px\",\n    marginBottom: '4px',\n    borderRadius: '4px',\n    padding: '0px',\n    '&::before': {\n      height: 0\n    }\n  },\n  buttonSection: {\n    display: 'grid',\n    padding: '16px',\n    marginTop: 'auto',\n    justifyItems: 'center',\n    \"& .MuiButton-label\": {\n      paddingLeft: '4px',\n      paddingRight: '4px'\n    }\n  }\n}));\nconst taskStatusAll = [{\n  id: 1,\n  name: 'Completed'\n}, {\n  id: 2,\n  name: 'Requested'\n}, {\n  id: 3,\n  name: 'In-Progress'\n}];\nconst allowedStatuses = taskStatusAll;\n\nconst TasksList = () => {\n  _s();\n\n  const classes = useStyles();\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [tasks, setTasks] = useState([]);\n  const [expandedSubTask, setExpandedSubTask] = useState('');\n  const [openStatusSel, setOpenStatusSel] = useState(false);\n  const [statusSelIndex, setStatusSelIndex] = useState(1);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    size: 10,\n    totalPages: 1\n  });\n  const [filterParams, setFilterParams] = useState({\n    name: \"\",\n    status: \"\",\n    isBStartTime: false,\n    bStartTime: undefined,\n    isAStartTime: false,\n    aStartTime: undefined,\n    isBDeadline: false,\n    bDeadline: undefined,\n    isADeadline: false,\n    aDeadline: undefined\n  });\n  useEffect(() => {\n    loadTasksList(pagination.page, pagination.size);\n  }, []);\n\n  const loadTasksList = (page, size) => {\n    getTasks(page, size, 12).then(data => {\n      setPagination({\n        page: page,\n        size: size,\n        totalPages: data.totalPages - 1\n      });\n      setTasks(data.items);\n    });\n  };\n\n  const handleChangeFilterParams = e => {\n    if (e.target.type === \"checkbox\") {\n      e.target.value = e.target.checked;\n    }\n  };\n\n  const handleApplyFilters = () => {\n    console.log('--------------------------');\n    console.log(filterParams);\n  };\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const handlePageChange = (event, value) => {\n    loadTasksList(value, pagination.size);\n  };\n\n  const handleSubTaskExpand = taskId => (event, newExpanded) => {\n    setExpandedSubTask(newExpanded ? taskId : false);\n  };\n\n  const hendleChangeStatus = () => {\n    changeTaskStatus(tasks[selectedIndex].id, allowedStatuses[statusSelIndex].name).then(d => {\n      loadTasksList(pagination.page, pagination.size);\n    }, e => {\n      console.log(\"status change error\");\n    });\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setStatusSelIndex(index);\n    setOpenStatusSel(false);\n  };\n\n  const handleStatSellToggle = () => {\n    setOpenStatusSel(prevOpen => !prevOpen);\n  };\n\n  const handleStatSellClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpenStatusSel(false);\n  };\n\n  const changeCipColor = status => {\n    return {\n      boxShadow: 'rgb(0 0 0 / 20%) 0px 0px 1px -2px, rgb(0 0 0 / 14%) 0px 1px 2px 0px, rgb(0 0 0 / 12%) 0px 0px 5px 0px',\n      fontSize: \"12px\",\n      fontWeight: \"550\",\n      padding: \"5px\",\n      minWidth: '92px',\n      color: status === \"In-Progress\" ? \"white\" : \"black\",\n      background: status === \"In-Progress\" ? \"rgb(56 81 216)\" : status === \"Requested\" ? \"rgb(231 170 35)\" : \"rgb(0 158 7)\"\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.filterBox,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.whiteText,\n        children: \"Tasks From: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n        onChange: handleChangeFilterParams,\n        label: \"Task Name...\",\n        name: \"taskName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkSelect, {\n        label: \"Status\",\n        name: \"statusSel\",\n        collection: allowedStatuses // value={searchParams.department}\n        ,\n        onChange: handleChangeFilterParams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n            style: {\n              color: \"black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 37\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Select Task by Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: classes.filterDate,\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              color: \"secondary\",\n              name: \"isBstartTime\",\n              checked: filterParams.isBStartTime,\n              onChange: handleChangeFilterParams,\n              inputProps: {\n                'aria-label': 'secondary checkbox'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n              utils: MomentUtils,\n              children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                disableToolbar: true,\n                name: \"bStartTime\",\n                variant: \"inline\",\n                format: \"yyyy-MM-DD\",\n                margin: \"normal\",\n                id: \"date-picker-inline\",\n                label: \"Before Start Time\",\n                value: filterParams.bStartTime,\n                onChange: date => {\n                  setFilterParams({ ...filterParams,\n                    isBStartTime: true,\n                    bStartTime: date.format('yyyy-MM-DD')\n                  });\n                },\n                KeyboardButtonProps: {\n                  'aria-label': 'change date'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.filterDate,\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              defaultChecked: true,\n              color: \"secondary\",\n              inputProps: {\n                'aria-label': 'secondary checkbox'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n              utils: MomentUtils,\n              children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                disableToolbar: true,\n                name: \"datePicker\",\n                variant: \"inline\",\n                format: \"yyyy-MM-dd\",\n                margin: \"normal\",\n                id: \"date-picker-inline\",\n                label: \"After Start Time\" // value={employee.employmentDate}\n                // onChange={headleDateChange}\n                ,\n                KeyboardButtonProps: {\n                  'aria-label': 'change date'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.filterDate,\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              defaultChecked: true,\n              color: \"secondary\",\n              inputProps: {\n                'aria-label': 'secondary checkbox'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n              utils: MomentUtils,\n              children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                disableToolbar: true,\n                name: \"datePicker\",\n                variant: \"inline\",\n                format: \"yyyy-MM-dd\",\n                margin: \"normal\",\n                id: \"date-picker-inline\",\n                label: \"Before Deadline\" // value={employee.employmentDate}\n                // onChange={headleDateChange}\n                ,\n                KeyboardButtonProps: {\n                  'aria-label': 'change date'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.filterDate,\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              defaultChecked: true,\n              color: \"secondary\",\n              inputProps: {\n                'aria-label': 'secondary checkbox'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n              utils: MomentUtils,\n              children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                disableToolbar: true,\n                name: \"datePicker\",\n                variant: \"inline\",\n                format: \"yyyy-MM-dd\",\n                margin: \"normal\",\n                id: \"date-picker-inline\",\n                label: \"After Deadline\" // value={employee.employmentDate}\n                // onChange={headleDateChange}\n                ,\n                KeyboardButtonProps: {\n                  'aria-label': 'change date'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginLeft: '15px'\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleApplyFilters,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this), tasks.length === 0 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.tasksContainer,\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        component: \"nav\",\n        className: classes.listComponent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"List of Tasks:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 25\n        }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            selected: selectedIndex === index,\n            onClick: event => handleListItemClick(event, index),\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: task.status,\n              style: changeCipColor(task.status)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            style: {\n              width: \"100%\",\n              margin: \"0\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 33\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n          className: classes.pagination,\n          count: pagination.totalPages,\n          page: pagination.page,\n          onChange: handlePageChange,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.tasksDetailsCol,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            noWrap: true,\n            variant: \"h5\",\n            children: tasks[selectedIndex].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.statusContainer,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: tasks[selectedIndex].status,\n            style: {\n              boxShadow: '0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)',\n              fontSize: \"14px\",\n              fontWeight: \"550\",\n              margin: \"2px\",\n              marginLeft: \"10px\",\n              marginRight: \"10px\",\n              width: \"99%\",\n              color: tasks[selectedIndex].status === \"In-Progress\" ? \"white\" : \"black\",\n              background: tasks[selectedIndex].status === \"In-Progress\" ? \"rgb(56 81 216)\" : tasks[selectedIndex].status === \"Requested\" ? \"rgb(231 170 35)\" : \"rgb(0 158 7)\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          style: {\n            paddingTop: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            style: {\n              width: \"100%\",\n              margin: \"12px\",\n              marginLeft: \"0\",\n              marginTop: '2px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.chipContainer,\n            children: [/*#__PURE__*/_jsxDEV(Chip, {\n              className: classes.timeChip,\n              label: \"Start: \" + moment(tasks[selectedIndex].startTime).format(\"YYYY-MM-DD\"),\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              className: classes.timeChip,\n              label: \"Deadline: \" + moment(tasks[selectedIndex].deadline).format(\"YYYY-MM-DD\"),\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            style: {\n              width: \"100%\",\n              margin: \"12px\",\n              marginLeft: \"0\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: tasks[selectedIndex].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            style: {\n              width: \"100%\",\n              margin: \"12px\",\n              marginLeft: \"0\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            noWrap: true,\n            variant: \"subtitle1\",\n            children: \"Subtasks:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 29\n          }, this), tasks[selectedIndex].subtasks.map((subtask, index) => /*#__PURE__*/_jsxDEV(Accordion, {\n            expanded: expandedSubTask === subtask.id,\n            onChange: handleSubTaskExpand(subtask.id),\n            className: classes.subtaskAccordion,\n            children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n              expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n                style: {\n                  color: \"black\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 53\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: subtask.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: subtask.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 37\n            }, this)]\n          }, subtask.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttonSection,\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            style: {\n              width: \"100%\",\n              margin: \"12px\",\n              marginLeft: \"0\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            variant: \"contained\",\n            color: \"primary\",\n            ref: anchorRef,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: hendleChangeStatus,\n              children: allowedStatuses[statusSelIndex].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              size: \"small\",\n              \"aria-controls\": openStatusSel ? 'split-button-menu' : undefined,\n              \"aria-expanded\": openStatusSel ? 'true' : undefined,\n              \"aria-label\": \"select merge strategy\",\n              \"aria-haspopup\": \"menu\",\n              onClick: handleStatSellToggle,\n              children: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Popper, {\n            open: openStatusSel,\n            anchorEl: anchorRef.current,\n            role: undefined,\n            transition: true,\n            disablePortal: true,\n            children: ({\n              TransitionProps,\n              placement\n            }) => /*#__PURE__*/_jsxDEV(Grow, { ...TransitionProps,\n              style: {\n                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n              },\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n                  onClickAway: handleStatSellClose,\n                  children: /*#__PURE__*/_jsxDEV(MenuList, {\n                    id: \"split-button-menu\",\n                    children: allowedStatuses.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      //  disabled={index === 2}\n                      selected: index === statusSelIndex,\n                      onClick: event => handleMenuItemClick(event, index),\n                      children: option.name\n                    }, option.name, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 544,\n                      columnNumber: 57\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TasksList, \"ncoAbXGkD3frYLpsc0kSQpm7dY8=\", false, function () {\n  return [useStyles];\n});\n\n_c = TasksList;\nexport default TasksList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksList\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/Tasks/TasksList.js"],"names":["React","useEffect","useState","APIURL","getCurrentUser","moment","makeStyles","getTasks","changeTaskStatus","DarkTextField","DarkSelect","Card","CardContent","Typography","Accordion","AccordionSummary","AccordionDetails","Chip","ExpandMoreIcon","Button","IconButton","List","ListItem","ListItemText","Divider","ButtonGroup","ArrowDropDownIcon","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","Pagination","Toolbar","KeyboardDatePicker","MuiPickersUtilsProvider","MomentUtils","Checkbox","useStyles","theme","filterBox","padding","paddingLeft","paddingRight","borderRadius","marginLeft","width","background","palette","grey","boxShadow","margin","color","backgroundColor","position","top","paddingTop","zIndex","flexWrap","filterDate","display","whiteText","marginRight","tasksContainer","flexDirection","justifyContent","listComponent","paper","shadows","pagination","marginTop","border","tasksDetailsCol","title","text","primary","textAlign","main","statusContainer","chipContainer","alignContent","alignItems","flexwrap","timeChip","fontSize","fontWeight","subtaskAccordion","marginBottom","height","buttonSection","justifyItems","taskStatusAll","id","name","allowedStatuses","TasksList","classes","anchorRef","useRef","selectedIndex","setSelectedIndex","tasks","setTasks","expandedSubTask","setExpandedSubTask","openStatusSel","setOpenStatusSel","statusSelIndex","setStatusSelIndex","setPagination","page","size","totalPages","filterParams","setFilterParams","status","isBStartTime","bStartTime","undefined","isAStartTime","aStartTime","isBDeadline","bDeadline","isADeadline","aDeadline","loadTasksList","then","data","items","handleChangeFilterParams","e","target","type","value","checked","handleApplyFilters","console","log","handleListItemClick","event","index","handlePageChange","handleSubTaskExpand","taskId","newExpanded","hendleChangeStatus","d","handleMenuItemClick","handleStatSellToggle","prevOpen","handleStatSellClose","current","contains","changeCipColor","minWidth","date","format","length","map","task","startTime","deadline","description","subtasks","subtask","TransitionProps","placement","transformOrigin","option"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APIURL from '../../Services/Globals';\r\nimport { getCurrentUser } from '../../Services/AuthService';\r\nimport moment from \"moment\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getTasks, changeTaskStatus } from \"../../Services/TasksService\";\r\nimport { DarkTextField, DarkSelect } from '../GlobalComponents';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Accordion, AccordionSummary, AccordionDetails, Chip } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    filterBox: {\r\n        padding: \".1rem\",\r\n        paddingLeft: \"1.1rem\",\r\n        paddingRight: \"1.1rem\",\r\n        borderRadius: '4px',\r\n        marginLeft: '8px',\r\n        width: \"max-content\",\r\n        background: theme.palette.grey[800],\r\n        boxShadow:\r\n            \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n        \"& .MuiAccordion-root\": {\r\n            margin: \"0px\",\r\n            color: \"black\",\r\n            backgroundColor: '#bdbdbd',\r\n            borderRadius: \"4px\",\r\n            width: '243px',\r\n            boxShadow:\r\n                \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n        },\r\n        \"& .MuiCollapse-root\": {\r\n            position: \"absolute\",\r\n            top: \"40px\",\r\n            paddingTop: \"20px\",\r\n            backgroundColor: '#bdbdbd',\r\n            zIndex: '1',\r\n            borderRadius: \"4px\",\r\n            boxShadow:\r\n                \"-1px 2px 1px 0px rgb(0 0 0 / 20%), -2px 3px 3px 0px rgb(0 0 0 / 35%), 1px 2px 1px 1px rgb(0 0 0 / 30%)\",\r\n        },\r\n        \"& .MuiAccordionDetails-root\": {\r\n            flexWrap: 'wrap'\r\n        }\r\n    },\r\n    filterDate: {\r\n        padding: '0 6px',\r\n        margin: '3px',\r\n        display: 'flex',\r\n        width: '190px'\r\n    },\r\n    whiteText: {\r\n        color: \"white\",\r\n        margin: \"0px\",\r\n        marginRight: \"8px\",\r\n    },\r\n    tasksContainer: {\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center'\r\n    },\r\n    listComponent: {\r\n        margin: '8px',\r\n        width: '100%',\r\n        paddingTop: 0,\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: 'white',\r\n        boxShadow: theme.shadows[2],\r\n        borderRadius: '4px',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n    },\r\n    pagination: {\r\n        display: 'grid',\r\n        padding: '8px',\r\n        marginTop: 'auto',\r\n        \"& .Mui-selected\": {\r\n            color: 'white',\r\n            backgroundColor: 'rgb(63 81 181 / 80%)',\r\n        },\r\n        \"& .MuiPaginationItem-outlined\": {\r\n            boxShadow: theme.shadows[2],\r\n            border: '1px solid rgb(149 149 149 / 23%)'\r\n        }\r\n    },\r\n    tasksDetailsCol: {\r\n        margin: \"8px\",\r\n        width: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '6px 0',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n        borderRadius: '3px 3px 0 0',\r\n        width: '100%',\r\n    },\r\n    statusContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: '4px',\r\n        marginLeft: '15px',\r\n    },\r\n    chipContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignContent: 'space-around',\r\n        alignItems: 'stretch',\r\n        flexwrap: 'nowrap',\r\n        justifyContent: 'space-evenly'\r\n    },\r\n    timeChip: {\r\n        margin: \"2px\",\r\n        boxShadow: theme.shadows[2],\r\n        fontSize: \"12px\",\r\n        fontWeight: \"550\"\r\n\r\n    },\r\n    subtaskAccordion: {\r\n        backgroundColor: '#bdbdbd',\r\n        color: \"black\",\r\n        marginTop: \"8px\",\r\n        marginBottom: '4px',\r\n        borderRadius: '4px',\r\n        padding: '0px',\r\n        '&::before': {\r\n            height: 0\r\n        }\r\n    },\r\n    buttonSection: {\r\n        display: 'grid',\r\n        padding: '16px',\r\n        marginTop: 'auto',\r\n        justifyItems: 'center',\r\n        \"& .MuiButton-label\": {\r\n            paddingLeft: '4px',\r\n            paddingRight: '4px',\r\n        }\r\n    },\r\n}));\r\n\r\nconst taskStatusAll = [{ id: 1, name: 'Completed' }, { id: 2, name: 'Requested' }, { id: 3, name: 'In-Progress' }];\r\nconst allowedStatuses = taskStatusAll;\r\nconst TasksList = () => {\r\n    const classes = useStyles();\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [expandedSubTask, setExpandedSubTask] = useState('');\r\n    const [openStatusSel, setOpenStatusSel] = useState(false);\r\n    const [statusSelIndex, setStatusSelIndex] = useState(1);\r\n    const [pagination, setPagination] = useState({\r\n        page: 1,\r\n        size: 10,\r\n        totalPages: 1\r\n    });\r\n    const [filterParams, setFilterParams] = useState({\r\n        name: \"\",\r\n        status: \"\",\r\n        isBStartTime: false,\r\n        bStartTime: undefined,\r\n        isAStartTime: false,\r\n        aStartTime: undefined,\r\n        isBDeadline: false,\r\n        bDeadline: undefined,\r\n        isADeadline: false,\r\n        aDeadline: undefined\r\n    });\r\n\r\n    useEffect(() => {\r\n        loadTasksList(pagination.page, pagination.size);\r\n    }, []);\r\n\r\n    const loadTasksList = (page, size) => {\r\n        getTasks(page, size, 12).then((data) => {\r\n            setPagination({\r\n                page: page,\r\n                size: size,\r\n                totalPages: data.totalPages - 1,\r\n            })\r\n            setTasks(data.items);\r\n        })\r\n    }\r\n\r\n    const handleChangeFilterParams = e => {\r\n        if (e.target.type === \"checkbox\") {\r\n            e.target.value = e.target.checked\r\n        }\r\n\r\n    }\r\n\r\n    const handleApplyFilters = () => {\r\n        console.log('--------------------------');\r\n        console.log(filterParams);\r\n    }\r\n\r\n    const handleListItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n    };\r\n\r\n    const handlePageChange = (event, value) => {\r\n        loadTasksList(value, pagination.size);\r\n    };\r\n    const handleSubTaskExpand = (taskId) => (event, newExpanded) => {\r\n        setExpandedSubTask(newExpanded ? taskId : false);\r\n    }\r\n\r\n    const hendleChangeStatus = () => {\r\n        changeTaskStatus(tasks[selectedIndex].id, allowedStatuses[statusSelIndex].name)\r\n            .then((d) => { loadTasksList(pagination.page, pagination.size) },\r\n                e => { console.log(\"status change error\") });\r\n    }\r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        setStatusSelIndex(index);\r\n        setOpenStatusSel(false);\r\n    };\r\n\r\n    const handleStatSellToggle = () => {\r\n        setOpenStatusSel((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleStatSellClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpenStatusSel(false);\r\n    };\r\n\r\n    const changeCipColor = (status) => {\r\n        return {\r\n            boxShadow: 'rgb(0 0 0 / 20%) 0px 0px 1px -2px, rgb(0 0 0 / 14%) 0px 1px 2px 0px, rgb(0 0 0 / 12%) 0px 0px 5px 0px',\r\n            fontSize: \"12px\",\r\n            fontWeight: \"550\",\r\n            padding: \"5px\",\r\n            minWidth: '92px',\r\n            color: status === \"In-Progress\" ? \"white\" : \"black\",\r\n            background: status === \"In-Progress\"\r\n                ? \"rgb(56 81 216)\"\r\n                : status === \"Requested\"\r\n                    ? \"rgb(231 170 35)\"\r\n                    : \"rgb(0 158 7)\",\r\n        }\r\n    }\r\n    return (\r\n        <div >\r\n            <Toolbar className={classes.filterBox}>\r\n                <h3 className={classes.whiteText}>Tasks From: </h3>\r\n                <DarkTextField\r\n                    onChange={handleChangeFilterParams}\r\n                    label='Task Name...'\r\n                    name='taskName'\r\n                />\r\n                <DarkSelect\r\n                    label=\"Status\"\r\n                    name=\"statusSel\"\r\n                    collection={allowedStatuses}\r\n                    // value={searchParams.department}\r\n                    onChange={handleChangeFilterParams}\r\n                />\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon style={{ color: \"black\" }} />}\r\n                    >\r\n                        <Typography>\r\n                            Select Task by Date\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Card className={classes.filterDate}>\r\n                            <Checkbox\r\n                                color=\"secondary\"\r\n                                name=\"isBstartTime\"\r\n                                checked={filterParams.isBStartTime}\r\n                                onChange={handleChangeFilterParams}\r\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                            />\r\n                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    name=\"bStartTime\"\r\n                                    variant=\"inline\"\r\n                                    format=\"yyyy-MM-DD\"\r\n                                    margin=\"normal\"\r\n                                    id=\"date-picker-inline\"\r\n                                    label=\"Before Start Time\"\r\n                                    value={filterParams.bStartTime}\r\n                                    onChange={(date) => {\r\n                                        setFilterParams({\r\n                                            ...filterParams,\r\n                                            isBStartTime: true,\r\n                                            bStartTime: date.format('yyyy-MM-DD'),\r\n                                        })\r\n                                    }}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </Card>\r\n                        <Card className={classes.filterDate}>\r\n                            <Checkbox\r\n                                defaultChecked\r\n                                color=\"secondary\"\r\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                            />\r\n                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    name=\"datePicker\"\r\n                                    variant=\"inline\"\r\n                                    format=\"yyyy-MM-dd\"\r\n                                    margin=\"normal\"\r\n                                    id=\"date-picker-inline\"\r\n                                    label=\"After Start Time\"\r\n                                    // value={employee.employmentDate}\r\n                                    // onChange={headleDateChange}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </Card>\r\n                        <Card className={classes.filterDate}>\r\n                            <Checkbox\r\n                                defaultChecked\r\n                                color=\"secondary\"\r\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                            />\r\n                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    name=\"datePicker\"\r\n                                    variant=\"inline\"\r\n                                    format=\"yyyy-MM-dd\"\r\n                                    margin=\"normal\"\r\n                                    id=\"date-picker-inline\"\r\n                                    label=\"Before Deadline\"\r\n                                    // value={employee.employmentDate}\r\n                                    // onChange={headleDateChange}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </Card>\r\n                        <Card className={classes.filterDate}>\r\n                            <Checkbox\r\n                                defaultChecked\r\n                                color=\"secondary\"\r\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                            />\r\n                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    name=\"datePicker\"\r\n                                    variant=\"inline\"\r\n                                    format=\"yyyy-MM-dd\"\r\n                                    margin=\"normal\"\r\n                                    id=\"date-picker-inline\"\r\n                                    label=\"After Deadline\"\r\n                                    // value={employee.employmentDate}\r\n                                    // onChange={headleDateChange}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </Card>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Button\r\n                    style={{ marginLeft: '15px' }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleApplyFilters}\r\n                >Submit</Button>\r\n            </Toolbar>\r\n            {tasks.length === 0 ? null :\r\n                <div className={classes.tasksContainer}>\r\n                    <List component=\"nav\" className={classes.listComponent}>\r\n                        <div className={classes.title}>\r\n                            <Typography variant=\"h6\">\r\n                                List of Tasks:\r\n                            </Typography>\r\n                        </div>\r\n                        {tasks.map((task, index) => (\r\n                            <div key={task.id}>\r\n                                <ListItem\r\n\r\n                                    button\r\n                                    selected={selectedIndex === index}\r\n                                    onClick={(event) => handleListItemClick(event, index)}\r\n                                >\r\n                                    <ListItemText primary={task.name} />\r\n                                    <Chip\r\n                                        label={task.status}\r\n                                        style={changeCipColor(task.status)}\r\n                                    />\r\n\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" style={{ width: \"100%\", margin: \"0\" }} />\r\n                            </div>\r\n                        ))\r\n                        }\r\n                        <Pagination\r\n                            className={classes.pagination}\r\n                            count={pagination.totalPages}\r\n                            page={pagination.page}\r\n                            onChange={handlePageChange}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </List>\r\n                    <Card className={classes.tasksDetailsCol}>\r\n                        <div className={classes.title}>\r\n                            <Typography noWrap variant=\"h5\">\r\n                                {tasks[selectedIndex].name}\r\n                            </Typography>\r\n                        </div>\r\n                        <div className={classes.statusContainer}>\r\n                            <Typography variant=\"h6\">\r\n                                Status:\r\n                            </Typography>\r\n                            <Chip\r\n                                label={tasks[selectedIndex].status}\r\n                                style={{\r\n                                    boxShadow: '0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)',\r\n                                    fontSize: \"14px\",\r\n                                    fontWeight: \"550\",\r\n                                    margin: \"2px\",\r\n                                    marginLeft: \"10px\",\r\n                                    marginRight: \"10px\",\r\n                                    width: \"99%\",\r\n                                    color: tasks[selectedIndex].status === \"In-Progress\" ? \"white\" : \"black\",\r\n                                    background: tasks[selectedIndex].status === \"In-Progress\"\r\n                                        ? \"rgb(56 81 216)\"\r\n                                        : tasks[selectedIndex].status === \"Requested\"\r\n                                            ? \"rgb(231 170 35)\"\r\n                                            : \"rgb(0 158 7)\",\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <CardContent style={{ paddingTop: 0 }}>\r\n                            <Divider variant=\"inset\" style={{ width: \"100%\", margin: \"12px\", marginLeft: \"0\", marginTop: '2px' }} />\r\n                            <div className={classes.chipContainer}>\r\n                                <Chip\r\n                                    className={classes.timeChip}\r\n                                    label={\"Start: \" + moment(tasks[selectedIndex].startTime).format(\"YYYY-MM-DD\")}\r\n                                    color=\"primary\"\r\n                                />\r\n                                <Chip\r\n                                    className={classes.timeChip}\r\n                                    label={\"Deadline: \" + moment(tasks[selectedIndex].deadline).format(\"YYYY-MM-DD\")}\r\n                                    color=\"primary\"\r\n                                />\r\n                            </div>\r\n                            <Divider variant=\"inset\" style={{ width: \"100%\", margin: \"12px\", marginLeft: \"0\" }} />\r\n\r\n                            <Typography variant=\"subtitle1\">\r\n                                {tasks[selectedIndex].description}\r\n                            </Typography>\r\n                            <Divider variant=\"inset\" style={{ width: \"100%\", margin: \"12px\", marginLeft: \"0\" }} />\r\n\r\n                            <Typography noWrap variant=\"subtitle1\">\r\n                                Subtasks:\r\n                            </Typography>\r\n\r\n                            {tasks[selectedIndex].subtasks.map((subtask, index) => (\r\n                                <Accordion\r\n                                    expanded={expandedSubTask === subtask.id}\r\n                                    onChange={handleSubTaskExpand(subtask.id)}\r\n                                    key={subtask.id}\r\n                                    className={classes.subtaskAccordion}\r\n                                >\r\n                                    <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon style={{ color: \"black\" }} />}\r\n                                    >\r\n                                        <Typography>\r\n                                            {subtask.name}\r\n                                        </Typography>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails>\r\n                                        {subtask.description}\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                            ))}\r\n\r\n                        </CardContent>\r\n                        <div className={classes.buttonSection}>\r\n                            <Divider variant=\"inset\" style={{ width: \"100%\", margin: \"12px\", marginLeft: \"0\" }} />\r\n                            <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef}>\r\n                                <Button onClick={hendleChangeStatus}>{allowedStatuses[statusSelIndex].name}</Button>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    aria-controls={openStatusSel ? 'split-button-menu' : undefined}\r\n                                    aria-expanded={openStatusSel ? 'true' : undefined}\r\n                                    aria-label=\"select merge strategy\"\r\n                                    aria-haspopup=\"menu\"\r\n                                    onClick={handleStatSellToggle}\r\n                                >\r\n                                    <ArrowDropDownIcon />\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                            <Popper open={openStatusSel} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                                {({ TransitionProps, placement }) => (\r\n                                    <Grow\r\n                                        {...TransitionProps}\r\n                                        style={{\r\n                                            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                                        }}\r\n                                    >\r\n                                        <Paper>\r\n                                            <ClickAwayListener onClickAway={handleStatSellClose}>\r\n                                                <MenuList id=\"split-button-menu\">\r\n                                                    {allowedStatuses.map((option, index) => (\r\n                                                        <MenuItem\r\n                                                            key={option.name}\r\n                                                            //  disabled={index === 2}\r\n                                                            selected={index === statusSelIndex}\r\n                                                            onClick={(event) => handleMenuItemClick(event, index)}\r\n                                                        >\r\n                                                            {option.name}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </MenuList>\r\n                                            </ClickAwayListener>\r\n                                        </Paper>\r\n                                    </Grow>\r\n                                )}\r\n                            </Popper>\r\n\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n            }\r\n        </div >\r\n    );\r\n}\r\nexport default TasksList;"]},"metadata":{},"sourceType":"module"}