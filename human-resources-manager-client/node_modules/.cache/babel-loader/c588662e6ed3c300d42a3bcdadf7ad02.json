{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\JobOffers\\\\JobOfferForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DarkTextField, DarkSelect, DarkChipList } from '../GlobalComponents';\nimport APIURL from '../../Services/Globals';\nimport { authHeader } from '../../Services/AuthService';\nimport { useLocation } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  mainConteiner: {\n    marginTop: \"1.8rem\",\n    background: theme.palette.grey[800],\n    paddingBottom: '20px'\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '1px',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2]\n  },\n  formGrid: {\n    marginTop: '15px',\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    justifyContent: \"space-between\",\n    alignContent: \"space-between\",\n    gridGap: \"1.5rem 1.5rem\"\n  },\n  createButton: {\n    margin: '0 auto',\n    display: 'block',\n    width: \"19rem\"\n  }\n}));\n\nconst JobOfferForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const [jobOffer, setJobOffer] = useState({});\n  const [positions, setPositions] = useState([]);\n  const [allertProps, setAllertProps] = useState({\n    text: '',\n    open: false,\n    type: 'success'\n  });\n  useEffect(() => {\n    getPositions();\n  }, []);\n\n  const getPositions = async () => {\n    const requestOptions = {\n      method: 'Get',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': authHeader()\n      })\n    };\n    await fetch(APIURL + \"positions\", requestOptions).then(response => response.json()).then(data => setPositions(data));\n  };\n\n  const headleFormChange = e => {};\n\n  const hendleSubmitOffer = () => {};\n\n  const handleAllertClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setAllertProps({ ...allertProps,\n      open: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainConteiner,\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: allertProps.open,\n      autoHideDuration: 4000,\n      onClose: handleAllertClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleAllertClose,\n        severity: allertProps.type,\n        children: allertProps.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      boxshadow: 2,\n      className: classes.title,\n      children: jobOffer === undefined ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: 'Edit Job Offer: ' + jobOffer.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Job Offer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGrid,\n        children: [/*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"Name\",\n          name: \"name\",\n          value: jobOffer.name,\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"Available Jobs\",\n          name: \"jobsQuantity\",\n          value: jobOffer.availableJobs,\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkSelect, {\n          label: \"Position\",\n          name: \"positionSelect\",\n          collection: positions,\n          value: jobOffer.position,\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), \"                \", /*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"Job Description...\",\n          name: \"description\",\n          maxRows: 10,\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.createButton,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: hendleSubmitOffer,\n        children: \"Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobOfferForm, \"hvbQ1nFGeqWYxaFU6rvqWtYDyhg=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c2 = JobOfferForm;\nexport default JobOfferForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"JobOfferForm\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/JobOffers/JobOfferForm.js"],"names":["React","useEffect","useState","makeStyles","DarkTextField","DarkSelect","DarkChipList","APIURL","authHeader","useLocation","Button","Snackbar","MuiAlert","Alert","props","useStyles","theme","mainConteiner","marginTop","background","palette","grey","paddingBottom","title","color","text","primary","textAlign","padding","backgroundColor","main","boxShadow","shadows","formGrid","display","gridTemplateColumns","justifyContent","alignContent","gridGap","createButton","margin","width","JobOfferForm","classes","location","jobOffer","setJobOffer","positions","setPositions","allertProps","setAllertProps","open","type","getPositions","requestOptions","method","headers","Headers","fetch","then","response","json","data","headleFormChange","e","hendleSubmitOffer","handleAllertClose","event","reason","undefined","id","root","name","availableJobs","position"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DarkTextField, DarkSelect, DarkChipList } from '../GlobalComponents';\r\nimport APIURL from '../../Services/Globals'\r\nimport { authHeader } from '../../Services/AuthService'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainConteiner: {\r\n        marginTop: \"1.8rem\",\r\n        background: theme.palette.grey[800],\r\n        paddingBottom: '20px'\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '1px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n    },\r\n    formGrid: {\r\n        marginTop: '15px',\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr 1fr\",\r\n        justifyContent: \"space-between\",\r\n        alignContent: \"space-between\",\r\n        gridGap: \"1.5rem 1.5rem\",\r\n    },\r\n    createButton: {\r\n        margin: '0 auto',\r\n        display: 'block',\r\n        width: \"19rem\",\r\n    }\r\n}));\r\nconst JobOfferForm = () => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const [jobOffer, setJobOffer] = useState({});\r\n    const [positions, setPositions] = useState([]);\r\n    const [allertProps, setAllertProps] = useState({\r\n        text: '',\r\n        open: false,\r\n        type: 'success'\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        getPositions()\r\n    }, []);\r\n\r\n    const getPositions = async () => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() })\r\n        };\r\n\r\n        await fetch(APIURL + `positions`,\r\n            requestOptions\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => setPositions(data));\r\n    }\r\n\r\n    const headleFormChange = e => {\r\n\r\n    }\r\n\r\n    const hendleSubmitOffer = () => {\r\n\r\n    }\r\n\r\n    const handleAllertClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAllertProps({ ...allertProps, open: false });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.mainConteiner}>\r\n            <Snackbar open={allertProps.open} autoHideDuration={4000} onClose={handleAllertClose}>\r\n                <Alert onClose={handleAllertClose} severity={allertProps.type}>\r\n                    {allertProps.text}\r\n                </Alert>\r\n            </Snackbar>\r\n            <div boxshadow={2} className={classes.title}>\r\n                {jobOffer === undefined ?\r\n                    <h3 >{'Edit Job Offer: ' + jobOffer.id}</h3> :\r\n                    <h3 >Create Job Offer</h3>\r\n                }\r\n            </div>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <div className={classes.formGrid}>\r\n                    <DarkTextField\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        value={jobOffer.name}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkTextField\r\n                        label=\"Available Jobs\"\r\n                        name=\"jobsQuantity\"\r\n                        value={jobOffer.availableJobs}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkSelect\r\n                        label=\"Position\"\r\n                        name=\"positionSelect\"\r\n                        collection={positions}\r\n                        value={jobOffer.position}\r\n                        onChange={headleFormChange}\r\n                    />                <DarkTextField\r\n                        label=\"Job Description...\"\r\n                        name=\"description\"\r\n                        maxRows={10}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                </div>\r\n\r\n                <Button\r\n                    className={classes.createButton}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={hendleSubmitOffer}\r\n                >Submit </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default JobOfferForm"]},"metadata":{},"sourceType":"module"}