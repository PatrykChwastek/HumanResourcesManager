{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\Desktop\\\\Inne\\\\reactApp\\\\human-resources-manager-client\\\\src\\\\Components\\\\EmployeeDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { APIURL } from './GlobalComponents';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  mainConteiner: {\n    marginTop: \"1.8rem\",\n    background: theme.palette.grey[800],\n    paddingBottom: '20px'\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '1px',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2]\n  },\n  gridConteiner: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    gridTemplateRows: \"1fr 1fr\",\n    justifyContent: \"space-between\",\n    alignContent: \"space-between\",\n    gridGap: \"1.2rem 1.2rem\",\n    color: theme.palette.text.primary\n  }\n}));\nexport const EmployeeDetails = () => {\n  _s();\n\n  const classes = useStyles();\n  const [employee, setEmployee] = useState({});\n  const params = useParams();\n  useEffect(() => {\n    getEmploee(params.id);\n  }, []);\n\n  const getEmploee = async empID => {\n    const requestOptions = {\n      method: 'Get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    await fetch(APIURL + `employee/get/` + empID, requestOptions).then(response => response.json()).then(data => setEmployee(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainConteiner,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.title,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Employee Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), employee.person === undefined ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.gridConteiner,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: employee.person.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Surname: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: employee.person.surname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployeeDetails, \"AtnhB/RSAxmjtwyDY0r/EGaFv2I=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = EmployeeDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeDetails\");","map":{"version":3,"sources":["C:/Users/Komputer/Desktop/Inne/reactApp/human-resources-manager-client/src/Components/EmployeeDetails.js"],"names":["React","useEffect","useState","APIURL","makeStyles","useParams","useStyles","theme","mainConteiner","marginTop","background","palette","grey","paddingBottom","title","color","text","primary","textAlign","padding","backgroundColor","main","boxShadow","shadows","gridConteiner","display","gridTemplateColumns","gridTemplateRows","justifyContent","alignContent","gridGap","EmployeeDetails","classes","employee","setEmployee","params","getEmploee","id","empID","requestOptions","method","headers","fetch","then","response","json","data","person","undefined","name","surname"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { APIURL } from './GlobalComponents';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainConteiner: {\r\n        marginTop: \"1.8rem\",\r\n        background: theme.palette.grey[800],\r\n        paddingBottom: '20px',\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '1px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n    },\r\n    gridConteiner: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr\",\r\n        gridTemplateRows: \"1fr 1fr\",\r\n        justifyContent: \"space-between\",\r\n        alignContent: \"space-between\",\r\n        gridGap: \"1.2rem 1.2rem\",\r\n\r\n        color: theme.palette.text.primary,\r\n\r\n    },\r\n}));\r\n\r\nexport const EmployeeDetails = () => {\r\n    const classes = useStyles();\r\n    const [employee, setEmployee] = useState({});\r\n    const params = useParams();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getEmploee(params.id);\r\n    }, [])\r\n\r\n    const getEmploee = async (empID) => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        await fetch(APIURL + `employee/get/` + empID,\r\n            requestOptions\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => setEmployee(data));\r\n    }\r\n\r\n    return (\r\n        <div className={classes.mainConteiner}>\r\n            <div className={classes.title}>\r\n                <h3>Employee Details</h3>\r\n            </div>\r\n            {employee.person === undefined ? null :\r\n                <div className={classes.gridConteiner}>\r\n\r\n\r\n                    <h4>Name: </h4>\r\n                    <p>{employee.person.name}</p>\r\n                    <h4>Surname: </h4><p>{employee.person.surname}</p>\r\n\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}