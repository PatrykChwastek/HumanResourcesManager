{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\Teams\\\\TeamList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport APIURL from '../../Services/Globals';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { DarkTextField, DarkSelect } from '../GlobalComponents';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Toolbar from '@material-ui/core/Toolbar';\nconst useStyles = makeStyles(theme => ({\n  whiteText: {\n    color: \"white\",\n    margin: \"0px\",\n    marginRight: \"8px\"\n  },\n  teamsContainer: {\n    margin: '0 auto',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  listComponent: {\n    margin: '8px',\n    width: '100%',\n    paddingTop: 0,\n    backgroundColor: theme.palette.background.paper,\n    color: 'white',\n    boxShadow: theme.shadows[2],\n    borderRadius: '4px',\n    display: \"flex\",\n    flexDirection: 'column'\n  },\n  pagination: {\n    display: 'grid',\n    padding: '8px',\n    marginTop: 'auto',\n    \"& .Mui-selected\": {\n      color: 'white',\n      backgroundColor: 'rgb(63 81 181 / 80%)'\n    },\n    \"& .MuiPaginationItem-outlined\": {\n      boxShadow: theme.shadows[2],\n      border: '1px solid rgb(149 149 149 / 23%)'\n    }\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '6px 0',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2],\n    borderRadius: '3px 3px 0 0',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  linkButton: {\n    marginRight: '10px',\n    marginLeft: 'auto',\n    textDecoration: \"none\",\n    color: \"white\"\n  }\n}));\n\nconst TeamList = () => {\n  _s();\n\n  const classes = useStyles();\n  const [teams, setTeams] = useState([]);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    size: 10,\n    totalPages: 1\n  });\n  useEffect(() => {\n    loadTeams(pagination.page, pagination.size);\n  }, []);\n\n  const loadTeams = async (page, size) => {\n    const requestOptions = {\n      method: 'Get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    await fetch(APIURL + `teams?page=${page}&size=${size}`, requestOptions).then(response => response.json()).then(data => {\n      setPagination({\n        page: page,\n        size: size,\n        totalPages: data.totalPages\n      });\n      setSelectedIndex(0);\n      setTeams(data.items);\n    });\n  };\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const handlePageChange = (event, value) => {\n    loadTeams(value, pagination.size);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: teams.length === 0 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.teamsContainer,\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        component: \"nav\",\n        className: classes.listComponent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            style: {\n              marginLeft: '16px'\n            },\n            children: \"List of Tasks:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: classes.linkButton,\n            to: \"/main/create-task\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"contained\",\n              color: \"secondary\",\n              endIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 46\n              }, this),\n              children: \"NEW Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), teams.map((team, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            selected: selectedIndex === index,\n            onClick: event => handleListItemClick(event, index),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: team.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            style: {\n              width: \"100%\",\n              margin: \"0\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }, this)]\n        }, team.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n          className: classes.pagination,\n          count: pagination.totalPages,\n          page: pagination.page,\n          onChange: handlePageChange,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.tasksDetailsCol,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.detailsTitle,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            noWrap: true,\n            variant: \"h5\",\n            children: teams[selectedIndex].name + ' Team Members:'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          style: {\n            paddingTop: 0\n          },\n          children: teams[selectedIndex].members.length === 0 ? null : teams[selectedIndex].members.map((member, index) => {\n            /*#__PURE__*/\n            _jsxDEV(\"div\", {\n              children: [console.log(teams[selectedIndex].members.length), /*#__PURE__*/_jsxDEV(ListItem, {\n                button: true // selected={selectedIndex === index}\n                // onClick={(event) => handleListItemClick(event, index)}\n                ,\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: member.person.name + \" \" + member.person.surname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                variant: \"inset\",\n                style: {\n                  width: \"100%\",\n                  margin: \"0\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 41\n              }, this)]\n            }, \"member\" + member.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TeamList, \"odMOhcr6EFoyhyALQdTfTv3ahi0=\", false, function () {\n  return [useStyles];\n});\n\n_c = TeamList;\nexport default TeamList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamList\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/Teams/TeamList.js"],"names":["React","useEffect","useState","makeStyles","withStyles","APIURL","Link","useLocation","DarkTextField","DarkSelect","Card","CardContent","Typography","Button","AddCircleIcon","List","ListItem","ListItemText","Divider","Pagination","Toolbar","useStyles","theme","whiteText","color","margin","marginRight","teamsContainer","display","flexDirection","justifyContent","listComponent","width","paddingTop","backgroundColor","palette","background","paper","boxShadow","shadows","borderRadius","pagination","padding","marginTop","border","title","text","primary","textAlign","main","linkButton","marginLeft","textDecoration","TeamList","classes","teams","setTeams","selectedIndex","setSelectedIndex","setPagination","page","size","totalPages","loadTeams","requestOptions","method","headers","fetch","then","response","json","data","items","handleListItemClick","event","index","handlePageChange","value","length","map","team","name","id","tasksDetailsCol","detailsTitle","members","member","console","log","person","surname"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport APIURL from '../../Services/Globals';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { DarkTextField, DarkSelect } from '../GlobalComponents';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    whiteText: {\r\n        color: \"white\",\r\n        margin: \"0px\",\r\n        marginRight: \"8px\",\r\n    },\r\n    teamsContainer: {\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center'\r\n    },\r\n    listComponent: {\r\n        margin: '8px',\r\n        width: '100%',\r\n        paddingTop: 0,\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: 'white',\r\n        boxShadow: theme.shadows[2],\r\n        borderRadius: '4px',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n    },\r\n    pagination: {\r\n        display: 'grid',\r\n        padding: '8px',\r\n        marginTop: 'auto',\r\n        \"& .Mui-selected\": {\r\n            color: 'white',\r\n            backgroundColor: 'rgb(63 81 181 / 80%)',\r\n        },\r\n        \"& .MuiPaginationItem-outlined\": {\r\n            boxShadow: theme.shadows[2],\r\n            border: '1px solid rgb(149 149 149 / 23%)'\r\n        }\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '6px 0',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n        borderRadius: '3px 3px 0 0',\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    linkButton: {\r\n        marginRight: '10px',\r\n        marginLeft: 'auto',\r\n        textDecoration: \"none\",\r\n        color: \"white\",\r\n    },\r\n}));\r\nconst TeamList = () => {\r\n    const classes = useStyles();\r\n    const [teams, setTeams] = useState([]);\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n    const [pagination, setPagination] = useState({\r\n        page: 1,\r\n        size: 10,\r\n        totalPages: 1\r\n    });\r\n\r\n    useEffect(() => {\r\n        loadTeams(\r\n            pagination.page,\r\n            pagination.size\r\n        );\r\n    }, []);\r\n\r\n    const loadTeams = async (page, size) => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        await fetch(APIURL + `teams?page=${page}&size=${size}`,\r\n            requestOptions\r\n        )\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                setPagination({\r\n                    page: page,\r\n                    size: size,\r\n                    totalPages: data.totalPages,\r\n                })\r\n                setSelectedIndex(0);\r\n                setTeams(data.items);\r\n            });\r\n    };\r\n\r\n    const handleListItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n    };\r\n\r\n    const handlePageChange = (event, value) => {\r\n        loadTeams(value, pagination.size);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {teams.length === 0 ? null :\r\n                <div className={classes.teamsContainer}>\r\n                    <List component=\"nav\" className={classes.listComponent}>\r\n                        <div className={classes.title}>\r\n                            <Typography variant=\"h6\" style={{ marginLeft: '16px' }}>\r\n                                List of Tasks:\r\n                            </Typography>\r\n                            <Link className={classes.linkButton} to=\"/main/create-task\">\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    endIcon={<AddCircleIcon />}\r\n                                >NEW Team</Button>\r\n                            </Link>\r\n                        </div>\r\n                        {teams.map((team, index) => (\r\n                            <div key={team.id}>\r\n                                <ListItem\r\n                                    button\r\n                                    selected={selectedIndex === index}\r\n                                    onClick={(event) => handleListItemClick(event, index)}\r\n                                >\r\n                                    <ListItemText primary={team.name} />\r\n\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" style={{ width: \"100%\", margin: \"0\" }} />\r\n                            </div>\r\n                        ))\r\n                        }\r\n                        <Pagination\r\n                            className={classes.pagination}\r\n                            count={pagination.totalPages}\r\n                            page={pagination.page}\r\n                            onChange={handlePageChange}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </List>\r\n                    <Card className={classes.tasksDetailsCol}>\r\n                        <div className={classes.detailsTitle}>\r\n                            <Typography noWrap variant=\"h5\">\r\n                                {teams[selectedIndex].name + ' Team Members:'}\r\n                            </Typography>\r\n                        </div>\r\n                        <CardContent style={{ paddingTop: 0 }}>\r\n                            {teams[selectedIndex].members.length === 0 ? null :\r\n                                teams[selectedIndex].members.map((member, index) => {\r\n\r\n                                    <div key={\"member\" + member.id}>{console.log(teams[selectedIndex].members.length)}\r\n                                        <ListItem\r\n                                            button\r\n                                        // selected={selectedIndex === index}\r\n                                        // onClick={(event) => handleListItemClick(event, index)}\r\n                                        >\r\n                                            <ListItemText primary={member.person.name + \" \" + member.person.surname} />\r\n\r\n                                        </ListItem>\r\n                                        <Divider variant=\"inset\" style={{ width: \"100%\", margin: \"0\" }} />\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default TeamList;"]},"metadata":{},"sourceType":"module"}