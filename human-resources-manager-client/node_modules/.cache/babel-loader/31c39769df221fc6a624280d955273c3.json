{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\MainComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from \"react-router-dom\";\nimport { getUserAccess, logout, getCurrentUser } from '../Services/AuthService';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EmployeeList from './Employees/EmployeeList';\nimport HR_Dashboard from './Employees/HR_Dashboard';\nimport HR_Manager from './Employees/HR_Manager';\nimport CreateJobApplication from './JobApplication/CreateJobApplication';\nimport JobApplicationList from \"./JobApplication/JobApplicationList\";\nimport EmployeeForm from './Employees/EmployeeForm';\nimport { EmployeeDetails } from './Employees/EmployeeDetails';\nimport Profile from './Users/Profile';\nimport UsersList from \"./Users/UsersList\";\nimport UserForm from './Users/UserForm';\nimport Team_Dashboard from './Teams/Team_Dashboard';\nimport TeamTasks from \"./Teams/TeamTasks\";\nimport TasksColumns from './Tasks/TasksColumns';\nimport TasksList from \"./Tasks/TasksList\";\nimport CreateTask from \"./Tasks/CreateTask\";\nimport TeamList from \"./Teams/TeamList\";\nimport CreateTeam from \"./Teams/CreateTeam\";\nimport AddTeamMembers from \"./Teams/AddTeamMembers\";\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport PollIcon from '@material-ui/icons/Poll';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n    marginTop: '123px'\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  drawerContainer: {\n    marginTop: '65px'\n  },\n  content: {\n    flexGrow: 1,\n    padding: '1.5rem',\n    paddingTop: '5rem',\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth + 73\n  },\n  contentShift: {\n    flexGrow: 1,\n    padding: '1.5rem',\n    paddingTop: '5rem',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  },\n  navList: {\n    '& .MuiSvgIcon-root': {\n      marginLeft: '4px',\n      width: '32px',\n      height: '32px'\n    }\n  },\n  linkButtons: {\n    textDecoration: \"none\",\n    color: \"white\"\n  }\n}));\n\nconst MainComponent = () => {\n  _s();\n\n  const history = useHistory();\n  const [userAccess] = useState(getUserAccess());\n  const [navIsOpen, setNavIsOpen] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState(history.location.pathname.substr(history.location.pathname.lastIndexOf('/') + 1));\n\n  const isNavItemmSelected = name => {\n    if (name === currentLocation) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const redirectIfNotLogin = () => {\n    console.log(userAccess);\n\n    if (getCurrentUser() == null) {\n      history.push(\"/login\");\n    }\n  };\n\n  const handleLogout = () => {\n    logout();\n    history.push(\"/login\");\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"fixed\",\n        className: classes.appBar,\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [navIsOpen ? /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => setNavIsOpen(false),\n            edge: \"start\",\n            className: classes.menuButton,\n            children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            onClick: () => setNavIsOpen(true),\n            edge: \"start\",\n            className: classes.menuButton,\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            style: {\n              flexGrow: 1\n            },\n            children: \"Human Resources Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: classes.linkButtons,\n            to: \"/main/profile\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              \"aria-label\": \"delete\",\n              children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        className: classes.drawer + navIsOpen ? classes.drawerOpen : classes.drawerClose,\n        variant: \"permanent\",\n        classes: {\n          paper: navIsOpen ? classes.drawerOpen : classes.drawerClose\n        },\n        children: userAccess === null ? redirectIfNotLogin() : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.drawerContainer,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            className: classes.navList,\n            children: [userAccess.humanResources === false ? null : /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                className: classes.linkButtons,\n                to: \"/main/dashboard\",\n                children: /*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  selected: isNavItemmSelected('dashboard'),\n                  onClick: () => setCurrentLocation('dashboard'),\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(PollIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 63\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      noWrap: true,\n                      children: \"Dashboard\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 72\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                className: classes.linkButtons,\n                to: \"/main/hr-manager\",\n                children: /*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  selected: isNavItemmSelected('hr-manager'),\n                  onClick: () => setCurrentLocation('hr-manager'),\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(AssignmentIndIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 63\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      noWrap: true,\n                      children: \"HR-Manager\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 72\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                className: classes.linkButtons,\n                to: \"/main/employees\",\n                children: /*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  selected: isNavItemmSelected('employees'),\n                  onClick: () => setCurrentLocation('employees'),\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(PeopleAltIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 63\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      noWrap: true,\n                      children: \"Employees\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 72\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                className: classes.linkButtons,\n                to: \"/main/team-list\",\n                children: /*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  selected: isNavItemmSelected('team-list'),\n                  onClick: () => setCurrentLocation('team-list'),\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(GroupWorkIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 63\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      noWrap: true,\n                      children: \"Team List\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 72\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                className: classes.linkButtons,\n                to: \"/main/applications\",\n                children: /*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  selected: isNavItemmSelected('applications'),\n                  onClick: () => setCurrentLocation('applications'),\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(AssignmentIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 63\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      noWrap: true,\n                      children: \"Job Applications\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 72\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: classes.linkButtons,\n              to: \"/main/tasks-columns\",\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                button: true,\n                selected: isNavItemmSelected('tasks-columns'),\n                onClick: () => setCurrentLocation('tasks-columns'),\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(DateRangeIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 55\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    noWrap: true,\n                    children: \"Tasks\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 64\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: classes.linkButtons,\n              to: \"/main/tasks-list\",\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                button: true,\n                selected: isNavItemmSelected('tasks-list'),\n                onClick: () => setCurrentLocation('tasks-list'),\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(FormatListBulletedIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 55\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    noWrap: true,\n                    children: \"Task List\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 64\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this), userAccess.teamManager === false ? null : /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                className: classes.linkButtons,\n                to: \"/main/team-manager\",\n                children: /*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  selected: isNavItemmSelected('team-manager'),\n                  onClick: () => setCurrentLocation('team-manager'),\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(DeveloperBoardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 63\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      noWrap: true,\n                      children: \"Team Manager\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 72\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                className: classes.linkButtons,\n                to: \"/main/team-tasks\",\n                children: /*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  selected: isNavItemmSelected('team-tasks'),\n                  onClick: () => setCurrentLocation('team-tasks'),\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(EventNoteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 63\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      noWrap: true,\n                      children: \"Team Tasks\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 72\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 37\n            }, this), userAccess.admin === false ? null : /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                className: classes.linkButtons,\n                to: \"/main/users-list\",\n                children: /*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  selected: isNavItemmSelected('users-list'),\n                  onClick: () => setCurrentLocation('users-list'),\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(RecentActorsIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 63\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      noWrap: true,\n                      children: \"Users\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 72\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: navIsOpen ? classes.contentShift : classes.content,\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/dashboard\",\n            children: /*#__PURE__*/_jsxDEV(HR_Dashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/hr-manager\",\n            children: /*#__PURE__*/_jsxDEV(HR_Manager, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/tasks-columns\",\n            children: /*#__PURE__*/_jsxDEV(TasksColumns, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/tasks-list\",\n            children: /*#__PURE__*/_jsxDEV(TasksList, {\n              userId: getCurrentUser() === null ? null : getCurrentUser().userDetails.employeeDTO.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/employee-form\",\n            children: /*#__PURE__*/_jsxDEV(EmployeeForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/employees\",\n            children: /*#__PURE__*/_jsxDEV(EmployeeList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/employee-details/:id\",\n            children: /*#__PURE__*/_jsxDEV(EmployeeDetails, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/applications\",\n            children: /*#__PURE__*/_jsxDEV(JobApplicationList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/team-list\",\n            children: /*#__PURE__*/_jsxDEV(TeamList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/team-manager\",\n            children: /*#__PURE__*/_jsxDEV(Team_Dashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/create-team\",\n            children: /*#__PURE__*/_jsxDEV(CreateTeam, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/add-team-members\",\n            children: /*#__PURE__*/_jsxDEV(AddTeamMembers, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/team-tasks\",\n            children: /*#__PURE__*/_jsxDEV(TeamTasks, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/create-task\",\n            children: /*#__PURE__*/_jsxDEV(CreateTask, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/profile\",\n            children: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/users-list\",\n            children: /*#__PURE__*/_jsxDEV(UsersList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main/user-form\",\n            children: /*#__PURE__*/_jsxDEV(UserForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainComponent, \"D5SnzlH38lRGCnvj2vUuKjAa5c0=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = MainComponent;\nexport default MainComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/MainComponent.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Switch","Route","Link","useHistory","getUserAccess","logout","getCurrentUser","makeStyles","EmployeeList","HR_Dashboard","HR_Manager","CreateJobApplication","JobApplicationList","EmployeeForm","EmployeeDetails","Profile","UsersList","UserForm","Team_Dashboard","TeamTasks","TasksColumns","TasksList","CreateTask","TeamList","CreateTeam","AddTeamMembers","Drawer","AppBar","Toolbar","Typography","Button","IconButton","List","ListItem","ListItemIcon","ListItemText","Divider","MenuIcon","ChevronLeftIcon","EventNoteIcon","PollIcon","AssignmentIndIcon","AssignmentIcon","PeopleAltIcon","DateRangeIcon","FormatListBulletedIcon","DeveloperBoardIcon","RecentActorsIcon","AccountCircleIcon","GroupWorkIcon","drawerWidth","useStyles","theme","root","display","appBar","zIndex","drawer","menuButton","marginRight","hide","width","flexShrink","whiteSpace","marginTop","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","spacing","breakpoints","up","drawerContainer","content","flexGrow","padding","paddingTop","marginLeft","contentShift","easeOut","navList","height","linkButtons","textDecoration","color","MainComponent","history","userAccess","navIsOpen","setNavIsOpen","currentLocation","setCurrentLocation","location","pathname","substr","lastIndexOf","isNavItemmSelected","name","redirectIfNotLogin","console","log","push","handleLogout","classes","paper","humanResources","teamManager","admin","userDetails","employeeDTO","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from \"react-router-dom\";\r\nimport { getUserAccess, logout, getCurrentUser } from '../Services/AuthService';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EmployeeList from './Employees/EmployeeList';\r\nimport HR_Dashboard from './Employees/HR_Dashboard';\r\nimport HR_Manager from './Employees/HR_Manager';\r\nimport CreateJobApplication from './JobApplication/CreateJobApplication';\r\nimport JobApplicationList from \"./JobApplication/JobApplicationList\";\r\nimport EmployeeForm from './Employees/EmployeeForm';\r\nimport { EmployeeDetails } from './Employees/EmployeeDetails';\r\nimport Profile from './Users/Profile'\r\nimport UsersList from \"./Users/UsersList\";\r\nimport UserForm from './Users/UserForm';\r\nimport Team_Dashboard from './Teams/Team_Dashboard';\r\nimport TeamTasks from \"./Teams/TeamTasks\";\r\nimport TasksColumns from './Tasks/TasksColumns';\r\nimport TasksList from \"./Tasks/TasksList\";\r\nimport CreateTask from \"./Tasks/CreateTask\";\r\nimport TeamList from \"./Teams/TeamList\"\r\nimport CreateTeam from \"./Teams/CreateTeam\";\r\nimport AddTeamMembers from \"./Teams/AddTeamMembers\"\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport PollIcon from '@material-ui/icons/Poll';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\r\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        marginTop: '123px'\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    drawerContainer: {\r\n        marginTop: '65px',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: '1.5rem',\r\n        paddingTop: '5rem',\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth + 73,\r\n    },\r\n    contentShift: {\r\n        flexGrow: 1,\r\n        padding: '1.5rem',\r\n        paddingTop: '5rem',\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    navList: {\r\n        '& .MuiSvgIcon-root': {\r\n            marginLeft: '4px',\r\n            width: '32px',\r\n            height: '32px',\r\n        },\r\n    },\r\n    linkButtons: {\r\n        textDecoration: \"none\",\r\n        color: \"white\",\r\n    },\r\n}));\r\n\r\nconst MainComponent = () => {\r\n\r\n    const history = useHistory();\r\n    const [userAccess] = useState(getUserAccess());\r\n    const [navIsOpen, setNavIsOpen] = useState(false);\r\n    const [currentLocation, setCurrentLocation] = useState(\r\n        history.location.pathname.substr(history.location.pathname.lastIndexOf('/') + 1));\r\n\r\n\r\n    const isNavItemmSelected = (name) => {\r\n        if (name === currentLocation) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const redirectIfNotLogin = () => {\r\n        console.log(userAccess);\r\n        if (getCurrentUser() == null) {\r\n            history.push(\"/login\");\r\n        }\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        history.push(\"/login\");\r\n    }\r\n    const classes = useStyles();\r\n    return (\r\n        <Router>\r\n            <div className={classes.root}>\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={classes.appBar}\r\n                >\r\n                    <Toolbar>\r\n                        {navIsOpen ?\r\n                            <IconButton\r\n                                onClick={() => setNavIsOpen(false)}\r\n                                edge=\"start\"\r\n                                className={classes.menuButton}\r\n                            >\r\n                                <ChevronLeftIcon />\r\n                            </IconButton> :\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                onClick={() => setNavIsOpen(true)}\r\n                                edge=\"start\"\r\n                                className={classes.menuButton}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                        }\r\n                        <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                            Human Resources Manager\r\n                        </Typography>\r\n                        <Link className={classes.linkButtons} to=\"/main/profile\">\r\n                            <IconButton size='small' aria-label=\"delete\">\r\n                                <AccountCircleIcon />\r\n                            </IconButton>\r\n                        </Link>\r\n\r\n                        <Button onClick={handleLogout}>Logout</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={\r\n                        classes.drawer +\r\n                            navIsOpen ? classes.drawerOpen :\r\n                            classes.drawerClose\r\n                    }\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: navIsOpen ? classes.drawerOpen :\r\n                            classes.drawerClose\r\n                    }}\r\n                >\r\n                    {userAccess === null ? redirectIfNotLogin() :\r\n                        <div className={classes.drawerContainer}>\r\n\r\n                            <List component=\"nav\" className={classes.navList}>\r\n                                {userAccess.humanResources === false ? null :\r\n                                    <React.Fragment>\r\n                                        <Link className={classes.linkButtons} to=\"/main/dashboard\">\r\n                                            <ListItem button\r\n                                                selected={isNavItemmSelected('dashboard')}\r\n                                                onClick={() => setCurrentLocation('dashboard')}\r\n                                            >\r\n                                                <ListItemIcon><PollIcon /></ListItemIcon>\r\n                                                <ListItemText primary={<Typography noWrap>Dashboard</Typography>} />\r\n                                            </ListItem>\r\n                                        </Link>\r\n                                        <Link className={classes.linkButtons} to=\"/main/hr-manager\">\r\n                                            <ListItem button\r\n                                                selected={isNavItemmSelected('hr-manager')}\r\n                                                onClick={() => setCurrentLocation('hr-manager')}\r\n                                            >\r\n                                                <ListItemIcon><AssignmentIndIcon /></ListItemIcon>\r\n                                                <ListItemText primary={<Typography noWrap>HR-Manager</Typography>} />\r\n                                            </ListItem>\r\n                                        </Link>\r\n                                        <Link className={classes.linkButtons} to=\"/main/employees\">\r\n                                            <ListItem button\r\n                                                selected={isNavItemmSelected('employees')}\r\n                                                onClick={() => setCurrentLocation('employees')}\r\n                                            >\r\n                                                <ListItemIcon><PeopleAltIcon /></ListItemIcon>\r\n                                                <ListItemText primary={<Typography noWrap>Employees</Typography>} />\r\n                                            </ListItem>\r\n                                        </Link>\r\n                                        <Link className={classes.linkButtons} to=\"/main/team-list\">\r\n                                            <ListItem button\r\n                                                selected={isNavItemmSelected('team-list')}\r\n                                                onClick={() => setCurrentLocation('team-list')}\r\n                                            >\r\n                                                <ListItemIcon><GroupWorkIcon /></ListItemIcon>\r\n                                                <ListItemText primary={<Typography noWrap>Team List</Typography>} />\r\n                                            </ListItem>\r\n                                        </Link>\r\n                                        <Link className={classes.linkButtons} to=\"/main/applications\">\r\n                                            <ListItem button\r\n                                                selected={isNavItemmSelected('applications')}\r\n                                                onClick={() => setCurrentLocation('applications')}\r\n                                            >\r\n                                                <ListItemIcon><AssignmentIcon /></ListItemIcon>\r\n                                                <ListItemText primary={<Typography noWrap>Job Applications</Typography>} />\r\n                                            </ListItem>\r\n                                        </Link>\r\n                                        <Divider />\r\n                                    </React.Fragment>\r\n                                }\r\n                                <Link className={classes.linkButtons} to=\"/main/tasks-columns\">\r\n                                    <ListItem button\r\n                                        selected={isNavItemmSelected('tasks-columns')}\r\n                                        onClick={() => setCurrentLocation('tasks-columns')}\r\n                                    >\r\n                                        <ListItemIcon><DateRangeIcon /></ListItemIcon>\r\n                                        <ListItemText primary={<Typography noWrap>Tasks</Typography>} />\r\n                                    </ListItem>\r\n                                </Link>\r\n                                <Link className={classes.linkButtons} to=\"/main/tasks-list\">\r\n                                    <ListItem button\r\n                                        selected={isNavItemmSelected('tasks-list')}\r\n                                        onClick={() => setCurrentLocation('tasks-list')}\r\n                                    >\r\n                                        <ListItemIcon><FormatListBulletedIcon /></ListItemIcon>\r\n                                        <ListItemText primary={<Typography noWrap>Task List</Typography>} />\r\n                                    </ListItem>\r\n                                </Link>\r\n                                <Divider />\r\n                                {userAccess.teamManager === false ? null :\r\n                                    <React.Fragment>\r\n                                        <Link className={classes.linkButtons} to=\"/main/team-manager\">\r\n                                            <ListItem button\r\n                                                selected={isNavItemmSelected('team-manager')}\r\n                                                onClick={() => setCurrentLocation('team-manager')}\r\n                                            >\r\n                                                <ListItemIcon><DeveloperBoardIcon /></ListItemIcon>\r\n                                                <ListItemText primary={<Typography noWrap>Team Manager</Typography>} />\r\n                                            </ListItem>\r\n                                        </Link>\r\n                                        <Link className={classes.linkButtons} to=\"/main/team-tasks\">\r\n                                            <ListItem button\r\n                                                selected={isNavItemmSelected('team-tasks')}\r\n                                                onClick={() => setCurrentLocation('team-tasks')}\r\n                                            >\r\n                                                <ListItemIcon><EventNoteIcon /></ListItemIcon>\r\n                                                <ListItemText primary={<Typography noWrap>Team Tasks</Typography>} />\r\n                                            </ListItem>\r\n                                        </Link>\r\n                                        <Divider />\r\n                                    </React.Fragment>}\r\n                                {userAccess.admin === false ? null :\r\n                                    <React.Fragment>\r\n                                        <Link className={classes.linkButtons} to=\"/main/users-list\">\r\n                                            <ListItem button\r\n                                                selected={isNavItemmSelected('users-list')}\r\n                                                onClick={() => setCurrentLocation('users-list')}\r\n                                            >\r\n                                                <ListItemIcon><RecentActorsIcon /></ListItemIcon>\r\n                                                <ListItemText primary={<Typography noWrap>Users</Typography>} />\r\n                                            </ListItem>\r\n                                        </Link>\r\n                                        <Divider />\r\n                                    </React.Fragment>}\r\n                            </List>\r\n\r\n                        </div>\r\n                    }\r\n                </Drawer>\r\n                <main className={navIsOpen ? classes.contentShift : classes.content}>\r\n                    <Switch>\r\n                        <Route path=\"/main/dashboard\">\r\n                            <HR_Dashboard />\r\n                        </Route>\r\n                        <Route path=\"/main/hr-manager\">\r\n                            <HR_Manager />\r\n                        </Route>\r\n                        <Route path=\"/main/tasks-columns\">\r\n                            <TasksColumns />\r\n                        </Route>\r\n                        <Route path=\"/main/tasks-list\">\r\n                            <TasksList userId={getCurrentUser() === null ? null :\r\n                                getCurrentUser().userDetails.employeeDTO.id}\r\n                            />\r\n                        </Route>\r\n                        <Route path=\"/main/employee-form\">\r\n                            <EmployeeForm />\r\n                        </Route>\r\n                        <Route path=\"/main/employees\" >\r\n                            <EmployeeList />\r\n                        </Route>\r\n                        <Route path=\"/main/employee-details/:id\" >\r\n                            <EmployeeDetails />\r\n                        </Route>\r\n                        <Route path=\"/main/applications\">\r\n                            <JobApplicationList />\r\n                        </Route>\r\n                        <Route path=\"/main/team-list\">\r\n                            <TeamList />\r\n                        </Route>\r\n                        <Route path=\"/main/team-manager\">\r\n                            <Team_Dashboard />\r\n                        </Route>\r\n                        <Route path=\"/main/create-team\">\r\n                            <CreateTeam />\r\n                        </Route>\r\n                        <Route path=\"/main/add-team-members\">\r\n                            <AddTeamMembers />\r\n                        </Route>\r\n                        <Route path=\"/main/team-tasks\">\r\n                            <TeamTasks />\r\n                        </Route>\r\n                        <Route path=\"/main/create-task\">\r\n                            <CreateTask />\r\n                        </Route>\r\n                        <Route path=\"/main/profile\">\r\n                            <Profile />\r\n                        </Route>\r\n                        <Route path=\"/main/users-list\">\r\n                            <UsersList />\r\n                        </Route>\r\n                        <Route path=\"/main/user-form\">\r\n                            <UserForm />\r\n                        </Route>\r\n                    </Switch>\r\n                </main>\r\n            </div >\r\n        </Router >\r\n    );\r\n}\r\nexport default MainComponent;"]},"metadata":{},"sourceType":"module"}