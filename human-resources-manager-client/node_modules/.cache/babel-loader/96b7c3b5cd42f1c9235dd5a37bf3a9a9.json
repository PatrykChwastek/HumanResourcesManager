{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\Tasks\\\\TasksColumns.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { getTasks, changeTaskStatus, getUserTasksStats } from '../../Services/TasksService';\nimport { getCurrentUser } from '../../Services/AuthService';\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Accordion, AccordionSummary, AccordionDetails, Chip } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Toolbar from '@material-ui/core/Toolbar';\nconst useStyles = makeStyles(theme => ({\n  taskTabContainer: {\n    margin: '0 auto',\n    width: 'max-content'\n  },\n  topBar: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  filterBox: {\n    padding: \".1rem\",\n    paddingLeft: \"1.8rem\",\n    paddingRight: \"1.8rem\",\n    borderRadius: '4px',\n    marginLeft: '8px',\n    width: \"max-content\",\n    background: theme.palette.grey[800],\n    boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\"\n  },\n  delayedDisplay: {\n    width: \"max-content\",\n    padding: \"0 8px 0\",\n    marginLeft: '8px',\n    display: 'flex',\n    alignItems: 'center',\n    background: theme.palette.grey[800],\n    \"& a\": {\n      color: \"white\",\n      textDecoration: \"none\"\n    }\n  },\n  whiteText: {\n    color: \"white\",\n    marginLeft: \"0px\",\n    marginRight: \"8px\"\n  },\n  column: {\n    margin: \"8px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '8px',\n    marginBottom: '2px',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2],\n    width: '100%'\n  },\n  accordionSummary: {\n    '& .MuiAccordionSummary-content': {\n      margin: 0\n    },\n    '& .MuiAccordionSummary-content.Mui-expanded': {\n      margin: 0\n    }\n  },\n  chipContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignContent: 'space-around',\n    alignItems: 'stretch',\n    flexwrap: 'nowrap',\n    justifyContent: 'space-evenly',\n    marginBottom: '5px'\n  },\n  timeChip: {\n    margin: \"2px\",\n    boxShadow: theme.shadows[2],\n    fontSize: \"11px\",\n    fontWeight: \"550\"\n  }\n}));\nconst filter = {\n  name: \"\",\n  status: \"Delayed\",\n  isBStartTime: false,\n  bStartTime: undefined,\n  isAStartTime: false,\n  aStartTime: undefined,\n  isBDeadline: false,\n  bDeadline: undefined,\n  isADeadline: false,\n  aDeadline: undefined\n};\n\nconst TasksColumns = () => {\n  _s();\n\n  const classes = useStyles();\n  const userID = getCurrentUser().userDetails.employeeDTO.id;\n  const [expandedTask, setExpandedTask] = useState('');\n  const [expandedSubTask, setExpandedSubTask] = useState('');\n  const [userTaskStats, setUserTaskStats] = useState({});\n  const [taskFilter, setTaskFilter] = useState({\n    filterMode: \"Today\",\n    beforeStartTime: moment().format(\"YYYY-MM-DD\"),\n    afterStartTime: moment().format(\"YYYY-MM-DD\")\n  });\n  const [columns, setColumns] = useState({\n    ['requested']: {\n      columnId: \"requested\",\n      name: \"Requested\",\n      statusName: \"Requested\",\n      items: []\n    },\n    ['inprogress']: {\n      columnId: \"inprogress\",\n      name: \"In Progress\",\n      statusName: \"In-Progress\",\n      items: []\n    },\n    ['completed']: {\n      columnId: \"completed\",\n      name: \"Completed\",\n      statusName: \"Completed\",\n      items: []\n    }\n  });\n  useEffect(() => {\n    getUserTasksStats(userID).then(data => {\n      setUserTaskStats(data);\n    });\n  }, []);\n  useEffect(() => {\n    let completed = [];\n    let requested = [];\n    let progress = [];\n    getTasks(1, 50, userID, '', undefined, taskFilter.beforeStartTime, taskFilter.afterStartTime).then(data => {\n      data.items.forEach(item => {\n        switch (item.status) {\n          case \"Requested\":\n            requested.push(item);\n            break;\n\n          case \"Completed\":\n            completed.push(item);\n            break;\n\n          case \"In-Progress\":\n            progress.push(item);\n            break;\n        }\n      });\n      adddItemsToColumn(completed, requested, progress);\n    });\n    ;\n  }, [taskFilter]);\n\n  const adddItemsToColumn = (com, req, prog) => {\n    const completedCol = columns.completed;\n    const requestedCol = columns.requested;\n    const progressCol = columns.inprogress;\n    setColumns({ ...columns,\n      [completedCol.columnId]: { ...completedCol,\n        items: com\n      },\n      [requestedCol.columnId]: { ...requestedCol,\n        items: req\n      },\n      [progressCol.columnId]: { ...progressCol,\n        items: prog\n      }\n    });\n  };\n\n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const newStatus = columns[destination.droppableId].statusName;\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [changed] = sourceItems.splice(source.index, 1);\n      changed.status = newStatus;\n      destItems.splice(destItems.length, 0, changed); //destItems.splice(destination.index, 0, removed);\n\n      changeTaskStatus(changed.id, changed.status).then(() => {});\n      setColumns({ ...columns,\n        [source.droppableId]: { ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: { ...destColumn,\n          items: destItems\n        }\n      });\n    }\n  };\n\n  const handleTaskExpand = taskId => (event, newExpanded) => {\n    setExpandedTask(newExpanded ? taskId : false);\n  };\n\n  const handleSubTaskExpand = taskId => (event, newExpanded) => {\n    setExpandedSubTask(newExpanded ? taskId : false);\n  };\n\n  const handleFilterChange = mode => {\n    const today = moment();\n\n    switch (mode) {\n      case 'today':\n        setTaskFilter({\n          filterMode: 'Today',\n          beforeStartTime: today.format(\"YYYY-MM-DD\"),\n          afterStartTime: today.format(\"YYYY-MM-DD\")\n        });\n        break;\n\n      case 'week':\n        setTaskFilter({\n          filterMode: 'This Week',\n          beforeStartTime: today.endOf('isoWeek').format(\"YYYY-MM-DD\"),\n          afterStartTime: today.startOf('isoWeek').format(\"YYYY-MM-DD\")\n        });\n        break;\n\n      case 'month':\n        setTaskFilter({\n          filterMode: 'This Month',\n          beforeStartTime: today.endOf('month').format(\"YYYY-MM-DD\"),\n          afterStartTime: today.startOf('month').format(\"YYYY-MM-DD\")\n        });\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.taskTabContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.topBar,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.filterBox,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.whiteText,\n          children: \"Tasks From: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          variant: \"contained\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: taskFilter.filterMode === 'Today' ? 'primary' : 'default',\n            onClick: () => {\n              handleFilterChange('today');\n            },\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: taskFilter.filterMode === 'This Week' ? 'primary' : 'default',\n            onClick: () => {\n              handleFilterChange('week');\n            },\n            children: \"This Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: taskFilter.filterMode === 'This Month' ? 'primary' : 'default',\n            onClick: () => {\n              handleFilterChange('month');\n            },\n            children: \"This Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), userTaskStats.totalDelayedTasks === undefined ? null : /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.delayedDisplay,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: \"/main/tasks-list\",\n            filter: {\n              filter\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            noWrap: true,\n            variant: \"h6\",\n            children: 'Delayed Tasks: ' + userTaskStats.totalDelayedTasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: result => onDragEnd(result, columns, setColumns),\n        children: Object.entries(columns).map(([columnId, column], index) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.column,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.title,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                noWrap: true,\n                variant: \"h5\",\n                children: column.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: columnId,\n              children: (provided, snapshot) => {\n                return /*#__PURE__*/_jsxDEV(CardContent, { ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  style: {\n                    background: snapshot.isDraggingOver ? \"rgb(128 128 128)\" : \"#424242\",\n                    padding: \"10px\",\n                    paddingBottom: \"0\",\n                    width: \"400px\",\n                    hight: \"410px\",\n                    maxHeight: \"410px\",\n                    minHeight: \"410px\",\n                    overflowY: 'auto',\n                    WebkitScrollbarButton: {\n                      height: '100%'\n                    }\n                  },\n                  children: [column.items.map((item, index) => {\n                    return /*#__PURE__*/_jsxDEV(Draggable, {\n                      draggableId: String(item.id),\n                      index: index,\n                      children: provided => {\n                        return /*#__PURE__*/_jsxDEV(Accordion, {\n                          expanded: expandedTask === item.id,\n                          onChange: handleTaskExpand(item.id),\n                          ref: provided.innerRef,\n                          ...provided.draggableProps,\n                          ...provided.dragHandleProps,\n                          style: {\n                            userSelect: \"none\",\n                            backgroundColor: item.status === \"In-Progress\" ? \"rgb(56 81 216)\" : item.status === \"Requested\" ? \"rgb(231 170 35)\" : \"rgb(0 158 7)\",\n                            color: item.status === \"In-Progress\" ? \"white\" : \"black\",\n                            borderRadius: '4px',\n                            marginBottom: '4px',\n                            ...provided.draggableProps.style\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                            className: classes.accordionSummary,\n                            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n                              style: {\n                                color: \"black\"\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 366,\n                              columnNumber: 89\n                            }, this),\n                            style: {\n                              padding: '8px'\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"subtitle1\",\n                              children: item.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 369,\n                              columnNumber: 77\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 364,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                            style: {\n                              display: \"flex\",\n                              alignContent: \"flex-start\",\n                              flexDirection: 'column',\n                              padding: '0px'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: classes.chipContainer,\n                              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                                className: classes.timeChip,\n                                label: \"Start: \" + item.startTime.toString().split('T')[0],\n                                color: \"primary\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 379,\n                                columnNumber: 81\n                              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                                className: classes.timeChip,\n                                label: \"Deadline: \" + item.deadline.toString().split('T')[0],\n                                color: \"primary\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 384,\n                                columnNumber: 81\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 378,\n                              columnNumber: 77\n                            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"body1\",\n                              style: {\n                                marginLeft: '5px',\n                                marginBottom: '5px'\n                              },\n                              children: item.description\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 390,\n                              columnNumber: 77\n                            }, this), item.subtasks.length === 0 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                paddingLeft: '8px',\n                                paddingRight: '8px',\n                                backgroundColor: \"rgb(0 0 0 / 26%)\"\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                children: \"Subtasks:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 402,\n                                columnNumber: 85\n                              }, this), item.subtasks.map(subtask => {\n                                return /*#__PURE__*/_jsxDEV(Accordion, {\n                                  expanded: expandedSubTask === subtask.id,\n                                  onChange: handleSubTaskExpand(subtask.id),\n                                  style: {\n                                    backgroundColor: item.status === \"In-Progress\" ? \"rgb(93 135 230)\" : item.status === \"Requested\" ? \"rgb(255 234 144)\" : \"rgb(3 189 0)\",\n                                    color: item.status === \"In-Progress\" ? \"white\" : \"black\",\n                                    marginBottom: '4px',\n                                    borderRadius: '4px',\n                                    padding: '0px'\n                                  },\n                                  children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                                    expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n                                      style: {\n                                        color: \"black\"\n                                      }\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 425,\n                                      columnNumber: 113\n                                    }, this),\n                                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                                      children: subtask.name\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 427,\n                                      columnNumber: 101\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 424,\n                                    columnNumber: 97\n                                  }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                                    children: subtask.description\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 431,\n                                    columnNumber: 97\n                                  }, this)]\n                                }, subtask.id, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 407,\n                                  columnNumber: 93\n                                }, this);\n                              })]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 397,\n                              columnNumber: 81\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 371,\n                            columnNumber: 73\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 343,\n                          columnNumber: 69\n                        }, this);\n                      }\n                    }, item.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 57\n                    }, this);\n                  }), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 45\n                }, this);\n              }\n            }, columnId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 33\n            }, this)]\n          }, columnId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TasksColumns, \"86PW/OE0hN8bjoPK0wr9M99v14A=\", false, function () {\n  return [useStyles];\n});\n\n_c = TasksColumns;\nexport default TasksColumns;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksColumns\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/Tasks/TasksColumns.js"],"names":["React","useEffect","useState","DragDropContext","Draggable","Droppable","getTasks","changeTaskStatus","getUserTasksStats","getCurrentUser","Link","moment","makeStyles","Card","CardContent","Typography","Accordion","AccordionSummary","AccordionDetails","Chip","ExpandMoreIcon","Button","ButtonGroup","Toolbar","useStyles","theme","taskTabContainer","margin","width","topBar","display","flexDirection","filterBox","padding","paddingLeft","paddingRight","borderRadius","marginLeft","background","palette","grey","boxShadow","delayedDisplay","alignItems","color","textDecoration","whiteText","marginRight","column","title","text","primary","textAlign","marginBottom","backgroundColor","main","shadows","accordionSummary","chipContainer","alignContent","flexwrap","justifyContent","timeChip","fontSize","fontWeight","filter","name","status","isBStartTime","bStartTime","undefined","isAStartTime","aStartTime","isBDeadline","bDeadline","isADeadline","aDeadline","TasksColumns","classes","userID","userDetails","employeeDTO","id","expandedTask","setExpandedTask","expandedSubTask","setExpandedSubTask","userTaskStats","setUserTaskStats","taskFilter","setTaskFilter","filterMode","beforeStartTime","format","afterStartTime","columns","setColumns","columnId","statusName","items","then","data","completed","requested","progress","forEach","item","push","adddItemsToColumn","com","req","prog","completedCol","requestedCol","progressCol","inprogress","onDragEnd","result","destination","source","droppableId","newStatus","sourceColumn","destColumn","sourceItems","destItems","changed","splice","index","length","handleTaskExpand","taskId","event","newExpanded","handleSubTaskExpand","handleFilterChange","mode","today","endOf","startOf","totalDelayedTasks","pathname","height","Object","entries","map","provided","snapshot","droppableProps","innerRef","isDraggingOver","paddingBottom","hight","maxHeight","minHeight","overflowY","WebkitScrollbarButton","String","draggableProps","dragHandleProps","userSelect","style","startTime","toString","split","deadline","description","subtasks","subtask","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { getTasks, changeTaskStatus, getUserTasksStats } from '../../Services/TasksService';\r\nimport { getCurrentUser } from '../../Services/AuthService';\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Accordion, AccordionSummary, AccordionDetails, Chip } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    taskTabContainer: {\r\n        margin: '0 auto',\r\n        width: 'max-content'\r\n    },\r\n    topBar: {\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    filterBox: {\r\n        padding: \".1rem\",\r\n        paddingLeft: \"1.8rem\",\r\n        paddingRight: \"1.8rem\",\r\n        borderRadius: '4px',\r\n        marginLeft: '8px',\r\n        width: \"max-content\",\r\n        background: theme.palette.grey[800],\r\n        boxShadow:\r\n            \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n    },\r\n    delayedDisplay: {\r\n        width: \"max-content\",\r\n        padding: \"0 8px 0\",\r\n        marginLeft: '8px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        background: theme.palette.grey[800],\r\n        \"& a\": {\r\n            color: \"white\",\r\n            textDecoration: \"none\",\r\n        }\r\n\r\n    },\r\n    whiteText: {\r\n        color: \"white\",\r\n        marginLeft: \"0px\",\r\n        marginRight: \"8px\",\r\n    },\r\n    column: {\r\n        margin: \"8px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '8px',\r\n        marginBottom: '2px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n        width: '100%',\r\n    },\r\n    accordionSummary: {\r\n        '& .MuiAccordionSummary-content': {\r\n            margin: 0,\r\n        },\r\n        '& .MuiAccordionSummary-content.Mui-expanded': {\r\n            margin: 0,\r\n        }\r\n    },\r\n    chipContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignContent: 'space-around',\r\n        alignItems: 'stretch',\r\n        flexwrap: 'nowrap',\r\n        justifyContent: 'space-evenly',\r\n        marginBottom: '5px'\r\n    },\r\n    timeChip: {\r\n        margin: \"2px\",\r\n        boxShadow: theme.shadows[2],\r\n        fontSize: \"11px\",\r\n        fontWeight: \"550\"\r\n    },\r\n}));\r\n\r\nconst filter = {\r\n    name: \"\",\r\n    status: \"Delayed\",\r\n    isBStartTime: false,\r\n    bStartTime: undefined,\r\n    isAStartTime: false,\r\n    aStartTime: undefined,\r\n    isBDeadline: false,\r\n    bDeadline: undefined,\r\n    isADeadline: false,\r\n    aDeadline: undefined\r\n};\r\n\r\nconst TasksColumns = () => {\r\n    const classes = useStyles();\r\n    const userID = getCurrentUser().userDetails.employeeDTO.id;\r\n    const [expandedTask, setExpandedTask] = useState('');\r\n    const [expandedSubTask, setExpandedSubTask] = useState('');\r\n    const [userTaskStats, setUserTaskStats] = useState({});\r\n    const [taskFilter, setTaskFilter] = useState({\r\n        filterMode: \"Today\",\r\n        beforeStartTime: moment().format(\"YYYY-MM-DD\"),\r\n        afterStartTime: moment().format(\"YYYY-MM-DD\"),\r\n    });\r\n    const [columns, setColumns] = useState({\r\n\r\n        ['requested']: {\r\n            columnId: \"requested\",\r\n            name: \"Requested\",\r\n            statusName: \"Requested\",\r\n            items: []\r\n        },\r\n        ['inprogress']: {\r\n            columnId: \"inprogress\",\r\n            name: \"In Progress\",\r\n            statusName: \"In-Progress\",\r\n            items: []\r\n        },\r\n        ['completed']: {\r\n            columnId: \"completed\",\r\n            name: \"Completed\",\r\n            statusName: \"Completed\",\r\n            items: []\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        getUserTasksStats(userID).then((data) => {\r\n            setUserTaskStats(data)\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let completed = [];\r\n        let requested = [];\r\n        let progress = [];\r\n        getTasks(1, 50, userID,\r\n            '', undefined,\r\n            taskFilter.beforeStartTime,\r\n            taskFilter.afterStartTime)\r\n            .then((data) => {\r\n                data.items.forEach(item => {\r\n                    switch (item.status) {\r\n                        case \"Requested\":\r\n                            requested.push(item)\r\n                            break;\r\n                        case \"Completed\":\r\n                            completed.push(item)\r\n                            break;\r\n                        case \"In-Progress\":\r\n                            progress.push(item)\r\n                            break;\r\n                    }\r\n                });\r\n                adddItemsToColumn(completed, requested, progress);\r\n            });;\r\n    }, [taskFilter]);\r\n\r\n    const adddItemsToColumn = (com, req, prog) => {\r\n        const completedCol = columns.completed;\r\n        const requestedCol = columns.requested;\r\n        const progressCol = columns.inprogress;\r\n        setColumns({\r\n            ...columns, [completedCol.columnId]: {\r\n                ...completedCol,\r\n                items: com\r\n            }, [requestedCol.columnId]: {\r\n                ...requestedCol,\r\n                items: req\r\n            }, [progressCol.columnId]: {\r\n                ...progressCol,\r\n                items: prog\r\n            },\r\n        })\r\n    }\r\n\r\n    const onDragEnd = (result, columns, setColumns) => {\r\n        if (!result.destination) return;\r\n        const { source, destination } = result;\r\n        if (source.droppableId !== destination.droppableId) {\r\n            const newStatus = columns[destination.droppableId].statusName;\r\n            const sourceColumn = columns[source.droppableId];\r\n            const destColumn = columns[destination.droppableId];\r\n            const sourceItems = [...sourceColumn.items];\r\n            const destItems = [...destColumn.items];\r\n\r\n            const [changed] = sourceItems.splice(source.index, 1);\r\n            changed.status = newStatus;\r\n            destItems.splice(destItems.length, 0, changed);\r\n            //destItems.splice(destination.index, 0, removed);\r\n\r\n            changeTaskStatus(changed.id, changed.status).then(() => { });\r\n\r\n            setColumns({\r\n                ...columns,\r\n                [source.droppableId]: {\r\n                    ...sourceColumn,\r\n                    items: sourceItems\r\n                },\r\n                [destination.droppableId]: {\r\n                    ...destColumn,\r\n                    items: destItems\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTaskExpand = (taskId) => (event, newExpanded) => {\r\n        setExpandedTask(newExpanded ? taskId : false);\r\n    }\r\n    const handleSubTaskExpand = (taskId) => (event, newExpanded) => {\r\n        setExpandedSubTask(newExpanded ? taskId : false);\r\n    }\r\n    const handleFilterChange = (mode) => {\r\n        const today = moment();\r\n        switch (mode) {\r\n            case 'today':\r\n                setTaskFilter({\r\n                    filterMode: 'Today',\r\n                    beforeStartTime: today.format(\"YYYY-MM-DD\"),\r\n                    afterStartTime: today.format(\"YYYY-MM-DD\"),\r\n                });\r\n                break;\r\n            case 'week':\r\n                setTaskFilter({\r\n                    filterMode: 'This Week',\r\n                    beforeStartTime: today.endOf('isoWeek').format(\"YYYY-MM-DD\"),\r\n                    afterStartTime: today.startOf('isoWeek').format(\"YYYY-MM-DD\")\r\n\r\n                });\r\n                break;\r\n            case 'month':\r\n                setTaskFilter({\r\n                    filterMode: 'This Month',\r\n                    beforeStartTime: today.endOf('month').format(\"YYYY-MM-DD\"),\r\n                    afterStartTime: today.startOf('month').format(\"YYYY-MM-DD\")\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.taskTabContainer}>\r\n            <div className={classes.topBar}>\r\n                <Toolbar className={classes.filterBox}>\r\n                    <h3 className={classes.whiteText}>Tasks From: </h3>\r\n\r\n                    <ButtonGroup variant=\"contained\">\r\n                        <Button\r\n                            color={taskFilter.filterMode === 'Today' ? 'primary' : 'default'}\r\n                            onClick={() => { handleFilterChange('today') }}\r\n                        >\r\n                            Today\r\n                        </Button>\r\n                        <Button\r\n                            color={taskFilter.filterMode === 'This Week' ? 'primary' : 'default'}\r\n                            onClick={() => { handleFilterChange('week') }}\r\n                        >\r\n                            This Week\r\n                        </Button>\r\n                        <Button\r\n                            color={taskFilter.filterMode === 'This Month' ? 'primary' : 'default'}\r\n                            onClick={() => { handleFilterChange('month') }}\r\n                        >\r\n                            This Month\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </Toolbar>\r\n                {userTaskStats.totalDelayedTasks === undefined ? null :\r\n                    <Card className={classes.delayedDisplay}>\r\n                        <Link to={\r\n                            {\r\n                                pathname: \"/main/tasks-list\",\r\n                                filter: { filter }\r\n                            }}>\r\n                            <Typography noWrap variant=\"h6\">\r\n                                {'Delayed Tasks: ' + userTaskStats.totalDelayedTasks}\r\n                            </Typography>\r\n                        </Link>\r\n                    </Card>\r\n                }\r\n\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\r\n                <DragDropContext\r\n                    onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\r\n                >\r\n                    {Object.entries(columns).map(([columnId, column], index) => {\r\n                        return (\r\n                            <Card className={classes.column}\r\n\r\n                                key={columnId}\r\n                            >\r\n                                <div className={classes.title}>\r\n                                    <Typography noWrap variant=\"h5\">{column.name}</Typography>\r\n                                </div>\r\n                                <Droppable droppableId={columnId} key={columnId}>\r\n                                    {(provided, snapshot) => {\r\n                                        return (\r\n                                            <CardContent {...provided.droppableProps}\r\n                                                ref={provided.innerRef}\r\n                                                style={{\r\n                                                    background: snapshot.isDraggingOver\r\n                                                        ? \"rgb(128 128 128)\"\r\n                                                        : \"#424242\",\r\n                                                    padding: \"10px\",\r\n                                                    paddingBottom: \"0\",\r\n                                                    width: \"400px\",\r\n                                                    hight: \"410px\",\r\n                                                    maxHeight: \"410px\",\r\n                                                    minHeight: \"410px\",\r\n                                                    overflowY: 'auto',\r\n                                                    WebkitScrollbarButton: {\r\n                                                        height: '100%'\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                {column.items.map((item, index) => {\r\n                                                    return (\r\n                                                        <Draggable\r\n                                                            key={item.id}\r\n                                                            draggableId={String(item.id)}\r\n                                                            index={index}\r\n                                                        >\r\n                                                            {(provided) => {\r\n                                                                return (\r\n                                                                    <Accordion\r\n                                                                        expanded={expandedTask === item.id}\r\n                                                                        onChange={handleTaskExpand(item.id)}\r\n                                                                        ref={provided.innerRef}\r\n                                                                        {...provided.draggableProps}\r\n                                                                        {...provided.dragHandleProps}\r\n                                                                        style={{\r\n                                                                            userSelect: \"none\",\r\n                                                                            backgroundColor:\r\n                                                                                item.status === \"In-Progress\"\r\n                                                                                    ? \"rgb(56 81 216)\"\r\n                                                                                    : item.status === \"Requested\"\r\n                                                                                        ? \"rgb(231 170 35)\"\r\n                                                                                        : \"rgb(0 158 7)\",\r\n                                                                            color: item.status === \"In-Progress\" ? \"white\" : \"black\",\r\n                                                                            borderRadius: '4px',\r\n                                                                            marginBottom: '4px',\r\n                                                                            ...provided.draggableProps.style\r\n                                                                        }}\r\n                                                                    >\r\n\r\n                                                                        <AccordionSummary\r\n                                                                            className={classes.accordionSummary}\r\n                                                                            expandIcon={<ExpandMoreIcon style={{ color: \"black\" }} />}\r\n                                                                            style={{ padding: '8px' }}\r\n                                                                        >\r\n                                                                            <Typography variant=\"subtitle1\">{item.name}</Typography>\r\n                                                                        </AccordionSummary>\r\n                                                                        <AccordionDetails style={{\r\n                                                                            display: \"flex\",\r\n\r\n                                                                            alignContent: \"flex-start\",\r\n                                                                            flexDirection: 'column',\r\n                                                                            padding: '0px',\r\n                                                                        }}>\r\n                                                                            <div className={classes.chipContainer}>\r\n                                                                                <Chip\r\n                                                                                    className={classes.timeChip}\r\n                                                                                    label={\"Start: \" + item.startTime.toString().split('T')[0]}\r\n                                                                                    color=\"primary\"\r\n                                                                                />\r\n                                                                                <Chip\r\n                                                                                    className={classes.timeChip}\r\n                                                                                    label={\"Deadline: \" + item.deadline.toString().split('T')[0]}\r\n                                                                                    color=\"primary\"\r\n                                                                                />\r\n                                                                            </div>\r\n                                                                            <Typography\r\n                                                                                variant=\"body1\"\r\n                                                                                style={{ marginLeft: '5px', marginBottom: '5px' }}\r\n                                                                            >\r\n                                                                                {item.description}\r\n                                                                            </Typography>\r\n                                                                            {item.subtasks.length === 0 ? null :\r\n                                                                                <div style={{\r\n                                                                                    paddingLeft: '8px',\r\n                                                                                    paddingRight: '8px',\r\n                                                                                    backgroundColor: \"rgb(0 0 0 / 26%)\"\r\n                                                                                }}>\r\n                                                                                    <Typography>\r\n                                                                                        Subtasks:\r\n                                                                                    </Typography>\r\n                                                                                    {item.subtasks.map((subtask) => {\r\n                                                                                        return (\r\n                                                                                            <Accordion\r\n                                                                                                expanded={expandedSubTask === subtask.id}\r\n                                                                                                onChange={handleSubTaskExpand(subtask.id)}\r\n                                                                                                key={subtask.id}\r\n                                                                                                style={{\r\n                                                                                                    backgroundColor:\r\n                                                                                                        item.status === \"In-Progress\"\r\n                                                                                                            ? \"rgb(93 135 230)\"\r\n                                                                                                            : item.status === \"Requested\"\r\n                                                                                                                ? \"rgb(255 234 144)\"\r\n                                                                                                                : \"rgb(3 189 0)\",\r\n                                                                                                    color: item.status === \"In-Progress\" ? \"white\" : \"black\",\r\n                                                                                                    marginBottom: '4px',\r\n                                                                                                    borderRadius: '4px',\r\n                                                                                                    padding: '0px'\r\n\r\n                                                                                                }}>\r\n                                                                                                <AccordionSummary\r\n                                                                                                    expandIcon={<ExpandMoreIcon style={{ color: \"black\" }} />}\r\n                                                                                                >\r\n                                                                                                    <Typography>\r\n                                                                                                        {subtask.name}\r\n                                                                                                    </Typography>\r\n                                                                                                </AccordionSummary>\r\n                                                                                                <AccordionDetails>\r\n                                                                                                    {subtask.description}\r\n                                                                                                </AccordionDetails>\r\n                                                                                            </Accordion>\r\n                                                                                        );\r\n                                                                                    })}\r\n                                                                                </div>\r\n                                                                            }\r\n                                                                        </AccordionDetails>\r\n                                                                    </Accordion>\r\n                                                                );\r\n                                                            }}\r\n                                                        </Draggable>\r\n                                                    );\r\n                                                })}\r\n                                                {provided.placeholder}\r\n                                            </CardContent>\r\n                                        );\r\n                                    }}\r\n                                </Droppable>\r\n                            </Card>\r\n                        );\r\n                    })}\r\n                </DragDropContext>\r\n            </div >\r\n        </div>\r\n    );\r\n}\r\nexport default TasksColumns;"]},"metadata":{},"sourceType":"module"}