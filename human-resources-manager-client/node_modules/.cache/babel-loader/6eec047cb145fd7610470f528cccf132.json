{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\Desktop\\\\Inne\\\\reactApp\\\\human-resources-manager-client\\\\src\\\\Components\\\\CreateEmployee.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { APIURL, DarkTextField, DarkSelect, DarkChipList } from './GlobalComponents';\nimport Button from '@material-ui/core/Button';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nconst useStyles = makeStyles(theme => ({\n  mainConteiner: {\n    marginTop: \"1.5rem\",\n    background: theme.palette.grey[800],\n    padding: \"1rem\"\n  }\n}));\n\nconst CreateEmploy = () => {\n  _s();\n\n  const classes = useStyles();\n  const [employee, setEmployee] = useState({\n    id: 0,\n    employmentDate: \"2021-11-11\",\n    remoteWork: false,\n    person: {\n      id: 0,\n      name: \"\",\n      surname: \"\",\n      phoneNumber: \"\",\n      email: \"\",\n      employeeAddress: {\n        id: 0,\n        city: \"\",\n        postCode: \"\",\n        street: \"\"\n      }\n    },\n    position: {\n      id: 0,\n      name: \"\"\n    },\n    department: {\n      id: 0,\n      name: \"\"\n    },\n    permissions: []\n  });\n  const [departments, setDepartments] = useState([]);\n  const [positions, setPositions] = useState([]);\n  const remoteWork = [{\n    id: false,\n    name: \"Office\"\n  }, {\n    id: true,\n    name: \"Remote\"\n  }];\n  const [allPermissions, setAllPermissions] = useState([]);\n  const [employeePermissions, setEmployeePermissions] = useState([]);\n  useEffect(() => {\n    getEmployeeProps();\n  }, []);\n  useEffect(() => {\n    setEmployee({ ...employee,\n      ['permissions']: employeePermissions\n    });\n  }, [employeePermissions]);\n\n  const PostEmployee = formData => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    };\n    fetch(APIURL + 'employee/create', requestOptions).then(response => response.json()).then(data => console.log(data));\n  };\n\n  const getEmployeeProps = async () => {\n    const requestOptions = {\n      method: 'Get'\n    };\n    await fetch(APIURL + `departments`, requestOptions).then(response => response.json()).then(data => setDepartments(data));\n    await fetch(APIURL + `positions`, requestOptions).then(response => response.json()).then(data => setPositions(data));\n    await fetch(APIURL + `permissions`, requestOptions).then(response => response.json()).then(data => setAllPermissions(data));\n  };\n\n  const headleFormChange = e => {\n    if (e.target.name === \"permissionSelect\") {\n      if (employeePermissions.length === 0) {\n        setEmployeePermissions([e.target.value]);\n      } else {\n        let isPicked = false;\n        employeePermissions.forEach(element => {\n          if (element.id === e.target.value.id) {\n            isPicked = true;\n          }\n        });\n\n        if (!isPicked) {\n          setEmployeePermissions([...employeePermissions, e.target.value]);\n        }\n      }\n    }\n\n    setEmployee({\n      id: 0,\n      person: {\n        id: 0,\n        name: e.target.name === \"employeeName\" ? e.target.value : employee.person.name,\n        surname: e.target.name === \"employeeSurname\" ? e.target.value : employee.person.surname,\n        phoneNumber: \"12345678\",\n        email: \"t@gt.comm\",\n        employeeAddress: {\n          id: 0,\n          city: e.target.name === \"employeeCity\" ? e.target.value : employee.person.employeeAddress.city,\n          postCode: e.target.name === \"employeePostCode\" ? e.target.value : employee.person.employeeAddress.postCode,\n          street: e.target.name === \"employeeStreet\" ? e.target.value : employee.person.employeeAddress.street\n        }\n      },\n      position: e.target.name === \"positionSelect\" ? e.target.value : employee.position,\n      department: e.target.name === \"departmentSelect\" ? e.target.value : employee.department,\n      employmentDate: \"\",\n      remoteWork: e.target.name === \"remoteWork\" ? e.target.value.id : employee.remoteWork,\n      permissions: employee.permissions\n    });\n  };\n\n  const headleDateChange = e => {\n    setEmployee({ ...employee,\n      employmentDate: e\n    });\n    console.log(e);\n    console.log(employee);\n  };\n\n  const hendlePermissionDelete = chipToDelete => {\n    setEmployeePermissions(chips => chips.filter(chip => chip.name !== chipToDelete.name));\n  };\n\n  const hendlePostEmployee = () => {\n    console.log(employee);\n    PostEmployee(employee);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainConteiner,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(DarkTextField, {\n        label: \"Name\",\n        name: \"employeeName\",\n        onChange: headleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n        label: \"Surname\",\n        name: \"employeeSurname\",\n        onChange: headleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n        label: \"Phone Number\",\n        name: \"employeePhone\",\n        type: \"number\",\n        onChange: headleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n        label: \"Email\",\n        name: \"employeeEmail\",\n        onChange: headleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n        label: \"City\",\n        name: \"employeeCity\",\n        onChange: headleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n        label: \"Post Code\",\n        name: \"employeePostCode\",\n        onChange: headleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n        label: \"Street\",\n        name: \"employeeStreet\",\n        onChange: headleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkSelect, {\n        label: \"Department\",\n        name: \"departmentSelect\",\n        collection: departments,\n        onChange: headleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkSelect, {\n        label: \"Position\",\n        name: \"positionSelect\",\n        collection: positions,\n        onChange: headleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkSelect, {\n        label: \"Remote Work\",\n        name: \"remoteWork\",\n        collection: remoteWork,\n        value: employee.remoteWork === false ? remoteWork[0] : remoteWork[1],\n        onChange: headleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n          disableToolbar: true,\n          name: \"datePicker\",\n          type: \"date\",\n          variant: \"inline\",\n          format: \"yyyy-MM-dd\",\n          margin: \"normal\",\n          id: \"date-picker-inline\",\n          label: \"Date picker inline\",\n          value: employee.employmentDate,\n          onChange: headleDateChange,\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkChipList, {\n        label: \"Permissions\",\n        name: \"permissionSelect\",\n        collection: allPermissions,\n        clipListCollection: employeePermissions,\n        onChange: headleFormChange,\n        onDelete: hendlePermissionDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: hendlePostEmployee,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateEmploy, \"IE0cLO0DUso7Nc3QIVf4GI+DFNg=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreateEmploy;\nexport default CreateEmploy;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateEmploy\");","map":{"version":3,"sources":["C:/Users/Komputer/Desktop/Inne/reactApp/human-resources-manager-client/src/Components/CreateEmployee.js"],"names":["React","useEffect","useState","makeStyles","APIURL","DarkTextField","DarkSelect","DarkChipList","Button","DateFnsUtils","KeyboardDatePicker","MuiPickersUtilsProvider","useStyles","theme","mainConteiner","marginTop","background","palette","grey","padding","CreateEmploy","classes","employee","setEmployee","id","employmentDate","remoteWork","person","name","surname","phoneNumber","email","employeeAddress","city","postCode","street","position","department","permissions","departments","setDepartments","positions","setPositions","allPermissions","setAllPermissions","employeePermissions","setEmployeePermissions","getEmployeeProps","PostEmployee","formData","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","console","log","headleFormChange","e","target","length","value","isPicked","forEach","element","headleDateChange","hendlePermissionDelete","chipToDelete","chips","filter","chip","hendlePostEmployee","root"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { APIURL, DarkTextField, DarkSelect, DarkChipList } from './GlobalComponents';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainConteiner: {\r\n        marginTop: \"1.5rem\",\r\n        background: theme.palette.grey[800],\r\n        padding: \"1rem\"\r\n    },\r\n}));\r\n\r\nconst CreateEmploy = () => {\r\n    const classes = useStyles();\r\n    const [employee, setEmployee] = useState({\r\n        id: 0,\r\n        employmentDate: \"2021-11-11\",\r\n        remoteWork: false,\r\n        person: {\r\n            id: 0,\r\n            name: \"\",\r\n            surname: \"\",\r\n            phoneNumber: \"\",\r\n            email: \"\",\r\n            employeeAddress: {\r\n                id: 0,\r\n                city: \"\",\r\n                postCode: \"\",\r\n                street: \"\"\r\n            }\r\n        },\r\n        position: {\r\n            id: 0,\r\n            name: \"\",\r\n        },\r\n        department: {\r\n            id: 0,\r\n            name: \"\",\r\n        },\r\n        permissions: []\r\n    });\r\n    const [departments, setDepartments] = useState([]);\r\n    const [positions, setPositions] = useState([]);\r\n    const remoteWork = [\r\n        { id: false, name: \"Office\" },\r\n        { id: true, name: \"Remote\" }\r\n    ];\r\n    const [allPermissions, setAllPermissions] = useState([]);\r\n    const [employeePermissions, setEmployeePermissions] = useState([]);\r\n    useEffect(() => {\r\n        getEmployeeProps()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setEmployee({\r\n            ...employee,\r\n            ['permissions']: employeePermissions\r\n        })\r\n    }, [employeePermissions]);\r\n\r\n    const PostEmployee = (formData) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(formData),\r\n        };\r\n        fetch(APIURL + 'employee/create', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => console.log(data));\r\n    }\r\n\r\n    const getEmployeeProps = async () => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n        };\r\n        await fetch(APIURL + `departments`,\r\n            requestOptions\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => setDepartments(data));\r\n\r\n        await fetch(APIURL + `positions`,\r\n            requestOptions\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => setPositions(data));\r\n\r\n        await fetch(APIURL + `permissions`,\r\n            requestOptions\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => setAllPermissions(data));\r\n    }\r\n\r\n    const headleFormChange = e => {\r\n\r\n        if (e.target.name === \"permissionSelect\") {\r\n            if (employeePermissions.length === 0) {\r\n                setEmployeePermissions([e.target.value]);\r\n            } else {\r\n                let isPicked = false;\r\n                employeePermissions.forEach(element => {\r\n                    if (element.id === e.target.value.id) {\r\n                        isPicked = true;\r\n                    }\r\n                });\r\n                if (!isPicked) {\r\n                    setEmployeePermissions([...employeePermissions, e.target.value]);\r\n                }\r\n            }\r\n        }\r\n\r\n        setEmployee({\r\n            id: 0,\r\n            person: {\r\n                id: 0,\r\n                name: e.target.name === \"employeeName\" ? e.target.value : employee.person.name,\r\n                surname: e.target.name === \"employeeSurname\" ? e.target.value : employee.person.surname,\r\n                phoneNumber: \"12345678\",\r\n                email: \"t@gt.comm\",\r\n                employeeAddress: {\r\n                    id: 0,\r\n                    city: e.target.name === \"employeeCity\" ? e.target.value : employee.person.employeeAddress.city,\r\n                    postCode: e.target.name === \"employeePostCode\" ? e.target.value : employee.person.employeeAddress.postCode,\r\n                    street: e.target.name === \"employeeStreet\" ? e.target.value : employee.person.employeeAddress.street\r\n                }\r\n            },\r\n            position: e.target.name === \"positionSelect\" ? e.target.value : employee.position,\r\n            department: e.target.name === \"departmentSelect\" ? e.target.value : employee.department,\r\n            employmentDate: \"\",\r\n            remoteWork: e.target.name === \"remoteWork\" ? e.target.value.id : employee.remoteWork,\r\n            permissions: employee.permissions\r\n        })\r\n    }\r\n\r\n    const headleDateChange = (e) => {\r\n        setEmployee({ ...employee, employmentDate: e })\r\n        console.log(e);\r\n        console.log(employee);\r\n    }\r\n    const hendlePermissionDelete = chipToDelete => {\r\n        setEmployeePermissions(chips => chips.filter(chip => chip.name !== chipToDelete.name));\r\n    }\r\n\r\n    const hendlePostEmployee = () => {\r\n        console.log(employee);\r\n        PostEmployee(employee);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.mainConteiner}>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <DarkTextField\r\n                    label=\"Name\"\r\n                    name=\"employeeName\"\r\n                    onChange={headleFormChange}\r\n                />\r\n                <DarkTextField\r\n                    label=\"Surname\"\r\n                    name=\"employeeSurname\"\r\n                    onChange={headleFormChange}\r\n                />\r\n                <DarkTextField\r\n                    label=\"Phone Number\"\r\n                    name=\"employeePhone\"\r\n                    type=\"number\"\r\n                    onChange={headleFormChange}\r\n                />\r\n                <DarkTextField\r\n                    label=\"Email\"\r\n                    name=\"employeeEmail\"\r\n                    onChange={headleFormChange}\r\n                />\r\n                <DarkTextField\r\n                    label=\"City\"\r\n                    name=\"employeeCity\"\r\n                    onChange={headleFormChange}\r\n                />\r\n                <DarkTextField\r\n                    label=\"Post Code\"\r\n                    name=\"employeePostCode\"\r\n                    onChange={headleFormChange}\r\n                />\r\n                <DarkTextField\r\n                    label=\"Street\"\r\n                    name=\"employeeStreet\"\r\n                    onChange={headleFormChange}\r\n                />\r\n                <DarkSelect\r\n                    label=\"Department\"\r\n                    name=\"departmentSelect\"\r\n                    collection={departments}\r\n                    onChange={headleFormChange}\r\n                />\r\n                <DarkSelect\r\n                    label=\"Position\"\r\n                    name=\"positionSelect\"\r\n                    collection={positions}\r\n                    onChange={headleFormChange}\r\n                />\r\n                <DarkSelect\r\n                    label=\"Remote Work\"\r\n                    name=\"remoteWork\"\r\n                    collection={remoteWork}\r\n                    value={employee.remoteWork === false ? remoteWork[0] : remoteWork[1]}\r\n                    onChange={headleFormChange}\r\n                />\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        name=\"datePicker\"\r\n                        type=\"date\"\r\n                        variant=\"inline\"\r\n                        format=\"yyyy-MM-dd\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Date picker inline\"\r\n                        value={employee.employmentDate}\r\n                        onChange={headleDateChange}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <DarkChipList\r\n                    label=\"Permissions\"\r\n                    name=\"permissionSelect\"\r\n                    collection={allPermissions}\r\n                    clipListCollection={employeePermissions}\r\n                    onChange={headleFormChange}\r\n                    onDelete={hendlePermissionDelete}\r\n                />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={hendlePostEmployee}>Create</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default CreateEmploy;"]},"metadata":{},"sourceType":"module"}