{"ast":null,"code":"import APIURL from './Globals';\n\nconst login = loginData => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(loginData)\n  };\n  return fetch(APIURL + 'users/login', requestOptions).then(response => response.json()).then(data => localStorage.setItem(\"user\", JSON.stringify(data)).catch(error => {\n    return Promise.reject();\n  }));\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n};\nexport const getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\nexport const authHeader = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.token) {\n    return 'Bearer ' + user.token;\n  } else {\n    return {};\n  }\n};\nexport const getUserAccess = () => {\n  const permissions = getCurrentUser().userDetails.employeeDTO.permissions;\n\n  if (permissions === undefined || permissions.length < 1) {\n    return false;\n  }\n\n  const isUsserPermit = premName => {\n    let isPermit = false;\n    permissions.forEach(element => {\n      if (element.name === premName) {\n        isPermit = true;\n        return;\n      }\n    });\n    return isPermit;\n  };\n\n  const allowedViews = {\n    humanResources: isUsserPermit(\"Human-Resources\"),\n    admin: isUsserPermit('Admin'),\n    teamManager: isUsserPermit('Team-Manager')\n  };\n\n  if (allowedViews.admin) {\n    allowedViews = {\n      humanResources: true,\n      admin: true,\n      teamManager: true\n    };\n  }\n\n  return allowedViews;\n};\n\nconst testRoles = () => {\n  const requestOptions = {\n    method: 'GET',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': authHeader()\n    })\n  };\n  fetch(APIURL + 'users?page=1&size=4', requestOptions).then(response => response.json()).then(data => console.log(data));\n}; // eslint-disable-next-line\n\n\nexport default {\n  login,\n  logout,\n  getCurrentUser,\n  authHeader,\n  getUserAccess,\n  testRoles\n};","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Services/AuthService.js"],"names":["APIURL","login","loginData","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","localStorage","setItem","catch","error","Promise","reject","logout","removeItem","getCurrentUser","parse","getItem","authHeader","user","token","getUserAccess","permissions","userDetails","employeeDTO","undefined","length","isUsserPermit","premName","isPermit","forEach","element","name","allowedViews","humanResources","admin","teamManager","testRoles","Headers","console","log"],"mappings":"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","sourcesContent":["import APIURL from './Globals'\r\n\r\nconst login = (loginData) => {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(loginData)\r\n    };\r\n    return fetch(APIURL + 'users/login', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data =>\r\n            localStorage.setItem(\"user\", JSON.stringify(data))\r\n                .catch(error => {\r\n                    return Promise.reject()\r\n                }))\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nexport const authHeader = () => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (user && user.token) {\r\n        return 'Bearer ' + user.token;\r\n    } else {\r\n        return {};\r\n    }\r\n}\r\n\r\nexport const getUserAccess = () => {\r\n    const permissions = getCurrentUser().userDetails.employeeDTO.permissions;\r\n    if (permissions === undefined || permissions.length < 1) {\r\n        return false;\r\n    }\r\n    const isUsserPermit = (premName) => {\r\n        let isPermit = false;\r\n        permissions.forEach(element => {\r\n            if (element.name === premName) {\r\n                isPermit = true;\r\n                return;\r\n            }\r\n        });\r\n        return isPermit;\r\n    }\r\n\r\n    const allowedViews = {\r\n        humanResources: isUsserPermit(\"Human-Resources\"),\r\n        admin: isUsserPermit('Admin'),\r\n        teamManager: isUsserPermit('Team-Manager')\r\n    };\r\n\r\n    if (allowedViews.admin) {\r\n        allowedViews = {\r\n            humanResources: true,\r\n            admin: true,\r\n            teamManager: true\r\n        }\r\n    }\r\n    return allowedViews;\r\n}\r\n\r\nconst testRoles = () => {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() }),\r\n    };\r\n    fetch(APIURL + 'users?page=1&size=4', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => console.log(data))\r\n}\r\n// eslint-disable-next-line\r\nexport default {\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n    authHeader,\r\n    getUserAccess,\r\n    testRoles\r\n};"]},"metadata":{},"sourceType":"module"}