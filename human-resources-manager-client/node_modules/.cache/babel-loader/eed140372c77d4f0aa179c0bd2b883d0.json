{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\Desktop\\\\reactApp\\\\human-resources-manager-client\\\\src\\\\Components\\\\EmployeeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\n\nconst EmployList = () => {\n  _s();\n\n  const classes = useStyles();\n  const [employees, setEmployees] = useState();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  useEffect(() => {\n    const requestOptions = {\n      method: 'Get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch('http://localhost:5000/api/employee/all', requestOptions).then(response => response.json()).then(data => {\n      setEmployees = data, console.log(data);\n    });\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: employees.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(employee => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: employees.map(empl => {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"empl.id\"\n                }, empl.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 45\n                }, this);\n              })\n            }, employee.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployList, \"GufMs4LKaOzw7xJ86WpbgnYgXv8=\", true);\n\n_c = EmployList;\nexport default EmployList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployList\");","map":{"version":3,"sources":["C:/Users/Komputer/Desktop/reactApp/human-resources-manager-client/src/Components/EmployeeList.js"],"names":["React","useEffect","useState","EmployList","classes","useStyles","employees","setEmployees","page","setPage","rowsPerPage","setRowsPerPage","requestOptions","method","headers","fetch","then","response","json","data","console","log","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","root","container","slice","map","employee","empl","id","rows","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nconst EmployList = () => {  \r\n    const classes = useStyles();\r\n    const [employees, setEmployees] = useState();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\nuseEffect(() => {\r\n    const requestOptions = {\r\n        method: 'Get',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n    fetch('http://localhost:5000/api/employee/all', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => { setEmployees =data, console.log(data) });\r\n}, []);    \r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    \r\n    return(\r\n        <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                ID\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                Name\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                Surname\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                Position\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {employees.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((employee) => {\r\n                            return (\r\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={employee.id}>\r\n                                    {employees.map((empl) => {\r\n                                        return (\r\n                                            <TableCell key={empl.id}>\r\n                                                empl.id\r\n                                            </TableCell>\r\n                                            \r\n                                        );\r\n                                    })}\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\nexport default EmployList;"]},"metadata":{},"sourceType":"module"}