{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\Users\\\\UserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DarkTextField, DarkSelect } from '../GlobalComponents';\nimport EmployeeForm from '../Employees/EmployeeForm';\nimport APIURL from '../../Services/Globals';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  formGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    justifyContent: \"space-between\",\n    alignContent: \"space-between\",\n    gridGap: \"1.2rem 1.2rem\"\n  }\n}));\n\nconst UserForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const [user, setUser] = useState({\n    id: 0\n  });\n\n  const hendleEmployeeCreations = employee => {\n    setUser({ ...user,\n      employeeDTO: employee\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(EmployeeForm, {\n      createdEmployee: hendleEmployeeCreations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGrid,\n        children: [/*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"Username\",\n          name: \"employeeName\",\n          onChange: e => setUser({ ...user,\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"Surname\",\n          name: \"employeeSurname\",\n          onChange: e => setUser({ ...user,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.createButton,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => console.log(user),\n        children: \"Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserForm, \"sCaoRfobZ60OfUXCDCiNRXVty78=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = UserForm;\nexport default UserForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"UserForm\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/Users/UserForm.js"],"names":["React","useEffect","useState","makeStyles","DarkTextField","DarkSelect","EmployeeForm","APIURL","Button","Snackbar","MuiAlert","Alert","props","useStyles","theme","formGrid","display","gridTemplateColumns","justifyContent","alignContent","gridGap","UserForm","classes","user","setUser","id","hendleEmployeeCreations","employee","employeeDTO","e","username","target","value","password","createButton","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,qBAA1C;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC,QAAhC;AAAA,OAA6CA;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KAFQD,K;AAIT,MAAME,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,MADH;AAENC,IAAAA,mBAAmB,EAAE,aAFf;AAGNC,IAAAA,cAAc,EAAE,eAHV;AAINC,IAAAA,YAAY,EAAE,eAJR;AAKNC,IAAAA,OAAO,EAAE;AALH;AAD2B,CAAZ,CAAD,CAA5B;;AAUA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC;AAAEuB,IAAAA,EAAE,EAAE;AAAN,GAAD,CAAhC;;AAEA,QAAMC,uBAAuB,GAAIC,QAAD,IAAc;AAC1CH,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWK,MAAAA,WAAW,EAAED;AAAxB,KAAD,CAAP;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,YAAD;AAAc,MAAA,eAAe,EAAED;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,YAAY,EAAC,KAA9B;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEJ,OAAO,CAACP,QAAxB;AAAA,gCACI,QAAC,aAAD;AACI,UAAA,KAAK,EAAC,UADV;AAEI,UAAA,IAAI,EAAC,cAFT;AAGI,UAAA,QAAQ,EAAGc,CAAD,IAAOL,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWO,YAAAA,QAAQ,EAAED,CAAC,CAACE,MAAF,CAASC;AAA9B,WAAD;AAH5B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,aAAD;AACI,UAAA,KAAK,EAAC,SADV;AAEI,UAAA,IAAI,EAAC,iBAFT;AAGI,UAAA,QAAQ,EAAGH,CAAD,IAAOL,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWU,YAAAA,QAAQ,EAAEJ,CAAC,CAACE,MAAF,CAASC;AAA9B,WAAD;AAH5B;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI,QAAC,MAAD;AACI,QAAA,SAAS,EAAEV,OAAO,CAACY,YADvB;AAEI,QAAA,OAAO,EAAC,WAFZ;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAYb,IAAZ,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAjCD;;GAAMF,Q;UACcR,S;;;MADdQ,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DarkTextField, DarkSelect } from '../GlobalComponents';\r\nimport EmployeeForm from '../Employees/EmployeeForm'\r\n\r\nimport APIURL from '../../Services/Globals'\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formGrid: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr 1fr\",\r\n        justifyContent: \"space-between\",\r\n        alignContent: \"space-between\",\r\n        gridGap: \"1.2rem 1.2rem\",\r\n    },\r\n}));\r\n\r\nconst UserForm = () => {\r\n    const classes = useStyles();\r\n    const [user, setUser] = useState({ id: 0 });\r\n\r\n    const hendleEmployeeCreations = (employee) => {\r\n        setUser({ ...user, employeeDTO: employee })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <EmployeeForm createdEmployee={hendleEmployeeCreations} />\r\n            <form noValidate autoComplete=\"off\">\r\n                <div className={classes.formGrid}>\r\n                    <DarkTextField\r\n                        label=\"Username\"\r\n                        name=\"employeeName\"\r\n                        onChange={(e) => setUser({ ...user, username: e.target.value })}\r\n                    />\r\n                    <DarkTextField\r\n                        label=\"Surname\"\r\n                        name=\"employeeSurname\"\r\n                        onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n                    />\r\n                </div>\r\n                <Button\r\n                    className={classes.createButton}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => console.log(user)}\r\n                >Submit </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default UserForm;"]},"metadata":{},"sourceType":"module"}