{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\Tasks\\\\TasksList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport APIURL from '../../Services/Globals';\nimport { getCurrentUser } from '../../Services/AuthService';\nimport moment from \"moment\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getTasks } from \"../../Services/TasksService\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Accordion, AccordionSummary, AccordionDetails, Chip } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nconst useStyles = makeStyles(theme => ({\n  tasksContainer: {\n    margin: '0 auto',\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  listComponent: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    color: 'white',\n    boxShadow: theme.shadows[2],\n    borderRadius: '3px'\n  },\n  tastDetailscol: {\n    margin: \"8px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '8px',\n    marginBottom: '2px',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2],\n    width: '100%'\n  }\n}));\n\nconst TasksList = () => {\n  _s();\n\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    getTasks(1, 10, 12).then(data => {\n      setTasks(data.items);\n    });\n  }, []);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.tasksContainer,\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      component: \"nav\",\n      className: classes.listComponent,\n      children: tasks === undefined ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          selected: selectedIndex === index,\n          onClick: event => handleListItemClick(event, index),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), tasks === undefined ? null : /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.tastDetailscol,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          noWrap: true,\n          variant: \"h5\",\n          children: tasks[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TasksList, \"DwwULschGBwBOnIH9zIUChG0dt4=\", false, function () {\n  return [useStyles];\n});\n\n_c = TasksList;\nexport default TasksList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksList\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/Tasks/TasksList.js"],"names":["React","useEffect","useState","APIURL","getCurrentUser","moment","makeStyles","getTasks","Card","CardContent","Typography","Accordion","AccordionSummary","AccordionDetails","Chip","Button","IconButton","List","ListItem","ListItemText","useStyles","theme","tasksContainer","margin","display","flexDirection","listComponent","width","maxWidth","backgroundColor","palette","background","paper","color","boxShadow","shadows","borderRadius","tastDetailscol","alignItems","title","text","primary","textAlign","padding","marginBottom","main","TasksList","classes","selectedIndex","setSelectedIndex","tasks","setTasks","then","data","items","handleListItemClick","event","index","undefined","map","task","name","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APIURL from '../../Services/Globals';\r\nimport { getCurrentUser } from '../../Services/AuthService';\r\nimport moment from \"moment\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getTasks } from \"../../Services/TasksService\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Accordion, AccordionSummary, AccordionDetails, Chip } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tasksContainer: {\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    },\r\n    listComponent: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: 'white',\r\n        boxShadow: theme.shadows[2],\r\n        borderRadius: '3px'\r\n    },\r\n    tastDetailscol: {\r\n        margin: \"8px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '8px',\r\n        marginBottom: '2px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n        width: '100%',\r\n    },\r\n\r\n}));\r\n\r\nconst TasksList = () => {\r\n    const classes = useStyles();\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        getTasks(1, 10, 12).then((data) => {\r\n            setTasks(data.items)\r\n        })\r\n    }, []);\r\n\r\n    const handleListItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n    };\r\n    return (\r\n        <div className={classes.tasksContainer}>\r\n            <List component=\"nav\" className={classes.listComponent}>\r\n                {tasks === undefined ? null :\r\n                    <div>\r\n                        {tasks.map((task, index) => (\r\n                            <ListItem\r\n                                key={task.id}\r\n                                button\r\n                                selected={selectedIndex === index}\r\n                                onClick={(event) => handleListItemClick(event, index)}\r\n                            >\r\n                                <ListItemText primary={task.name} />\r\n                            </ListItem>\r\n                        ))\r\n                        }</div>\r\n\r\n                }\r\n            </List>\r\n            {tasks === undefined ? null :\r\n                <Card className={classes.tastDetailscol}>\r\n\r\n                    <div className={classes.title}>\r\n                        <Typography noWrap variant=\"h5\">\r\n                            {tasks[0].name}\r\n                        </Typography>\r\n                    </div>\r\n                    <CardContent>\r\n\r\n                    </CardContent>\r\n\r\n                </Card>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default TasksList;"]},"metadata":{},"sourceType":"module"}