{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\Users\\\\UserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DarkTextField, DarkSelect } from '../GlobalComponents';\nimport EmployeeForm from '../Employees/EmployeeForm';\nimport APIURL from '../../Services/Globals';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  mainConteiner: {\n    marginTop: \"1.8rem\",\n    background: theme.palette.grey[800],\n    paddingBottom: '20px'\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '1px',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2]\n  },\n  formGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    justifyContent: \"space-between\",\n    alignContent: \"space-between\"\n  }\n}));\n\nconst UserForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const [user, setUser] = useState({});\n  const [allertProps, setAllertProps] = useState({\n    text: '',\n    open: false,\n    type: 'success'\n  });\n\n  const PostUser = employee => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: 0,\n        username: user.username,\n        password: user.password,\n        employeeDTO: employee\n      })\n    };\n    fetch(APIURL + 'users', requestOptions).then(response => response.json()).then(() => {\n      setAllertProps({\n        text: \"User Created\",\n        open: true,\n        type: \"success\"\n      });\n    }, err => {\n      console.log(err);\n      setAllertProps({\n        text: \"User Creation Error!\",\n        open: true,\n        type: \"error\"\n      });\n    });\n  };\n\n  const hendleEmployeeCreations = employee => {\n    PostUser(employee);\n  };\n\n  const handleAllertClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setAllertProps({ ...allertProps,\n      open: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.mainConteiner,\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        open: allertProps.open,\n        autoHideDuration: 4000,\n        onClose: handleAllertClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleAllertClose,\n          severity: allertProps.type,\n          children: allertProps.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        boxshadow: 2,\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formGrid,\n          children: [/*#__PURE__*/_jsxDEV(DarkTextField, {\n            label: \"Username\",\n            name: \"employeeName\",\n            onChange: e => setUser({ ...user,\n              username: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n            label: \"Surname\",\n            name: \"employeeSurname\",\n            onChange: e => setUser({ ...user,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeForm, {\n      createdEmployee: hendleEmployeeCreations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserForm, \"GUnEu3S4l5ia+Geo4sKZyhcJjlQ=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = UserForm;\nexport default UserForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"UserForm\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/Users/UserForm.js"],"names":["React","useEffect","useState","makeStyles","DarkTextField","DarkSelect","EmployeeForm","APIURL","Button","Snackbar","MuiAlert","Alert","props","useStyles","theme","mainConteiner","marginTop","background","palette","grey","paddingBottom","title","color","text","primary","textAlign","padding","backgroundColor","main","boxShadow","shadows","formGrid","display","gridTemplateColumns","justifyContent","alignContent","UserForm","classes","user","setUser","allertProps","setAllertProps","open","type","PostUser","employee","requestOptions","method","headers","body","JSON","stringify","id","username","password","employeeDTO","fetch","then","response","json","err","console","log","hendleEmployeeCreations","handleAllertClose","event","reason","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DarkTextField, DarkSelect } from '../GlobalComponents';\r\nimport EmployeeForm from '../Employees/EmployeeForm'\r\n\r\nimport APIURL from '../../Services/Globals'\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainConteiner: {\r\n        marginTop: \"1.8rem\",\r\n        background: theme.palette.grey[800],\r\n        paddingBottom: '20px'\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '1px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n    },\r\n    formGrid: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr\",\r\n        justifyContent: \"space-between\",\r\n        alignContent: \"space-between\",\r\n    },\r\n}));\r\n\r\nconst UserForm = () => {\r\n    const classes = useStyles();\r\n    const [user, setUser] = useState({});\r\n    const [allertProps, setAllertProps] = useState({\r\n        text: '',\r\n        open: false,\r\n        type: 'success'\r\n    });\r\n\r\n    const PostUser = (employee) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                id: 0,\r\n                username: user.username,\r\n                password: user.password,\r\n                employeeDTO: employee\r\n            }),\r\n        };\r\n\r\n        fetch(APIURL + 'users', requestOptions)\r\n            .then(response => response.json())\r\n            .then(() => {\r\n                setAllertProps({\r\n                    text: \"User Created\",\r\n                    open: true,\r\n                    type: \"success\"\r\n                })\r\n            }\r\n                , (err) => {\r\n                    console.log(err)\r\n                    setAllertProps({\r\n                        text: \"User Creation Error!\",\r\n                        open: true,\r\n                        type: \"error\"\r\n                    })\r\n                });\r\n    }\r\n\r\n    const hendleEmployeeCreations = (employee) => {\r\n        PostUser(employee);\r\n    }\r\n\r\n    const handleAllertClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAllertProps({ ...allertProps, open: false });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.mainConteiner}>\r\n                <Snackbar open={allertProps.open} autoHideDuration={4000} onClose={handleAllertClose}>\r\n                    <Alert onClose={handleAllertClose} severity={allertProps.type}>\r\n                        {allertProps.text}\r\n                    </Alert>\r\n                </Snackbar>\r\n                <div boxshadow={2} className={classes.title}>\r\n                    <h3 >Create New User</h3>\r\n                </div>\r\n                <form noValidate autoComplete=\"off\">\r\n                    <div className={classes.formGrid}>\r\n                        <DarkTextField\r\n                            label=\"Username\"\r\n                            name=\"employeeName\"\r\n                            onChange={(e) => setUser({ ...user, username: e.target.value })}\r\n                        />\r\n                        <DarkTextField\r\n                            label=\"Surname\"\r\n                            name=\"employeeSurname\"\r\n                            onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n                        />\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <EmployeeForm createdEmployee={hendleEmployeeCreations} />\r\n        </div>\r\n    )\r\n}\r\nexport default UserForm;"]},"metadata":{},"sourceType":"module"}