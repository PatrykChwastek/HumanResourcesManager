{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\UserTasks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport APIURL from '../Services/Globals';\nconst tasksColumns = [{\n  columnId: \"requested\",\n  name: \"Requested\",\n  items: []\n}, {\n  columnId: \"todo\",\n  name: \"To do\",\n  items: []\n}, {\n  columnId: \"inprogress\",\n  name: \"In Progress\",\n  items: []\n}];\n\nconst UserTasks = () => {\n  _s();\n\n  useEffect(() => {\n    getTasks(1, 10, \"Not Started\").then(data => {\n      console.log(data);\n    });\n    ;\n  }, []);\n\n  const getTasks = async (page, size, employeeid, status) => {\n    const requestOptions = {\n      method: 'Get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    return await fetch(APIURL + `tasks?page=${page}&size=${size}&employeeid=${employeeid}&status=${status}`, requestOptions).then(response => {\n      response.json();\n    }).then(data => {\n      return JSON.stringify(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserTasks, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UserTasks;\nexport default UserTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTasks\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/UserTasks.js"],"names":["React","useEffect","useState","DragDropContext","Draggable","Droppable","APIURL","tasksColumns","columnId","name","items","UserTasks","getTasks","then","data","console","log","page","size","employeeid","status","requestOptions","method","headers","fetch","response","json","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,MAAMC,YAAY,GAAG,CACjB;AACIC,EAAAA,QAAQ,EAAE,WADd;AAEIC,EAAAA,IAAI,EAAE,WAFV;AAGIC,EAAAA,KAAK,EAAE;AAHX,CADiB,EAMjB;AACIF,EAAAA,QAAQ,EAAE,MADd;AAEIC,EAAAA,IAAI,EAAE,OAFV;AAGIC,EAAAA,KAAK,EAAE;AAHX,CANiB,EAWjB;AACIF,EAAAA,QAAQ,EAAE,YADd;AAEIC,EAAAA,IAAI,EAAE,aAFV;AAGIC,EAAAA,KAAK,EAAE;AAHX,CAXiB,CAArB;;AAkBA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpBV,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,CAAC,CAAD,EAAI,EAAJ,EAAQ,aAAR,CAAR,CAA+BC,IAA/B,CAAqCC,IAAD,IAAU;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAFD;AAEG;AACN,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMF,QAAQ,GAAG,OAAOK,IAAP,EAAaC,IAAb,EAAmBC,UAAnB,EAA+BC,MAA/B,KAA0C;AACvD,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAFU,KAAvB;AAIA,WAAO,MAAMC,KAAK,CAAClB,MAAM,GACpB,cAAaW,IAAK,SAAQC,IAAK,eAAcC,UAAW,WAAUC,MAAO,EAD5D,EAEdC,cAFc,CAAL,CAGXR,IAHW,CAGLY,QAAD,IAAc;AACjBA,MAAAA,QAAQ,CAACC,IAAT;AAEH,KANY,EAORb,IAPQ,CAOHC,IAAI,IAAI;AACV,aAAOa,IAAI,CAACC,SAAL,CAAed,IAAf,CAAP;AACH,KATQ,CAAb;AAUH,GAfD;;AAgBA,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA7BD;;GAAMH,S;;KAAAA,S;AA8BN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport APIURL from '../Services/Globals';\r\n\r\nconst tasksColumns = [\r\n    {\r\n        columnId: \"requested\",\r\n        name: \"Requested\",\r\n        items: []\r\n    },\r\n    {\r\n        columnId: \"todo\",\r\n        name: \"To do\",\r\n        items: []\r\n    },\r\n    {\r\n        columnId: \"inprogress\",\r\n        name: \"In Progress\",\r\n        items: []\r\n    }\r\n];\r\n\r\nconst UserTasks = () => {\r\n\r\n    useEffect(() => {\r\n        getTasks(1, 10, \"Not Started\").then((data) => {\r\n            console.log(data);\r\n        });;\r\n    }, []);\r\n\r\n    const getTasks = async (page, size, employeeid, status) => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        return await fetch(APIURL +\r\n            `tasks?page=${page}&size=${size}&employeeid=${employeeid}&status=${status}`,\r\n            requestOptions\r\n        ).then((response) => {\r\n            response.json();\r\n\r\n        })\r\n            .then(data => {\r\n                return JSON.stringify(data)\r\n            })\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Tasks</h2>\r\n        </div>\r\n    );\r\n}\r\nexport default UserTasks;"]},"metadata":{},"sourceType":"module"}