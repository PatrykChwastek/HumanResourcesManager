{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\UserTasks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport APIURL from '../Services/Globals';\nimport { getCurrentUser } from '../Services/AuthService';\nimport moment from \"moment\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Accordion, AccordionSummary, AccordionDetails, Chip } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Toolbar from '@material-ui/core/Toolbar';\nconst useStyles = makeStyles(theme => ({\n  column: {\n    margin: \"8px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '8px',\n    marginBottom: '2px',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2],\n    width: '100%'\n  },\n  timeChip: {\n    margin: \"2px\",\n    boxShadow: theme.shadows[2],\n    fontSize: \"11px\",\n    fontWeight: \"550\"\n  },\n  filterBox: {\n    padding: \".1rem\",\n    paddingLeft: \"1.8rem\",\n    paddingRight: \"1.8rem\",\n    width: \"max-content\",\n    background: theme.palette.grey[800],\n    boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\"\n  },\n  whiteText: {\n    color: \"white\",\n    marginLeft: \"0px\",\n    marginRight: \"8px\"\n  }\n}));\n\nconst UserTasks = () => {\n  _s();\n\n  const classes = useStyles();\n  const [expandedTask, setExpandedTask] = useState('');\n  const [expandedSubTask, setExpandedSubTask] = useState('');\n  const [taskFilter, setTaskFilter] = useState({\n    filterMode: \"Today\",\n    startTime: moment().format(\"YYYY-MM-DD\")\n  });\n  const [columns, setColumns] = useState({\n    ['requested']: {\n      columnId: \"requested\",\n      name: \"Requested\",\n      statusName: \"Requested\",\n      items: []\n    },\n    ['inprogress']: {\n      columnId: \"inprogress\",\n      name: \"In Progress\",\n      statusName: \"In-Progress\",\n      items: []\n    },\n    ['completed']: {\n      columnId: \"completed\",\n      name: \"Completed\",\n      statusName: \"Completed\",\n      items: []\n    }\n  });\n  useEffect(() => {\n    const userID = getCurrentUser().userDetails.employeeDTO.id;\n    let completed = [];\n    let requested = [];\n    let progress = [];\n    console.log(taskFilter);\n    getTasks(1, 10, userID).then(data => {\n      data.items.forEach(item => {\n        switch (item.status) {\n          case \"Requested\":\n            requested.push(item);\n            break;\n\n          case \"Completed\":\n            completed.push(item);\n            break;\n\n          case \"In-Progress\":\n            progress.push(item);\n            break;\n        }\n      });\n      adddItemsToColumn(completed, requested, progress);\n    });\n    ;\n  }, []);\n\n  const adddItemsToColumn = (com, req, prog) => {\n    const completedCol = columns.completed;\n    const requestedCol = columns.requested;\n    const progressCol = columns.inprogress;\n    setColumns({ ...columns,\n      [completedCol.columnId]: { ...completedCol,\n        items: com\n      },\n      [requestedCol.columnId]: { ...requestedCol,\n        items: req\n      },\n      [progressCol.columnId]: { ...progressCol,\n        items: prog\n      }\n    });\n  };\n\n  const getTasks = async (page, size, employeeid, status) => {\n    const requestOptions = {\n      method: 'Get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    return await fetch(APIURL + `tasks?page=${page}&size=${size}&employeeid=${employeeid}`, requestOptions).then(response => {\n      if (response.ok) return response.json();else return Promise.reject();\n    }).then(data => {\n      return data;\n    });\n  };\n\n  const changeTaskStatus = async (taskID, status) => {\n    const requestOptions = {\n      method: 'Put',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    return await fetch(APIURL + `tasks?id=${taskID}&status=${status}`, requestOptions).then(response => {\n      if (response.ok) return response.json();else return Promise.reject();\n    }).then(data => {\n      return data;\n    });\n  };\n\n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const newStatus = columns[destination.droppableId].statusName;\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [changed] = sourceItems.splice(source.index, 1);\n      changed.status = newStatus;\n      destItems.splice(destItems.length, 0, changed); //destItems.splice(destination.index, 0, removed);\n\n      changeTaskStatus(changed.id, changed.status).then();\n      setColumns({ ...columns,\n        [source.droppableId]: { ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: { ...destColumn,\n          items: destItems\n        }\n      });\n    }\n  };\n\n  const handleTaskExpand = taskId => (event, newExpanded) => {\n    setExpandedTask(newExpanded ? taskId : false);\n  };\n\n  const handleSubTaskExpand = taskId => (event, newExpanded) => {\n    setExpandedSubTask(newExpanded ? taskId : false);\n  };\n\n  const handleFilterChange = e => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.filterBox,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.whiteText,\n        children: \"Tasks From: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        variant: \"contained\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: taskFilter.filterMode === 'Today' ? 'primary' : 'default',\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"This Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"This Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: result => onDragEnd(result, columns, setColumns),\n        children: Object.entries(columns).map(([columnId, column], index) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.column,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.title,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                noWrap: true,\n                variant: \"h5\",\n                children: column.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: columnId,\n              children: (provided, snapshot) => {\n                return /*#__PURE__*/_jsxDEV(CardContent, { ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  style: {\n                    background: snapshot.isDraggingOver ? \"rgb(128 128 128)\" : \"#424242\",\n                    padding: \"10px\",\n                    paddingBottom: \"0\",\n                    minWidth: \"300px\",\n                    minHeight: \"300px\"\n                  },\n                  children: [column.items.map((item, index) => {\n                    return /*#__PURE__*/_jsxDEV(Draggable, {\n                      draggableId: String(item.id),\n                      index: index,\n                      children: (provided, snapshot) => {\n                        return /*#__PURE__*/_jsxDEV(Accordion, {\n                          expanded: expandedTask === item.id,\n                          onChange: handleTaskExpand(item.id),\n                          ref: provided.innerRef,\n                          ...provided.draggableProps,\n                          ...provided.dragHandleProps,\n                          style: {\n                            userSelect: \"none\",\n                            backgroundColor: item.status === \"In-Progress\" ? \"rgb(93 135 230)\" : item.status === \"Requested\" ? \"rgb(255 188 0)\" : \"rgb(3 189 0)\",\n                            color: \"black\",\n                            borderRadius: '4px',\n                            marginBottom: '4px',\n                            ...provided.draggableProps.style\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n                              style: {\n                                color: \"black\"\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 278,\n                              columnNumber: 89\n                            }, this),\n                            style: {\n                              padding: '8px'\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"subtitle1\",\n                              children: item.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 281,\n                              columnNumber: 77\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 277,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                            style: {\n                              display: \"flex\",\n                              alignContent: \"flex-start\",\n                              flexDirection: 'column',\n                              padding: '0px'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                alignContent: 'space-around',\n                                alignItems: 'stretch',\n                                flexwrap: 'nowrap',\n                                justifyContent: 'space-evenly'\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                                className: classes.timeChip,\n                                label: \"Start: \" + item.startTime.toString().split('T')[0],\n                                color: \"primary\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 298,\n                                columnNumber: 81\n                              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                                className: classes.timeChip,\n                                label: \"Deadline: \" + item.deadline.toString().split('T')[0],\n                                color: \"primary\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 303,\n                                columnNumber: 81\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 290,\n                              columnNumber: 77\n                            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"body1\",\n                              style: {\n                                marginLeft: '5px',\n                                marginBottom: '5px'\n                              },\n                              children: item.description\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 309,\n                              columnNumber: 77\n                            }, this), item.subtasks.length === 0 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                paddingLeft: '8px',\n                                paddingRight: '8px',\n                                backgroundColor: \"rgb(0 0 0 / 26%)\"\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                children: \"Subtasks:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 323,\n                                columnNumber: 85\n                              }, this), item.subtasks.map(subtask => {\n                                return /*#__PURE__*/_jsxDEV(Accordion, {\n                                  expanded: expandedSubTask === subtask.id,\n                                  onChange: handleSubTaskExpand(subtask.id),\n                                  style: {\n                                    backgroundColor: item.status === \"In-Progress\" ? \"rgb(93 135 230)\" : item.status === \"Requested\" ? \"rgb(255 234 144)\" : \"rgb(3 189 0)\",\n                                    color: \"black\",\n                                    marginBottom: '4px',\n                                    borderRadius: '4px',\n                                    padding: '0px'\n                                  },\n                                  children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                                    expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n                                      style: {\n                                        color: \"black\"\n                                      }\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 346,\n                                      columnNumber: 113\n                                    }, this),\n                                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                                      children: subtask.name\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 348,\n                                      columnNumber: 101\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 345,\n                                    columnNumber: 97\n                                  }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                                    children: subtask.description\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 352,\n                                    columnNumber: 97\n                                  }, this)]\n                                }, subtask.id, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 328,\n                                  columnNumber: 93\n                                }, this);\n                              })]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 318,\n                              columnNumber: 81\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 283,\n                            columnNumber: 73\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 256,\n                          columnNumber: 69\n                        }, this);\n                      }\n                    }, item.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 57\n                    }, this);\n                  }), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 45\n                }, this);\n              }\n            }, columnId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this)]\n          }, columnId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserTasks, \"xdvbTabewTjVyODRrjFt2y2jsuw=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserTasks;\nexport default UserTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTasks\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/UserTasks.js"],"names":["React","useEffect","useState","DragDropContext","Draggable","Droppable","APIURL","getCurrentUser","moment","makeStyles","Card","CardContent","Typography","Accordion","AccordionSummary","AccordionDetails","Chip","ExpandMoreIcon","Button","ButtonGroup","Toolbar","useStyles","theme","column","margin","display","flexDirection","alignItems","title","color","palette","text","primary","textAlign","padding","marginBottom","backgroundColor","main","boxShadow","shadows","width","timeChip","fontSize","fontWeight","filterBox","paddingLeft","paddingRight","background","grey","whiteText","marginLeft","marginRight","UserTasks","classes","expandedTask","setExpandedTask","expandedSubTask","setExpandedSubTask","taskFilter","setTaskFilter","filterMode","startTime","format","columns","setColumns","columnId","name","statusName","items","userID","userDetails","employeeDTO","id","completed","requested","progress","console","log","getTasks","then","data","forEach","item","status","push","adddItemsToColumn","com","req","prog","completedCol","requestedCol","progressCol","inprogress","page","size","employeeid","requestOptions","method","headers","fetch","response","ok","json","Promise","reject","changeTaskStatus","taskID","onDragEnd","result","destination","source","droppableId","newStatus","sourceColumn","destColumn","sourceItems","destItems","changed","splice","index","length","handleTaskExpand","taskId","event","newExpanded","handleSubTaskExpand","handleFilterChange","e","justifyContent","height","Object","entries","map","provided","snapshot","droppableProps","innerRef","isDraggingOver","paddingBottom","minWidth","minHeight","String","draggableProps","dragHandleProps","userSelect","borderRadius","style","alignContent","flexwrap","toString","split","deadline","description","subtasks","subtask","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport APIURL from '../Services/Globals';\r\nimport { getCurrentUser } from '../Services/AuthService';\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Accordion, AccordionSummary, AccordionDetails, Chip } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    column: {\r\n        margin: \"8px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '8px',\r\n        marginBottom: '2px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n        width: '100%',\r\n    },\r\n    timeChip: {\r\n        margin: \"2px\",\r\n        boxShadow: theme.shadows[2],\r\n        fontSize: \"11px\",\r\n        fontWeight: \"550\"\r\n\r\n    },\r\n    filterBox: {\r\n        padding: \".1rem\",\r\n        paddingLeft: \"1.8rem\",\r\n        paddingRight: \"1.8rem\",\r\n        width: \"max-content\",\r\n        background: theme.palette.grey[800],\r\n        boxShadow:\r\n            \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n    },\r\n    whiteText: {\r\n        color: \"white\",\r\n        marginLeft: \"0px\",\r\n        marginRight: \"8px\",\r\n    },\r\n}));\r\n\r\nconst UserTasks = () => {\r\n    const classes = useStyles();\r\n    const [expandedTask, setExpandedTask] = useState('');\r\n    const [expandedSubTask, setExpandedSubTask] = useState('');\r\n    const [taskFilter, setTaskFilter] = useState({\r\n        filterMode: \"Today\",\r\n        startTime: moment().format(\"YYYY-MM-DD\")\r\n    });\r\n    const [columns, setColumns] = useState({\r\n\r\n        ['requested']: {\r\n            columnId: \"requested\",\r\n            name: \"Requested\",\r\n            statusName: \"Requested\",\r\n            items: []\r\n        },\r\n        ['inprogress']: {\r\n            columnId: \"inprogress\",\r\n            name: \"In Progress\",\r\n            statusName: \"In-Progress\",\r\n            items: []\r\n        },\r\n        ['completed']: {\r\n            columnId: \"completed\",\r\n            name: \"Completed\",\r\n            statusName: \"Completed\",\r\n            items: []\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        const userID = getCurrentUser().userDetails.employeeDTO.id;\r\n        let completed = [];\r\n        let requested = [];\r\n        let progress = [];\r\n        console.log(taskFilter);\r\n        getTasks(1, 10, userID,).then((data) => {\r\n            data.items.forEach(item => {\r\n                switch (item.status) {\r\n                    case \"Requested\":\r\n                        requested.push(item)\r\n                        break;\r\n                    case \"Completed\":\r\n                        completed.push(item)\r\n                        break;\r\n                    case \"In-Progress\":\r\n                        progress.push(item)\r\n                        break;\r\n                }\r\n            });\r\n            adddItemsToColumn(completed, requested, progress);\r\n        });;\r\n    }, []);\r\n\r\n    const adddItemsToColumn = (com, req, prog) => {\r\n        const completedCol = columns.completed;\r\n        const requestedCol = columns.requested;\r\n        const progressCol = columns.inprogress;\r\n        setColumns({\r\n            ...columns, [completedCol.columnId]: {\r\n                ...completedCol,\r\n                items: com\r\n            }, [requestedCol.columnId]: {\r\n                ...requestedCol,\r\n                items: req\r\n            }, [progressCol.columnId]: {\r\n                ...progressCol,\r\n                items: prog\r\n            },\r\n        })\r\n    }\r\n\r\n    const getTasks = async (page, size, employeeid, status) => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        return await fetch(APIURL +\r\n            `tasks?page=${page}&size=${size}&employeeid=${employeeid}`,\r\n            requestOptions\r\n        ).then((response) => {\r\n            if (response.ok)\r\n                return response.json();\r\n            else\r\n                return Promise.reject();\r\n        })\r\n            .then(data => {\r\n                return data\r\n            })\r\n    }\r\n\r\n    const changeTaskStatus = async (taskID, status) => {\r\n        const requestOptions = {\r\n            method: 'Put',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        return await fetch(APIURL +\r\n            `tasks?id=${taskID}&status=${status}`,\r\n            requestOptions\r\n        ).then((response) => {\r\n            if (response.ok)\r\n                return response.json();\r\n            else\r\n                return Promise.reject();\r\n        })\r\n            .then(data => {\r\n                return data\r\n            })\r\n    }\r\n\r\n    const onDragEnd = (result, columns, setColumns) => {\r\n        if (!result.destination) return;\r\n        const { source, destination } = result;\r\n        if (source.droppableId !== destination.droppableId) {\r\n            const newStatus = columns[destination.droppableId].statusName;\r\n            const sourceColumn = columns[source.droppableId];\r\n            const destColumn = columns[destination.droppableId];\r\n            const sourceItems = [...sourceColumn.items];\r\n            const destItems = [...destColumn.items];\r\n\r\n            const [changed] = sourceItems.splice(source.index, 1);\r\n            changed.status = newStatus;\r\n            destItems.splice(destItems.length, 0, changed);\r\n            //destItems.splice(destination.index, 0, removed);\r\n\r\n            changeTaskStatus(changed.id, changed.status).then();\r\n\r\n            setColumns({\r\n                ...columns,\r\n                [source.droppableId]: {\r\n                    ...sourceColumn,\r\n                    items: sourceItems\r\n                },\r\n                [destination.droppableId]: {\r\n                    ...destColumn,\r\n                    items: destItems\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTaskExpand = (taskId) => (event, newExpanded) => {\r\n        setExpandedTask(newExpanded ? taskId : false);\r\n    }\r\n    const handleSubTaskExpand = (taskId) => (event, newExpanded) => {\r\n        setExpandedSubTask(newExpanded ? taskId : false);\r\n    }\r\n    const handleFilterChange = (e) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toolbar className={classes.filterBox}>\r\n                <h3 className={classes.whiteText}>Tasks From: </h3>\r\n\r\n                <ButtonGroup variant=\"contained\">\r\n                    <Button color={taskFilter.filterMode === 'Today' ? 'primary' : 'default'}>Today</Button>\r\n                    <Button>This Week</Button>\r\n                    <Button>This Month</Button>\r\n                </ButtonGroup>\r\n            </Toolbar>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\r\n                <DragDropContext\r\n                    onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\r\n                >\r\n                    {Object.entries(columns).map(([columnId, column], index) => {\r\n                        return (\r\n                            <Card className={classes.column}\r\n\r\n                                key={columnId}\r\n                            >\r\n                                <div className={classes.title}>\r\n                                    <Typography noWrap variant=\"h5\">{column.name}</Typography>\r\n                                </div>\r\n                                <Droppable droppableId={columnId} key={columnId}>\r\n                                    {(provided, snapshot) => {\r\n                                        return (\r\n                                            <CardContent {...provided.droppableProps}\r\n                                                ref={provided.innerRef}\r\n                                                style={{\r\n                                                    background: snapshot.isDraggingOver\r\n                                                        ? \"rgb(128 128 128)\"\r\n                                                        : \"#424242\",\r\n                                                    padding: \"10px\",\r\n                                                    paddingBottom: \"0\",\r\n                                                    minWidth: \"300px\",\r\n                                                    minHeight: \"300px\"\r\n                                                }}\r\n                                            >\r\n                                                {column.items.map((item, index) => {\r\n                                                    return (\r\n                                                        <Draggable\r\n                                                            key={item.id}\r\n                                                            draggableId={String(item.id)}\r\n                                                            index={index}\r\n                                                        >\r\n                                                            {(provided, snapshot) => {\r\n                                                                return (\r\n                                                                    <Accordion\r\n                                                                        expanded={expandedTask === item.id}\r\n                                                                        onChange={handleTaskExpand(item.id)}\r\n                                                                        ref={provided.innerRef}\r\n                                                                        {...provided.draggableProps}\r\n                                                                        {...provided.dragHandleProps}\r\n                                                                        style={{\r\n                                                                            userSelect: \"none\",\r\n                                                                            backgroundColor:\r\n                                                                                item.status === \"In-Progress\"\r\n                                                                                    ? \"rgb(93 135 230)\"\r\n                                                                                    : item.status === \"Requested\"\r\n                                                                                        ? \"rgb(255 188 0)\"\r\n                                                                                        : \"rgb(3 189 0)\",\r\n                                                                            color: \"black\",\r\n                                                                            borderRadius: '4px',\r\n                                                                            marginBottom: '4px',\r\n                                                                            ...provided.draggableProps.style\r\n                                                                        }}\r\n                                                                    >\r\n\r\n                                                                        <AccordionSummary\r\n                                                                            expandIcon={<ExpandMoreIcon style={{ color: \"black\" }} />}\r\n                                                                            style={{ padding: '8px' }}\r\n                                                                        >\r\n                                                                            <Typography variant=\"subtitle1\">{item.name}</Typography>\r\n                                                                        </AccordionSummary>\r\n                                                                        <AccordionDetails style={{\r\n                                                                            display: \"flex\",\r\n\r\n                                                                            alignContent: \"flex-start\",\r\n                                                                            flexDirection: 'column',\r\n                                                                            padding: '0px',\r\n                                                                        }}>\r\n                                                                            <div style={{\r\n                                                                                display: \"flex\",\r\n                                                                                flexDirection: \"row\",\r\n                                                                                alignContent: 'space-around',\r\n                                                                                alignItems: 'stretch',\r\n                                                                                flexwrap: 'nowrap',\r\n                                                                                justifyContent: 'space-evenly'\r\n                                                                            }}>\r\n                                                                                <Chip\r\n                                                                                    className={classes.timeChip}\r\n                                                                                    label={\"Start: \" + item.startTime.toString().split('T')[0]}\r\n                                                                                    color=\"primary\"\r\n                                                                                />\r\n                                                                                <Chip\r\n                                                                                    className={classes.timeChip}\r\n                                                                                    label={\"Deadline: \" + item.deadline.toString().split('T')[0]}\r\n                                                                                    color=\"primary\"\r\n                                                                                />\r\n                                                                            </div>\r\n                                                                            <Typography\r\n                                                                                variant=\"body1\"\r\n                                                                                style={{ marginLeft: '5px', marginBottom: '5px' }}\r\n                                                                            >\r\n                                                                                {item.description}\r\n                                                                            </Typography>\r\n\r\n\r\n                                                                            {item.subtasks.length === 0 ? null :\r\n                                                                                <div style={{\r\n                                                                                    paddingLeft: '8px',\r\n                                                                                    paddingRight: '8px',\r\n                                                                                    backgroundColor: \"rgb(0 0 0 / 26%)\"\r\n                                                                                }}>\r\n                                                                                    <Typography>\r\n                                                                                        Subtasks:\r\n                                                                                    </Typography>\r\n                                                                                    {item.subtasks.map((subtask) => {\r\n                                                                                        return (\r\n                                                                                            <Accordion\r\n                                                                                                expanded={expandedSubTask === subtask.id}\r\n                                                                                                onChange={handleSubTaskExpand(subtask.id)}\r\n                                                                                                key={subtask.id}\r\n                                                                                                style={{\r\n                                                                                                    backgroundColor:\r\n                                                                                                        item.status === \"In-Progress\"\r\n                                                                                                            ? \"rgb(93 135 230)\"\r\n                                                                                                            : item.status === \"Requested\"\r\n                                                                                                                ? \"rgb(255 234 144)\"\r\n                                                                                                                : \"rgb(3 189 0)\",\r\n                                                                                                    color: \"black\",\r\n                                                                                                    marginBottom: '4px',\r\n                                                                                                    borderRadius: '4px',\r\n                                                                                                    padding: '0px'\r\n\r\n                                                                                                }}>\r\n                                                                                                <AccordionSummary\r\n                                                                                                    expandIcon={<ExpandMoreIcon style={{ color: \"black\" }} />}\r\n                                                                                                >\r\n                                                                                                    <Typography>\r\n                                                                                                        {subtask.name}\r\n                                                                                                    </Typography>\r\n                                                                                                </AccordionSummary>\r\n                                                                                                <AccordionDetails>\r\n                                                                                                    {subtask.description}\r\n                                                                                                </AccordionDetails>\r\n                                                                                            </Accordion>\r\n                                                                                        );\r\n                                                                                    })}\r\n                                                                                </div>\r\n                                                                            }\r\n                                                                        </AccordionDetails>\r\n                                                                    </Accordion>\r\n                                                                );\r\n                                                            }}\r\n                                                        </Draggable>\r\n                                                    );\r\n                                                })}\r\n                                                {provided.placeholder}\r\n                                            </CardContent>\r\n                                        );\r\n                                    }}\r\n                                </Droppable>\r\n                            </Card>\r\n                        );\r\n                    })}\r\n                </DragDropContext>\r\n            </div >\r\n        </div>\r\n    );\r\n}\r\nexport default UserTasks;"]},"metadata":{},"sourceType":"module"}