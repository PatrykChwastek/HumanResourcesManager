{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\JobOffers\\\\JobOfferForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DarkTextField, DarkSelect, DarkChipList } from '../GlobalComponents';\nimport APIURL from '../../Services/Globals';\nimport { authHeader } from '../../Services/AuthService';\nimport { useLocation } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  mainConteiner: {\n    marginTop: \"1.8rem\",\n    background: theme.palette.grey[800],\n    paddingBottom: '20px'\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '1px',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2]\n  },\n  form: {\n    display: 'grid',\n    gridGap: \"1.5rem\"\n  },\n  formGrid: {\n    marginTop: '1.5rem',\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    justifyContent: \"space-between\",\n    alignContent: \"space-between\",\n    gridGap: \"1.5rem 1.5rem\"\n  },\n  createButton: {\n    margin: '0 auto',\n    display: 'block',\n    width: \"19rem\"\n  }\n}));\n\nconst JobOfferForm = () => {\n  _s();\n\n  var _setSelectVall, _jobOffer$position;\n\n  const classes = useStyles();\n  const location = useLocation();\n  const [jobOffer, setJobOffer] = useState(location.jobOffer !== undefined ? location.jobOffer.jobOffer : {\n    id: 0,\n    position: {\n      id: 0\n    }\n  });\n  const [positions, setPositions] = useState([]);\n  const [allertProps, setAllertProps] = useState({\n    text: '',\n    open: false,\n    type: 'success'\n  });\n  useEffect(() => {\n    getPositions();\n  }, []);\n\n  const postJobOffer = () => {\n    jobOffer.position = null;\n    const requestOptions = {\n      method: 'Post',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': authHeader()\n      }),\n      body: JSON.stringify(jobOffer)\n    };\n    fetch(APIURL + \"jobOffers\", requestOptions).then(response => response.json()).then(() => {\n      setAllertProps({\n        text: \"Job Offer Created\",\n        open: true,\n        type: \"success\"\n      });\n    }, err => {\n      console.log(err);\n      setAllertProps({\n        text: \"Job Offer Creation Error!\",\n        open: true,\n        type: \"error\"\n      });\n    });\n  };\n\n  const putJobOffer = () => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': authHeader()\n      }),\n      body: JSON.stringify(jobOffer)\n    };\n    fetch(APIURL + 'jobOffers/' + jobOffer.id, requestOptions).then(() => setAllertProps({\n      text: \"Job Offer Modified\",\n      open: true,\n      type: 'success'\n    }), err => {\n      console.log(err);\n      setAllertProps({\n        text: \"Job Offer Edit Error!\",\n        open: true,\n        type: \"error\"\n      });\n    });\n  };\n\n  const getPositions = async () => {\n    const requestOptions = {\n      method: 'Get',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': authHeader()\n      })\n    };\n    await fetch(APIURL + \"positions\", requestOptions).then(response => response.json()).then(data => setPositions(data));\n  };\n\n  const headleFormChange = e => {\n    setJobOffer({ ...jobOffer,\n      name: e.target.name === 'name' ? e.target.value : jobOffer.name,\n      availableJobs: e.target.name === 'jobsQuantity' ? e.target.value : jobOffer.availableJobs,\n      positionId: e.target.name === 'position' ? e.target.value.id : jobOffer.positionId,\n      position: e.target.name === 'position' ? e.target.value : jobOffer.position,\n      description: e.target.name === 'description' ? e.target.value : jobOffer.description\n    });\n  };\n\n  const hendleSubmitOffer = () => {\n    if (location.jobOffer !== undefined) {\n      putJobOffer();\n      return;\n    }\n\n    postJobOffer();\n  };\n\n  const setSelectVall = (colection, objId) => {\n    if (colection[0] === undefined || objId === 0) return '';\n    return colection[colection.findIndex(item => item.id === objId)];\n  };\n\n  const handleAllertClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setAllertProps({ ...allertProps,\n      open: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainConteiner,\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: allertProps.open,\n      autoHideDuration: 4000,\n      onClose: handleAllertClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleAllertClose,\n        severity: allertProps.type,\n        children: allertProps.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      boxshadow: 2,\n      className: classes.title,\n      children: location.jobOffer !== undefined ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: 'Edit Job Offer: ' + jobOffer.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Job Offer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGrid,\n        children: [/*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"Name\",\n          name: \"name\",\n          value: jobOffer.name,\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"Available Jobs\",\n          name: \"jobsQuantity\",\n          type: \"number\",\n          value: jobOffer.availableJobs,\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkSelect, {\n          label: \"Position\",\n          name: \"position\",\n          collection: positions,\n          value: (_setSelectVall = setSelectVall(positions, (_jobOffer$position = jobOffer.position) === null || _jobOffer$position === void 0 ? void 0 : _jobOffer$position.id)) !== null && _setSelectVall !== void 0 ? _setSelectVall : \"\",\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n        label: \"Job Description...\",\n        name: \"description\",\n        maxRows: 10,\n        value: jobOffer.description,\n        onChange: headleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.createButton,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: hendleSubmitOffer,\n        children: \"Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobOfferForm, \"7Hhb/D38Uwjg3ID03rqMDZ/LEIc=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c2 = JobOfferForm;\nexport default JobOfferForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"JobOfferForm\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/JobOffers/JobOfferForm.js"],"names":["React","useEffect","useState","makeStyles","DarkTextField","DarkSelect","DarkChipList","APIURL","authHeader","useLocation","Button","Snackbar","MuiAlert","Alert","props","useStyles","theme","mainConteiner","marginTop","background","palette","grey","paddingBottom","title","color","text","primary","textAlign","padding","backgroundColor","main","boxShadow","shadows","form","display","gridGap","formGrid","gridTemplateColumns","justifyContent","alignContent","createButton","margin","width","JobOfferForm","classes","location","jobOffer","setJobOffer","undefined","id","position","positions","setPositions","allertProps","setAllertProps","open","type","getPositions","postJobOffer","requestOptions","method","headers","Headers","body","JSON","stringify","fetch","then","response","json","err","console","log","putJobOffer","data","headleFormChange","e","name","target","value","availableJobs","positionId","description","hendleSubmitOffer","setSelectVall","colection","objId","findIndex","item","handleAllertClose","event","reason"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DarkTextField, DarkSelect, DarkChipList } from '../GlobalComponents';\r\nimport APIURL from '../../Services/Globals'\r\nimport { authHeader } from '../../Services/AuthService'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainConteiner: {\r\n        marginTop: \"1.8rem\",\r\n        background: theme.palette.grey[800],\r\n        paddingBottom: '20px'\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '1px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n    },\r\n    form: {\r\n        display: 'grid',\r\n        gridGap: \"1.5rem\",\r\n    },\r\n    formGrid: {\r\n        marginTop: '1.5rem',\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr 1fr\",\r\n        justifyContent: \"space-between\",\r\n        alignContent: \"space-between\",\r\n        gridGap: \"1.5rem 1.5rem\",\r\n    },\r\n    createButton: {\r\n        margin: '0 auto',\r\n        display: 'block',\r\n        width: \"19rem\",\r\n    }\r\n}));\r\nconst JobOfferForm = () => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const [jobOffer, setJobOffer] = useState(location.jobOffer !== undefined ? location.jobOffer.jobOffer : { id: 0, position: { id: 0 } });\r\n    const [positions, setPositions] = useState([]);\r\n    const [allertProps, setAllertProps] = useState({\r\n        text: '',\r\n        open: false,\r\n        type: 'success'\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        getPositions()\r\n    }, []);\r\n\r\n    const postJobOffer = () => {\r\n        jobOffer.position = null;\r\n        const requestOptions = {\r\n            method: 'Post',\r\n            headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() }),\r\n            body: JSON.stringify(jobOffer)\r\n        };\r\n\r\n        fetch(APIURL + `jobOffers`,\r\n            requestOptions\r\n        ).then(response => response.json())\r\n            .then(() => {\r\n                setAllertProps({\r\n                    text: \"Job Offer Created\",\r\n                    open: true,\r\n                    type: \"success\"\r\n                })\r\n            }\r\n                , (err) => {\r\n                    console.log(err)\r\n                    setAllertProps({\r\n                        text: \"Job Offer Creation Error!\",\r\n                        open: true,\r\n                        type: \"error\"\r\n                    })\r\n                });\r\n    }\r\n\r\n    const putJobOffer = () => {\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() }),\r\n            body: JSON.stringify(jobOffer),\r\n        };\r\n        fetch(APIURL + 'jobOffers/' + jobOffer.id, requestOptions)\r\n            .then(() => setAllertProps({\r\n                text: \"Job Offer Modified\",\r\n                open: true,\r\n                type: 'success'\r\n            })\r\n                , (err) => {\r\n                    console.log(err)\r\n                    setAllertProps({\r\n                        text: \"Job Offer Edit Error!\",\r\n                        open: true,\r\n                        type: \"error\"\r\n                    })\r\n                }\r\n            );\r\n    }\r\n\r\n    const getPositions = async () => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() })\r\n        };\r\n\r\n        await fetch(APIURL + `positions`,\r\n            requestOptions\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => setPositions(data));\r\n    }\r\n\r\n    const headleFormChange = e => {\r\n        setJobOffer({\r\n            ...jobOffer,\r\n            name: e.target.name === 'name' ? e.target.value : jobOffer.name,\r\n            availableJobs: e.target.name === 'jobsQuantity' ? e.target.value : jobOffer.availableJobs,\r\n            positionId: e.target.name === 'position' ? e.target.value.id : jobOffer.positionId,\r\n            position: e.target.name === 'position' ? e.target.value : jobOffer.position,\r\n            description: e.target.name === 'description' ? e.target.value : jobOffer.description\r\n        })\r\n    }\r\n\r\n    const hendleSubmitOffer = () => {\r\n        if (location.jobOffer !== undefined) {\r\n            putJobOffer()\r\n            return;\r\n        }\r\n        postJobOffer();\r\n    }\r\n\r\n\r\n    const setSelectVall = (colection, objId) => {\r\n        if (colection[0] === undefined || objId === 0)\r\n            return '';\r\n\r\n        return colection[colection.findIndex((item) => item.id === objId)];\r\n    }\r\n\r\n    const handleAllertClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAllertProps({ ...allertProps, open: false });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.mainConteiner}>\r\n            <Snackbar open={allertProps.open} autoHideDuration={4000} onClose={handleAllertClose}>\r\n                <Alert onClose={handleAllertClose} severity={allertProps.type}>\r\n                    {allertProps.text}\r\n                </Alert>\r\n            </Snackbar>\r\n            <div boxshadow={2} className={classes.title}>\r\n                {location.jobOffer !== undefined ?\r\n                    <h3 >{'Edit Job Offer: ' + jobOffer.id}</h3> :\r\n                    <h3 >Create Job Offer</h3>\r\n                }\r\n            </div>\r\n            <form className={classes.form} noValidate autoComplete=\"off\">\r\n                <div className={classes.formGrid}>\r\n                    <DarkTextField\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        value={jobOffer.name}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkTextField\r\n                        label=\"Available Jobs\"\r\n                        name=\"jobsQuantity\"\r\n                        type=\"number\"\r\n                        value={jobOffer.availableJobs}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkSelect\r\n                        label=\"Position\"\r\n                        name=\"position\"\r\n                        collection={positions}\r\n                        value={setSelectVall(positions, jobOffer.position?.id) ?? \"\"}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                </div>\r\n                <DarkTextField\r\n                    label=\"Job Description...\"\r\n                    name=\"description\"\r\n                    maxRows={10}\r\n                    value={jobOffer.description}\r\n                    onChange={headleFormChange}\r\n                />\r\n                <Button\r\n                    className={classes.createButton}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={hendleSubmitOffer}\r\n                >Submit </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default JobOfferForm"]},"metadata":{},"sourceType":"module"}