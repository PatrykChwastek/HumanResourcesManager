{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\Users\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DarkTextField, DarkSelect } from '../GlobalComponents';\nimport APIURL from '../../Services/Globals';\nimport AuthService, { getCurrentUser } from '../../Services/AuthService';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  formConteiner: {\n    marginTop: \"1.8rem\",\n    background: theme.palette.grey[800],\n    paddingBottom: '20px'\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '1px',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2]\n  },\n  profileForm: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: '8px'\n  },\n  usernameBox: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    '& .MuiFormControl-root': {\n      width: '100%'\n    }\n  },\n  formText: {\n    color: 'white',\n    margin: '20px 18px 6px'\n  },\n  formButton: {\n    alignSelf: \"flex-start\",\n    padding: '8px 25px',\n    marginTop: '12px',\n    marginLeft: '18px',\n    marginRight: '10px'\n  },\n  formGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    justifyContent: \"space-between\",\n    alignContent: \"space-between\",\n    gridGap: \"1.2rem 1.2rem\"\n  },\n  infoText: {\n    color: \"white\",\n    marginLeft: '18px',\n    fontSize: '18px',\n    fontWeight: 500,\n    '& span': {\n      color: \"rgba(255, 255, 255, 0.7)\",\n      fontWeight: 400\n    }\n  }\n}));\n\nconst Profile = () => {\n  _s();\n\n  const classes = useStyles();\n  const [user, setUser] = useState(getCurrentUser().userDetails);\n  const [userCredentials, setUserCredentials] = useState({\n    isChangePassword: false,\n    isUsernameChanged: false,\n    username: '',\n    oldPass: '',\n    newPass: ''\n  });\n  const [allertProps, setAllertProps] = useState({\n    text: '',\n    open: false,\n    type: 'success'\n  });\n\n  const onUsernameConfirm = () => {\n    if (userCredentials.isUsernameChanged) {\n      putUser(userCredentials.username);\n    }\n  };\n\n  const onPasswordConfirm = () => {\n    if (userCredentials.isChangePassword) {\n      changePassword();\n    }\n  };\n\n  const putUser = newUsername => {\n    const requestOptions = {\n      method: 'Put',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: user.id,\n        username: newUsername === undefined ? user.username : newUsername,\n        password: user.password,\n        employeeDTO: user.employeeDTO\n      })\n    };\n    fetch(APIURL + 'users/' + user.id, requestOptions).then(res => {\n      if (res.status >= 400) {\n        console.log(res);\n        setAllertProps({\n          text: \"Error\",\n          open: true,\n          type: \"error\"\n        });\n        return;\n      }\n\n      setAllertProps({\n        text: newUsername === undefined ? \"User Data Changed\" : \"Username Changed\",\n        open: true,\n        type: \"success\"\n      });\n      AuthService.login({\n        username: newUsername,\n        password: user.password\n      }).then(data => {\n        setUserCredentials({ ...userCredentials,\n          isUsernameChanged: false,\n          username: ''\n        });\n        setUser(getCurrentUser().userDetails);\n      }, e => {\n        console.log(\"login error\");\n      });\n    });\n  };\n\n  const changePassword = () => {\n    if (userCredentials.oldPass === '' && userCredentials.newPass === '') {\n      setUserCredentials({ ...userCredentials,\n        isChangePassword: false\n      });\n      return;\n    }\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user.id,\n        oldPassword: userCredentials.oldPass,\n        newPassword: userCredentials.newPass\n      })\n    };\n    fetch(APIURL + 'users/change-pass', requestOptions).then(res => {\n      if (res.status >= 400) {\n        console.log(res);\n        setAllertProps({\n          text: \"Error\",\n          open: true,\n          type: \"error\"\n        });\n        return;\n      }\n\n      setAllertProps({\n        text: \"Password Changed\",\n        open: true,\n        type: \"success\"\n      });\n    }).then(() => {\n      AuthService.login({\n        username: user.username,\n        password: userCredentials.newPass\n      }).then(data => {\n        setUserCredentials({ ...userCredentials,\n          isChangePassword: false,\n          oldPass: '',\n          newPass: ''\n        });\n        setUser(getCurrentUser().userDetails);\n      }, e => {\n        console.log(\"login error\");\n      });\n    });\n  };\n\n  const onUsernameChange = e => {\n    const usernameVal = e.target.value;\n\n    if (usernameVal === user.username) {\n      setUserCredentials({ ...userCredentials,\n        isUsernameChanged: false\n      });\n      return;\n    }\n\n    setUserCredentials({ ...userCredentials,\n      username: usernameVal,\n      isUsernameChanged: true\n    });\n  };\n\n  const handleAllertClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setAllertProps({ ...allertProps,\n      open: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formConteiner,\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        open: allertProps.open,\n        autoHideDuration: 4000,\n        onClose: handleAllertClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleAllertClose,\n          severity: allertProps.type,\n          children: allertProps.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        boxshadow: 2,\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User Credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.profileForm,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.usernameBox,\n            children: [/*#__PURE__*/_jsxDEV(DarkTextField, {\n              label: \"Username\",\n              defaultValue: user.username,\n              onChange: onUsernameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), !userCredentials.isUsernameChanged ? null : /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.formButton,\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: onUsernameConfirm,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: classes.formText,\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), !userCredentials.isChangePassword ? /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.formButton,\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => setUserCredentials({ ...userCredentials,\n              isChangePassword: true\n            }),\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DarkTextField, {\n              label: \"Old Password\",\n              type: 'password',\n              value: userCredentials.oldPass,\n              onChange: e => setUserCredentials({ ...userCredentials,\n                oldPass: e.target.value,\n                isChangePassword: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n              label: \"New Password\",\n              type: 'password',\n              value: userCredentials.newPass,\n              onChange: e => setUserCredentials({ ...userCredentials,\n                newPass: e.target.value,\n                isChangePassword: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this), !userCredentials.isChangePassword ? null : /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.formButton,\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: onPasswordConfirm,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formConteiner,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        boxshadow: 2,\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        className: classes.formGrid,\n        children: user.employeeDTO === undefined ? null : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.infoText,\n            children: ['Seniority: ', \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.employeeDTO.seniority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 77\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"+G7S/eFbmADR2QzDS/RgigooDiU=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Profile;\nexport default Profile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/Users/Profile.js"],"names":["React","useEffect","useState","makeStyles","DarkTextField","DarkSelect","APIURL","AuthService","getCurrentUser","Button","Snackbar","MuiAlert","Alert","props","useStyles","theme","formConteiner","marginTop","background","palette","grey","paddingBottom","title","color","text","primary","textAlign","padding","backgroundColor","main","boxShadow","shadows","profileForm","display","flexDirection","usernameBox","width","formText","margin","formButton","alignSelf","marginLeft","marginRight","formGrid","gridTemplateColumns","justifyContent","alignContent","gridGap","infoText","fontSize","fontWeight","Profile","classes","user","setUser","userDetails","userCredentials","setUserCredentials","isChangePassword","isUsernameChanged","username","oldPass","newPass","allertProps","setAllertProps","open","type","onUsernameConfirm","putUser","onPasswordConfirm","changePassword","newUsername","requestOptions","method","headers","body","JSON","stringify","id","undefined","password","employeeDTO","fetch","then","res","status","console","log","login","data","e","userId","oldPassword","newPassword","onUsernameChange","usernameVal","target","value","handleAllertClose","event","reason","seniority"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DarkTextField, DarkSelect } from '../GlobalComponents';\r\nimport APIURL from '../../Services/Globals'\r\nimport AuthService, { getCurrentUser } from '../../Services/AuthService';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formConteiner: {\r\n        marginTop: \"1.8rem\",\r\n        background: theme.palette.grey[800],\r\n        paddingBottom: '20px'\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '1px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n    },\r\n    profileForm: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: '8px'\r\n    },\r\n    usernameBox: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        '& .MuiFormControl-root': {\r\n            width: '100%',\r\n        }\r\n    },\r\n    formText: {\r\n        color: 'white',\r\n        margin: '20px 18px 6px'\r\n    },\r\n    formButton: {\r\n        alignSelf: \"flex-start\",\r\n        padding: '8px 25px',\r\n        marginTop: '12px',\r\n        marginLeft: '18px',\r\n        marginRight: '10px'\r\n    },\r\n    formGrid: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr 1fr\",\r\n        justifyContent: \"space-between\",\r\n        alignContent: \"space-between\",\r\n        gridGap: \"1.2rem 1.2rem\",\r\n    },\r\n    infoText: {\r\n        color: \"white\",\r\n        marginLeft: '18px',\r\n        fontSize: '18px',\r\n        fontWeight: 500,\r\n\r\n        '& span': {\r\n            color: \"rgba(255, 255, 255, 0.7)\",\r\n            fontWeight: 400,\r\n        }\r\n    }\r\n}));\r\n\r\nconst Profile = () => {\r\n    const classes = useStyles();\r\n    const [user, setUser] = useState(getCurrentUser().userDetails);\r\n    const [userCredentials, setUserCredentials] = useState({\r\n        isChangePassword: false,\r\n        isUsernameChanged: false,\r\n        username: '',\r\n        oldPass: '',\r\n        newPass: ''\r\n    });\r\n\r\n    const [allertProps, setAllertProps] = useState({\r\n        text: '',\r\n        open: false,\r\n        type: 'success'\r\n    });\r\n\r\n    const onUsernameConfirm = () => {\r\n        if (userCredentials.isUsernameChanged) {\r\n            putUser(userCredentials.username);\r\n        }\r\n    }\r\n\r\n    const onPasswordConfirm = () => {\r\n        if (userCredentials.isChangePassword) {\r\n            changePassword();\r\n        }\r\n    }\r\n\r\n    const putUser = (newUsername) => {\r\n        const requestOptions = {\r\n            method: 'Put',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                id: user.id,\r\n                username: newUsername === undefined ?\r\n                    user.username : newUsername,\r\n                password: user.password,\r\n                employeeDTO: user.employeeDTO\r\n            }),\r\n        };\r\n        fetch(APIURL + 'users/' + user.id, requestOptions)\r\n            .then((res) => {\r\n                if (res.status >= 400) {\r\n                    console.log(res)\r\n                    setAllertProps({\r\n                        text: \"Error\",\r\n                        open: true,\r\n                        type: \"error\"\r\n                    })\r\n                    return;\r\n                }\r\n                setAllertProps({\r\n                    text: newUsername === undefined ?\r\n                        \"User Data Changed\" : \"Username Changed\",\r\n                    open: true,\r\n                    type: \"success\"\r\n                });\r\n                AuthService.login({\r\n                    username: newUsername,\r\n                    password: user.password\r\n                }).then((data) => {\r\n                    setUserCredentials({\r\n                        ...userCredentials,\r\n                        isUsernameChanged: false,\r\n                        username: '',\r\n                    });\r\n                    setUser(getCurrentUser().userDetails)\r\n                }, e => { console.log(\"login error\") });\r\n            });\r\n    }\r\n\r\n    const changePassword = () => {\r\n        if (userCredentials.oldPass === '' &&\r\n            userCredentials.newPass === '') {\r\n            setUserCredentials({\r\n                ...userCredentials,\r\n                isChangePassword: false,\r\n            })\r\n            return;\r\n        }\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                userId: user.id,\r\n                oldPassword: userCredentials.oldPass,\r\n                newPassword: userCredentials.newPass\r\n            }),\r\n        };\r\n        fetch(APIURL + 'users/change-pass', requestOptions)\r\n            .then((res) => {\r\n                if (res.status >= 400) {\r\n                    console.log(res)\r\n                    setAllertProps({\r\n                        text: \"Error\",\r\n                        open: true,\r\n                        type: \"error\"\r\n                    })\r\n                    return;\r\n                }\r\n                setAllertProps({\r\n                    text: \"Password Changed\",\r\n                    open: true,\r\n                    type: \"success\"\r\n                });\r\n            }).then(() => {\r\n                AuthService.login({\r\n                    username: user.username,\r\n                    password: userCredentials.newPass\r\n                }).then((data) => {\r\n                    setUserCredentials({\r\n                        ...userCredentials,\r\n                        isChangePassword: false,\r\n                        oldPass: '',\r\n                        newPass: ''\r\n                    });\r\n                    setUser(getCurrentUser().userDetails)\r\n                }, e => { console.log(\"login error\") });\r\n            });\r\n    }\r\n\r\n    const onUsernameChange = (e) => {\r\n        const usernameVal = e.target.value\r\n\r\n        if (usernameVal === user.username) {\r\n            setUserCredentials({\r\n                ...userCredentials,\r\n                isUsernameChanged: false,\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        setUserCredentials({\r\n            ...userCredentials,\r\n            username: usernameVal,\r\n            isUsernameChanged: true,\r\n        })\r\n    }\r\n\r\n    const handleAllertClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAllertProps({ ...allertProps, open: false });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.formConteiner}>\r\n                <Snackbar open={allertProps.open} autoHideDuration={4000} onClose={handleAllertClose}>\r\n                    <Alert onClose={handleAllertClose} severity={allertProps.type}>\r\n                        {allertProps.text}\r\n                    </Alert>\r\n                </Snackbar>\r\n                <div boxshadow={2} className={classes.title}>\r\n                    <h3 >User Credentials</h3>\r\n                </div>\r\n                <form noValidate autoComplete=\"off\">\r\n                    <div className={classes.profileForm}>\r\n                        <div className={classes.usernameBox}>\r\n                            <DarkTextField\r\n                                label=\"Username\"\r\n                                defaultValue={user.username}\r\n                                onChange={onUsernameChange}\r\n                            />\r\n                            {!userCredentials.isUsernameChanged ? null :\r\n                                <Button\r\n                                    className={classes.formButton}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={onUsernameConfirm}\r\n                                >Confirm</Button>\r\n                            }\r\n                        </div>\r\n                        <h3 className={classes.formText}>Password:</h3>\r\n                        {!userCredentials.isChangePassword ?\r\n                            <Button\r\n                                className={classes.formButton}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => setUserCredentials({ ...userCredentials, isChangePassword: true })}\r\n                            >Change Password</Button> :\r\n                            <React.Fragment>\r\n                                <DarkTextField\r\n                                    label=\"Old Password\"\r\n                                    type={'password'}\r\n                                    value={userCredentials.oldPass}\r\n                                    onChange={(e) =>\r\n                                        setUserCredentials({\r\n                                            ...userCredentials,\r\n                                            oldPass: e.target.value,\r\n                                            isChangePassword: true\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <DarkTextField\r\n                                    label=\"New Password\"\r\n                                    type={'password'}\r\n                                    value={userCredentials.newPass}\r\n                                    onChange={(e) =>\r\n                                        setUserCredentials({\r\n                                            ...userCredentials,\r\n                                            newPass: e.target.value,\r\n                                            isChangePassword: true\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </React.Fragment>\r\n                        }\r\n                        {!userCredentials.isChangePassword ? null :\r\n                            <Button\r\n                                className={classes.formButton}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={onPasswordConfirm}\r\n                            >Confirm</Button>\r\n                        }\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className={classes.formConteiner}>\r\n                <div boxshadow={2} className={classes.title}>\r\n                    <h3 >User Data</h3>\r\n                </div>\r\n                <form noValidate autoComplete=\"off\" className={classes.formGrid}>\r\n                    {user.employeeDTO === undefined ? null :\r\n                        <React.Fragment>\r\n                            <p className={classes.infoText}>{'Seniority: '} <span>{user.employeeDTO.seniority}</span></p>\r\n\r\n                        </React.Fragment>\r\n                    }\r\n                </form>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}