{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\Tasks\\\\CreateTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DarkTextField, DarkSelect, DarkChipList } from '../GlobalComponents';\nimport APIURL from '../../Services/Globals';\nimport { getCurrentUser } from '../../Services/AuthService';\nimport { Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from \"@date-io/moment\";\nimport moment from \"moment\";\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nconst useStyles = makeStyles(theme => ({\n  mainConteiner: {\n    marginTop: \"1.8rem\",\n    background: theme.palette.grey[800],\n    paddingBottom: '20px'\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '1px',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2]\n  },\n  formGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    justifyContent: \"space-between\",\n    alignContent: \"space-between\",\n    gridGap: \"1.2rem 1.2rem\"\n  },\n  nameInput: {\n    gridColumn: \"span 2 auto\"\n  },\n  descriptionInput: {\n    gridArea: \"1 / 1 / 2 / 3\"\n  },\n  subtasksContainer: {\n    color: \"red\",\n    gridArea: \"3 / 1 / 4 / 3\"\n  },\n  datePicker: {\n    marginTop: '0',\n    marginLeft: \"20px\"\n  },\n  createButton: {\n    margin: '0 auto',\n    display: 'block',\n    width: \"19rem\"\n  },\n  subtaskAccordion: {\n    backgroundColor: '#bdbdbd',\n    color: \"black\",\n    marginTop: \"8px\",\n    marginBottom: '4px',\n    borderRadius: '4px',\n    padding: '0px',\n    '&::before': {\n      height: 0\n    }\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalContent: {\n    color: \"white\",\n    backgroundColor: \"#424242\",\n    boxShadow: theme.shadows[2],\n    padding: theme.spacing(2, 4, 3),\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    minWidth: \"260px\",\n    minHeight: \"280px\"\n  }\n}));\nconst leaderID = getCurrentUser().userDetails.employeeDTO.id;\n\nconst CreateTask = () => {\n  _s();\n\n  const classes = useStyles();\n  const [task, setTask] = useState({});\n  const [subtasks, setSubtasks] = useState([{\n    name: \"yy\",\n    description: \"f\"\n  }]);\n  const [newSubtask, setNewSubtask] = useState({});\n  const [expandedSubTask, setExpandedSubTask] = useState('');\n  const [allEmployees, setAllEmployees] = useState([]);\n  const [employeesToAssign, setEmployeesToAssign] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {\n    getMembers();\n  }, []);\n  useEffect(() => {\n    if (employeesToAssign.length === 1) {\n      setTask({ ...task,\n        assignedEmployeeId: employeesToAssign[0].id\n      });\n    } else setTask({ ...task,\n      assignedEmployeeId: 0\n    });\n  }, [employeesToAssign]);\n\n  const getMembers = () => {\n    const requestOptions = {\n      method: 'Get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(APIURL + `teams/leader/${leaderID}`, requestOptions).then(response => response.json()).then(data => data.members.map(member => {\n      setAllEmployees(old => [...old, {\n        id: member.id,\n        name: member.person.name + \" \" + member.person.surname\n      }]);\n    }));\n  };\n\n  const PostTask = formData => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    };\n    fetch(APIURL + 'tasks', requestOptions).then(response => response.json()).then(data => console.log(data));\n  };\n\n  const PostTasks = formData => {\n    let employeesId = [];\n    employeesToAssign.map(employee => {\n      employeesId.push(employee.id);\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        employeeTaskDTO: formData,\n        employeesID: employeesId\n      })\n    };\n    fetch(APIURL + 'tasks/multi', requestOptions).then(response => response.json()).then(data => console.log(data));\n  };\n\n  const headleFormChange = e => {\n    if (e.target.name === \"employeeSelect\") {\n      if (employeesToAssign.length === 0) {\n        setEmployeesToAssign([e.target.value]);\n      } else {\n        let isPicked = false;\n        employeesToAssign.forEach(element => {\n          if (element.id === e.target.value.id) {\n            isPicked = true;\n          }\n        });\n\n        if (!isPicked) {\n          setEmployeesToAssign([...employeesToAssign, e.target.value]);\n        }\n      }\n    }\n\n    setTask({ ...task,\n      name: e.target.name === \"taskName\" ? e.target.value : task.name,\n      description: e.target.name === \"taskDescription\" ? e.target.value : task.description,\n      status: \"Requested\",\n      startTime: task.startTime === undefined ? moment().format('yyy-MM-DD') : task.startTime,\n      deadline: task.deadline === undefined ? moment().format('yyyy-MM-DD') : task.deadline\n    });\n  };\n\n  const headleModalFormChange = e => {\n    setNewSubtask({ ...newSubtask,\n      ...task,\n      name: e.target.name === \"subtaskName\" ? e.target.value : newSubtask.name,\n      description: e.target.name === \"subtaskDescription\" ? e.target.value : newSubtask.description,\n      status: \"Requested\",\n      startTime: task.startTime === undefined ? moment().format('yyy-MM-DD') : task.startTime,\n      deadline: task.deadline === undefined ? moment().format('yyyy-MM-DD') : task.deadline\n    });\n  };\n\n  const hendlePermissionDelete = chipToDelete => {\n    setEmployeesToAssign(chips => chips.filter(chip => chip.name !== chipToDelete.name));\n  };\n\n  const hendlePostTask = () => {\n    if (employeesToAssign.length === 0) {\n      PostTask(task);\n      return;\n    }\n\n    PostTasks(task);\n  };\n\n  const handleSubTaskExpand = index => (event, newExpanded) => {\n    setExpandedSubTask(newExpanded ? index : false);\n  };\n\n  const handleModalOpen = () => {\n    setModalIsOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalIsOpen(false);\n  };\n\n  const handleModalConfirm = () => {\n    setSubtasks(old => [...old, newSubtask]);\n    setModalIsOpen(false);\n  };\n\n  const subtaskModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      \"aria-labelledby\": \"modal-title\",\n      className: classes.modal,\n      open: modalIsOpen,\n      onClose: handleModalClose,\n      closeAfterTransition: true,\n      BackdropComponent: Backdrop,\n      BackdropProps: {\n        timeout: 500\n      },\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        in: modalIsOpen,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.modalContent,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"modal-title\",\n            children: \"Create New Subtask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n            label: \"Subtask Name\",\n            name: \"subtaskName\",\n            onChange: headleModalFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n            label: \"Description\",\n            maxRows: 5,\n            name: \"subtaskDescription\",\n            onChange: headleModalFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              margin: \"10px\",\n              marginBottom: \"0\"\n            },\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleModalConfirm,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainConteiner,\n    children: [subtaskModal(), /*#__PURE__*/_jsxDEV(\"div\", {\n      boxshadow: 2,\n      className: classes.title,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGrid,\n        children: [/*#__PURE__*/_jsxDEV(DarkTextField, {\n          className: classes.nameInput,\n          label: \" Task Name\",\n          name: \"taskName\",\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n          className: classes.descriptionInput,\n          label: \"Description\",\n          maxRows: 5,\n          name: \"taskDescription\",\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: MomentUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            className: classes.datePicker,\n            disableToolbar: true,\n            name: \"dateStart\",\n            variant: \"inline\",\n            format: \"yyyy-MM-DD\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Start Time\",\n            value: task.startTime,\n            onChange: date => {\n              setTask({ ...task,\n                startTime: date.format('yyyy-MM-DD')\n              });\n            },\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: MomentUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            className: classes.datePicker,\n            disableToolbar: true,\n            name: \"dateDeadline\",\n            variant: \"inline\",\n            format: \"yyyy-MM-DD\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Deadline\",\n            value: task.Deadline,\n            onChange: date => {\n              setTask({ ...task,\n                deadline: date.format('yyyy-MM-DD')\n              });\n            },\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.createButton,\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleModalOpen,\n            children: \"Add Subtask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this), subtasks.length < 1 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.subtasksContainer,\n            children: [/*#__PURE__*/_jsxDEV(Divider, {\n              variant: \"inset\",\n              style: {\n                width: \"100%\",\n                margin: \"12px\",\n                marginLeft: \"0\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              noWrap: true,\n              variant: \"subtitle1\",\n              children: \"Subtasks:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 33\n            }, this), subtasks.map((subtask, index) => /*#__PURE__*/_jsxDEV(Accordion, {\n              expanded: expandedSubTask === index,\n              onChange: handleSubTaskExpand(index),\n              className: classes.subtaskAccordion,\n              children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n                  style: {\n                    color: \"black\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 57\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: subtask.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                children: subtask.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 41\n              }, this)]\n            }, \"subt\" + index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkChipList, {\n        label: \"Employees\",\n        name: \"employeeSelect\",\n        collection: allEmployees,\n        clipListCollection: employeesToAssign,\n        onChange: headleFormChange,\n        onDelete: hendlePermissionDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.createButton,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: hendlePostTask,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateTask, \"A/aAfvrP9gDqLEq3eEb17AM1mCs=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/Tasks/CreateTask.js"],"names":["React","useEffect","useState","makeStyles","DarkTextField","DarkSelect","DarkChipList","APIURL","getCurrentUser","Accordion","AccordionSummary","AccordionDetails","Divider","ExpandMoreIcon","Button","Typography","AddCircleIcon","KeyboardDatePicker","MuiPickersUtilsProvider","MomentUtils","moment","Modal","Backdrop","Fade","useStyles","theme","mainConteiner","marginTop","background","palette","grey","paddingBottom","title","color","text","primary","textAlign","padding","backgroundColor","main","boxShadow","shadows","formGrid","display","gridTemplateColumns","justifyContent","alignContent","gridGap","nameInput","gridColumn","descriptionInput","gridArea","subtasksContainer","datePicker","marginLeft","createButton","margin","width","subtaskAccordion","marginBottom","borderRadius","height","modal","alignItems","modalContent","spacing","flexDirection","minWidth","minHeight","leaderID","userDetails","employeeDTO","id","CreateTask","classes","task","setTask","subtasks","setSubtasks","name","description","newSubtask","setNewSubtask","expandedSubTask","setExpandedSubTask","allEmployees","setAllEmployees","employeesToAssign","setEmployeesToAssign","modalIsOpen","setModalIsOpen","getMembers","length","assignedEmployeeId","requestOptions","method","headers","fetch","then","response","json","data","members","map","member","old","person","surname","PostTask","formData","body","JSON","stringify","console","log","PostTasks","employeesId","employee","push","employeeTaskDTO","employeesID","headleFormChange","e","target","value","isPicked","forEach","element","status","startTime","undefined","format","deadline","headleModalFormChange","hendlePermissionDelete","chipToDelete","chips","filter","chip","hendlePostTask","handleSubTaskExpand","index","event","newExpanded","handleModalOpen","handleModalClose","handleModalConfirm","subtaskModal","timeout","root","date","Deadline","subtask"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DarkTextField, DarkSelect, DarkChipList } from '../GlobalComponents';\r\nimport APIURL from '../../Services/Globals'\r\nimport { getCurrentUser } from '../../Services/AuthService';\r\n\r\nimport { Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport moment from \"moment\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainConteiner: {\r\n        marginTop: \"1.8rem\",\r\n        background: theme.palette.grey[800],\r\n        paddingBottom: '20px'\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '1px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n    },\r\n    formGrid: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr\",\r\n        justifyContent: \"space-between\",\r\n        alignContent: \"space-between\",\r\n        gridGap: \"1.2rem 1.2rem\",\r\n    },\r\n    nameInput: { gridColumn: \"span 2 auto\" },\r\n    descriptionInput: { gridArea: \"1 / 1 / 2 / 3\" },\r\n    subtasksContainer: {\r\n        color: \"red\",\r\n        gridArea: \"3 / 1 / 4 / 3\"\r\n    },\r\n    datePicker: {\r\n        marginTop: '0',\r\n        marginLeft: \"20px\"\r\n    },\r\n    createButton: {\r\n        margin: '0 auto',\r\n        display: 'block',\r\n        width: \"19rem\",\r\n    },\r\n    subtaskAccordion: {\r\n        backgroundColor: '#bdbdbd',\r\n        color: \"black\",\r\n        marginTop: \"8px\",\r\n        marginBottom: '4px',\r\n        borderRadius: '4px',\r\n        padding: '0px',\r\n        '&::before': {\r\n            height: 0\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    modalContent: {\r\n        color: \"white\",\r\n        backgroundColor: \"#424242\",\r\n        boxShadow: theme.shadows[2],\r\n        padding: theme.spacing(2, 4, 3),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        minWidth: \"260px\",\r\n        minHeight: \"280px\",\r\n    },\r\n}));\r\n\r\nconst leaderID = getCurrentUser().userDetails.employeeDTO.id;\r\nconst CreateTask = () => {\r\n    const classes = useStyles();\r\n    const [task, setTask] = useState({})\r\n    const [subtasks, setSubtasks] = useState([{ name: \"yy\", description: \"f\" }])\r\n    const [newSubtask, setNewSubtask] = useState({})\r\n    const [expandedSubTask, setExpandedSubTask] = useState('');\r\n    const [allEmployees, setAllEmployees] = useState([])\r\n    const [employeesToAssign, setEmployeesToAssign] = useState([])\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getMembers();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (employeesToAssign.length === 1) {\r\n            setTask({\r\n                ...task,\r\n                assignedEmployeeId: employeesToAssign[0].id,\r\n            })\r\n        } else\r\n            setTask({\r\n                ...task,\r\n                assignedEmployeeId: 0,\r\n            })\r\n    }, [employeesToAssign]);\r\n\r\n    const getMembers = () => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        fetch(APIURL + `teams/leader/${leaderID}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => (\r\n                data.members.map(member => {\r\n                    setAllEmployees(old => [...old, {\r\n                        id: member.id,\r\n                        name: member.person.name + \" \" + member.person.surname\r\n                    }])\r\n                })\r\n            ));\r\n    }\r\n\r\n    const PostTask = (formData) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(formData),\r\n        };\r\n        fetch(APIURL + 'tasks', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => console.log(data));\r\n    }\r\n\r\n    const PostTasks = (formData) => {\r\n        let employeesId = [];\r\n        employeesToAssign.map(employee => {\r\n            employeesId.push(employee.id);\r\n        })\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                employeeTaskDTO: formData,\r\n                employeesID: employeesId\r\n            }),\r\n        };\r\n        fetch(APIURL + 'tasks/multi', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => console.log(data));\r\n    }\r\n\r\n    const headleFormChange = e => {\r\n        if (e.target.name === \"employeeSelect\") {\r\n            if (employeesToAssign.length === 0) {\r\n                setEmployeesToAssign([e.target.value]);\r\n            } else {\r\n                let isPicked = false;\r\n                employeesToAssign.forEach(element => {\r\n                    if (element.id === e.target.value.id) {\r\n                        isPicked = true;\r\n                    }\r\n                });\r\n                if (!isPicked) {\r\n                    setEmployeesToAssign([...employeesToAssign, e.target.value]);\r\n                }\r\n            }\r\n        }\r\n\r\n        setTask({\r\n            ...task,\r\n            name: e.target.name === \"taskName\" ? e.target.value : task.name,\r\n            description: e.target.name === \"taskDescription\" ? e.target.value : task.description,\r\n            status: \"Requested\",\r\n            startTime: task.startTime === undefined ? moment().format('yyy-MM-DD') : task.startTime,\r\n            deadline: task.deadline === undefined ? moment().format('yyyy-MM-DD') : task.deadline,\r\n        })\r\n    }\r\n    const headleModalFormChange = e => {\r\n        setNewSubtask({\r\n            ...newSubtask,\r\n            ...task,\r\n            name: e.target.name === \"subtaskName\" ? e.target.value : newSubtask.name,\r\n            description: e.target.name === \"subtaskDescription\" ? e.target.value : newSubtask.description,\r\n            status: \"Requested\",\r\n            startTime: task.startTime === undefined ? moment().format('yyy-MM-DD') : task.startTime,\r\n            deadline: task.deadline === undefined ? moment().format('yyyy-MM-DD') : task.deadline,\r\n        });\r\n    }\r\n\r\n    const hendlePermissionDelete = chipToDelete => {\r\n        setEmployeesToAssign(chips => chips.filter(chip => chip.name !== chipToDelete.name));\r\n    }\r\n\r\n    const hendlePostTask = () => {\r\n        if (employeesToAssign.length === 0) {\r\n            PostTask(task);\r\n            return;\r\n        }\r\n        PostTasks(task);\r\n    }\r\n\r\n    const handleSubTaskExpand = (index) => (event, newExpanded) => {\r\n        setExpandedSubTask(newExpanded ? index : false);\r\n    }\r\n\r\n    const handleModalOpen = () => {\r\n        setModalIsOpen(true);\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setModalIsOpen(false);\r\n    };\r\n\r\n    const handleModalConfirm = () => {\r\n        setSubtasks(old => [\r\n            ...old, newSubtask\r\n        ])\r\n        setModalIsOpen(false);\r\n    };\r\n    const subtaskModal = () => {\r\n        return (\r\n            <Modal\r\n                aria-labelledby=\"modal-title\"\r\n                className={classes.modal}\r\n                open={modalIsOpen}\r\n                onClose={handleModalClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={modalIsOpen}>\r\n                    <div className={classes.modalContent}>\r\n                        <h2 id=\"modal-title\">Create New Subtask</h2>\r\n                        <DarkTextField\r\n                            label=\"Subtask Name\"\r\n                            name=\"subtaskName\"\r\n                            onChange={headleModalFormChange}\r\n                        />\r\n                        <DarkTextField\r\n                            label=\"Description\"\r\n                            maxRows={5}\r\n                            name=\"subtaskDescription\"\r\n                            onChange={headleModalFormChange}\r\n                        />\r\n                        <Button\r\n                            style={{ margin: \"10px\", marginBottom: \"0\" }}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleModalConfirm}\r\n                        >Create</Button>\r\n                    </div>\r\n\r\n                </Fade>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.mainConteiner}>\r\n            {subtaskModal()}\r\n            <div boxshadow={2} className={classes.title}>\r\n                <h3 >Create New Task</h3>\r\n            </div>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <div className={classes.formGrid}>\r\n                    <DarkTextField\r\n                        className={classes.nameInput}\r\n                        label=\" Task Name\"\r\n                        name=\"taskName\"\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkTextField\r\n                        className={classes.descriptionInput}\r\n                        label=\"Description\"\r\n                        maxRows={5}\r\n                        name=\"taskDescription\"\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardDatePicker\r\n                            className={classes.datePicker}\r\n                            disableToolbar\r\n                            name=\"dateStart\"\r\n                            variant=\"inline\"\r\n                            format=\"yyyy-MM-DD\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Start Time\"\r\n                            value={task.startTime}\r\n                            onChange={(date) => {\r\n                                setTask({ ...task, startTime: date.format('yyyy-MM-DD') })\r\n                            }}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardDatePicker\r\n                            className={classes.datePicker}\r\n                            disableToolbar\r\n                            name=\"dateDeadline\"\r\n                            variant=\"inline\"\r\n                            format=\"yyyy-MM-DD\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Deadline\"\r\n                            value={task.Deadline}\r\n                            onChange={(date) => {\r\n                                setTask({ ...task, deadline: date.format('yyyy-MM-DD') })\r\n                            }}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    <div>\r\n                        <Button\r\n                            className={classes.createButton}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleModalOpen}\r\n                        >Add Subtask</Button>\r\n                        {subtasks.length < 1 ? null :\r\n                            <div className={classes.subtasksContainer}>\r\n                                <Divider variant=\"inset\" style={{ width: \"100%\", margin: \"12px\", marginLeft: \"0\" }} />\r\n                                <Typography noWrap variant=\"subtitle1\">\r\n                                    Subtasks:\r\n                                </Typography>\r\n                                {subtasks.map((subtask, index) => (\r\n                                    <Accordion\r\n                                        expanded={expandedSubTask === index}\r\n                                        onChange={handleSubTaskExpand(index)}\r\n                                        key={\"subt\" + index}\r\n                                        className={classes.subtaskAccordion}\r\n                                    >\r\n                                        <AccordionSummary\r\n                                            expandIcon={<ExpandMoreIcon style={{ color: \"black\" }} />}\r\n                                        >\r\n                                            <Typography>\r\n                                                {subtask.name}\r\n                                            </Typography>\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails>\r\n                                            {subtask.description}\r\n                                        </AccordionDetails>\r\n                                    </Accordion>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <DarkChipList\r\n                    label=\"Employees\"\r\n                    name=\"employeeSelect\"\r\n                    collection={allEmployees}\r\n                    clipListCollection={employeesToAssign}\r\n                    onChange={headleFormChange}\r\n                    onDelete={hendlePermissionDelete}\r\n                />\r\n                <Button\r\n                    className={classes.createButton}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={hendlePostTask}\r\n                >Create</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default CreateTask;"]},"metadata":{},"sourceType":"module"}