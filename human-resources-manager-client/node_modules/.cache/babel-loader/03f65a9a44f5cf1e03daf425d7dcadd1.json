{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\Employees\\\\HR_Dashboard.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport APIURL from '../../Services/Globals';\nimport { Link } from \"react-router-dom\";\nimport { StatBar } from \"../GlobalComponents\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nfunction CircularProgressWithLabel(props) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.progressBox,\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      className: classes.progressBox,\n      variant: \"determinate\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        children: \"\".concat(Math.round(props.value), \"%\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CircularProgressWithLabel, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CircularProgressWithLabel;\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white\n  },\n  body: {\n    backgroundColor: theme.palette.grey[400],\n    color: \"black\"\n  }\n}))(TableCell);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '1.5rem',\n    width: '100%',\n    background: theme.palette.grey[800],\n    color: \"white\"\n  },\n  remoteWorkBox: {\n    marginTop: '1.2rem 0',\n    width: \"calc(366px - 1.2rem)\",\n    padding: \"10px\",\n    background: theme.palette.grey[800],\n    color: \"white\"\n  },\n  statsBox: {\n    margin: '0 0 1.2rem 1.2rem',\n    width: \"120px\",\n    height: \"60px\",\n    padding: \"12px\",\n    position: \"relative\",\n    background: theme.palette.grey[800],\n    color: \"white\"\n  },\n  progressBox: {\n    width: \"100% !important\",\n    height: \"100% !important\"\n  },\n  container: {\n    maxHeight: 540\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '2px 6px 2px',\n    marginBottom: '5px',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2],\n    width: '100%'\n  },\n  barBox: {\n    width: 'max-content',\n    marginRight: '1rem',\n    marginBottom: '1rem',\n    minWidth: '366px'\n  },\n  statsMain: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  statsContainer: {\n    display: 'flex',\n    padding: '0 4px 4px',\n    justifyContent: 'space-around'\n  },\n  button: {\n    background: theme.palette.grey[300],\n    padding: \".4rem\",\n    \"margin-left\": \".2rem\",\n    \"margin-right\": \".2rem\",\n    color: theme.palette.grey[800]\n  },\n  skeleton: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: 'space-between',\n    margin: '4px',\n    '& .MuiSkeleton-root': {\n      transform: 'none',\n      visibility: 'visible !important'\n    }\n  }\n}));\n\nconst HR_Dashboard = () => {\n  _s2();\n\n  const classes = useStyles();\n  const [employees, setEmployees] = useState([]);\n  const [tasksStats, setTasksStats] = useState({});\n  const [stats, setStats] = useState();\n  const [progress, setProgress] = React.useState(0);\n  React.useEffect(() => {\n    if (stats !== undefined) {\n      const timer = setInterval(() => {\n        setProgress(prevProgress => prevProgress === stats.remoteEmploeesPercentage ? stats.remoteEmploeesPercentage : prevProgress + 1);\n      }, 45);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [stats]);\n  useEffect(() => {\n    getEmploees(1, 5);\n    getStats();\n    getTasksStats();\n  }, []);\n\n  const getTasksStats = () => {\n    const requestOptions = {\n      method: 'Get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(APIURL + \"tasks/stats\", requestOptions).then(response => response.json()).then(data => setTasksStats(data));\n  };\n\n  const getEmploees = async (page, size) => {\n    const requestOptions = {\n      method: 'Get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    await fetch(APIURL + \"employee/all?page=\".concat(page, \"&size=\").concat(size, \"&order=date-desc\"), requestOptions).then(response => response.json()).then(data => setEmployees(data.items));\n  };\n\n  const getStats = async () => {\n    const requestOptions = {\n      method: 'Get'\n    };\n    await fetch(APIURL + \"home/stats\", requestOptions).then(response => response.json()).then(data => setStats(data));\n  };\n\n  const generalStatsSkeleton = () => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        marginBottom: '1.2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: classes.remoteWorkBox,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 7,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Skeleton, {\n                animation: \"wave\",\n                width: \"95%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                animation: \"wave\",\n                width: \"90%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(Skeleton, {\n              variant: \"circle\",\n              animation: \"wave\",\n              width: 125,\n              height: 125\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), [1, 2, 3].map((n, index) => /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.statsBox,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: /*#__PURE__*/_jsxDEV(Skeleton, {\n            animation: \"wave\",\n            width: \"42px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: /*#__PURE__*/_jsxDEV(Skeleton, {\n            animation: \"wave\",\n            width: \"95%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this)]\n      }, index + 'ss', true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this);\n  };\n\n  const tasksStatSkeleton = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.statsMain,\n      children: [1, 2, 3].map((n, index) => /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.barBox,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: /*#__PURE__*/_jsxDEV(Skeleton, {\n              animation: \"wave\",\n              width: \"95%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.statsContainer,\n          children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n            className: classes.skeleton,\n            animation: \"wave\",\n            variant: \"rect\",\n            width: \"102px\",\n            height: \"160px\",\n            children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n              animation: \"wave\",\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"32px\",\n              height: \"102px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n              animation: \"wave\",\n              width: \"17px\",\n              height: \"15px\",\n              style: {\n                marginBottom: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            className: classes.skeleton,\n            animation: \"wave\",\n            variant: \"rect\",\n            width: \"102px\",\n            height: \"160px\",\n            children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n              animation: \"wave\",\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"32px\",\n              height: \"102px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n              animation: \"wave\",\n              width: \"17px\",\n              height: \"15px\",\n              style: {\n                marginBottom: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            className: classes.skeleton,\n            animation: \"wave\",\n            variant: \"rect\",\n            width: \"102px\",\n            height: \"160px\",\n            children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n              animation: \"wave\",\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"32px\",\n              height: \"102px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n              animation: \"wave\",\n              width: \"17px\",\n              height: \"15px\",\n              style: {\n                marginBottom: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this)]\n      }, index + \"skiel\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this);\n  };\n\n  const tabSkeleton = () => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          marginLeft: '18px'\n        },\n        variant: \"h3\",\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          animation: \"wave\",\n          width: \"21%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          marginLeft: '18px'\n        },\n        variant: \"h6\",\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          animation: \"wave\",\n          width: \"90%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tabSkeleton(), stats === undefined ? generalStatsSkeleton() : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        marginBottom: '1.2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: classes.remoteWorkBox,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 7,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              noWrap: true,\n              variant: \"h5\",\n              children: [stats.totalRemoteEmployees, \" Employees\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              noWrap: true,\n              variant: \"subtitle1\",\n              children: \"Work Remotely\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n              value: progress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.statsBox,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          noWrap: true,\n          variant: \"h5\",\n          children: stats.totalEmployees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          noWrap: true,\n          variant: \"subtitle1\",\n          children: \"Total Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.statsBox,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          noWrap: true,\n          variant: \"h5\",\n          children: stats.totalJobApplications\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          noWrap: true,\n          variant: \"subtitle1\",\n          children: \"Job Applicatios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }, this), tasksStats.totalDelayedTasks === undefined || 0 ? null : /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.statsBox,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          noWrap: true,\n          variant: \"h5\",\n          children: tasksStats.totalDelayedTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          noWrap: true,\n          variant: \"subtitle1\",\n          children: \"Delayed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }, this), tasksStats.monthTotal === undefined ? tasksStatSkeleton() : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.statsMain,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: classes.barBox,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Today Tasks: \", tasksStats.todayTotal]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.statsContainer,\n          children: [/*#__PURE__*/_jsxDEV(StatBar, {\n            valueMax: tasksStats.todayTotal,\n            valueCurrent: tasksStats.todayRequested,\n            text: \"Requested: \" + tasksStats.todayRequested,\n            bcolor: \"rgb(231, 170, 35)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StatBar, {\n            valueMax: tasksStats.todayTotal,\n            valueCurrent: tasksStats.todayProgress,\n            text: \"In-Progress: \" + tasksStats.todayProgress,\n            bcolor: \"rgb(56, 81, 216)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StatBar, {\n            valueMax: tasksStats.todayTotal,\n            valueCurrent: tasksStats.todayCompleted,\n            text: \"Completed: \" + tasksStats.todayCompleted,\n            bcolor: \"rgb(0, 158, 7)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.barBox,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"This Week Tasks: \", tasksStats.weekTotal]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.statsContainer,\n          children: [/*#__PURE__*/_jsxDEV(StatBar, {\n            valueMax: tasksStats.weekTotal,\n            valueCurrent: tasksStats.weekRequested,\n            text: \"Requested: \" + tasksStats.weekRequested,\n            bcolor: \"rgb(231, 170, 35)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StatBar, {\n            valueMax: tasksStats.weekTotal,\n            valueCurrent: tasksStats.weekProgress,\n            text: \"In-Progress: \" + tasksStats.weekProgress,\n            bcolor: \"rgb(56, 81, 216)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StatBar, {\n            valueMax: tasksStats.weekTotal,\n            valueCurrent: tasksStats.weekCompleted,\n            text: \"Completed: \" + tasksStats.weekCompleted,\n            bcolor: \"rgb(0, 158, 7)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.barBox,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"This Month Tasks: \", tasksStats.monthTotal]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.statsContainer,\n          children: [/*#__PURE__*/_jsxDEV(StatBar, {\n            valueMax: tasksStats.monthTotal,\n            valueCurrent: tasksStats.monthRequested,\n            text: \"Requested: \" + tasksStats.monthRequested,\n            bcolor: \"rgb(231, 170, 35)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StatBar, {\n            valueMax: tasksStats.monthTotal,\n            valueCurrent: tasksStats.monthProgress,\n            text: \"In-Progress: \" + tasksStats.monthProgress,\n            bcolor: \"rgb(56, 81, 216)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StatBar, {\n            valueMax: tasksStats.monthTotal,\n            valueCurrent: tasksStats.monthCompleted,\n            text: \"Completed: \" + tasksStats.monthCompleted,\n            bcolor: \"rgb(0, 158, 7)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }, this), employees === undefined ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: \"Newly Hired Employees:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Surname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Remote Work\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Employment Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: employees.map((employee, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: employee.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: employee.person.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: employee.person.surname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: employee.person.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: employee.position.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: employee.department.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: employee.remoteWork === true ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 71\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: employee.employmentDate.toString().split('T')[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: {\n                    pathname: \"/main/employee-details/\".concat(employee.id)\n                  },\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    className: classes.button,\n                    size: \"small\",\n                    \"aria-label\": \"view\",\n                    children: /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 446,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 41\n              }, this)]\n            }, employee.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(HR_Dashboard, \"hQffJSVcVGGyfBuOAbkm7sL6Fbo=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = HR_Dashboard;\nexport default HR_Dashboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"HR_Dashboard\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/Employees/HR_Dashboard.js"],"names":["React","useEffect","useState","makeStyles","withStyles","APIURL","Link","StatBar","Skeleton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Grid","CircularProgress","Typography","Box","Button","IconButton","Card","CardHeader","CloseIcon","CheckCircleIcon","VisibilityIcon","CircularProgressWithLabel","props","classes","useStyles","progressBox","Math","round","value","StyledTableCell","theme","head","backgroundColor","palette","grey","color","common","white","body","root","marginTop","width","background","remoteWorkBox","padding","statsBox","margin","height","position","container","maxHeight","title","text","primary","textAlign","marginBottom","main","boxShadow","shadows","barBox","marginRight","minWidth","statsMain","display","flexWrap","statsContainer","justifyContent","button","skeleton","flexDirection","alignItems","transform","visibility","HR_Dashboard","employees","setEmployees","tasksStats","setTasksStats","stats","setStats","progress","setProgress","undefined","timer","setInterval","prevProgress","remoteEmploeesPercentage","clearInterval","getEmploees","getStats","getTasksStats","requestOptions","method","headers","fetch","then","response","json","data","page","size","items","generalStatsSkeleton","map","n","index","tasksStatSkeleton","tabSkeleton","marginLeft","totalRemoteEmployees","totalEmployees","totalJobApplications","totalDelayedTasks","monthTotal","todayTotal","todayRequested","todayProgress","todayCompleted","weekTotal","weekRequested","weekProgress","weekCompleted","monthRequested","monthProgress","monthCompleted","employee","id","person","name","surname","email","department","remoteWork","employmentDate","toString","split","pathname"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;AAGA,SAASC,yBAAT,CAAmCC,KAAnC,EAA0C;AAAA;;AACtC,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,sBACI,QAAC,GAAD;AAAK,IAAA,SAAS,EAAED,OAAO,CAACE,WAAxB;AAAqC,IAAA,QAAQ,EAAC,UAA9C;AAAyD,IAAA,OAAO,EAAC,aAAjE;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,SAAS,EAAEF,OAAO,CAACE,WAArC;AAAkD,MAAA,OAAO,EAAC,aAA1D;AAAA,SAA4EH;AAA5E;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,GAAD;AACI,MAAA,GAAG,EAAE,CADT;AAEI,MAAA,IAAI,EAAE,CAFV;AAGI,MAAA,MAAM,EAAE,CAHZ;AAII,MAAA,KAAK,EAAE,CAJX;AAKI,MAAA,QAAQ,EAAC,UALb;AAMI,MAAA,OAAO,EAAC,MANZ;AAOI,MAAA,UAAU,EAAC,QAPf;AAQI,MAAA,cAAc,EAAC,QARnB;AAAA,6BAUI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,KAAnC;AAAA,4BAA6CI,IAAI,CAACC,KAAL,CACzCL,KAAK,CAACM,KADmC,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GArBQP,yB;UACWG,S;;;KADXH,yB;AAuBT,MAAMQ,eAAe,GAAG9B,UAAU,CAAE+B,KAAD,KAAY;AAC3CC,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CADf;AAEFC,IAAAA,KAAK,EAAEL,KAAK,CAACG,OAAN,CAAcG,MAAd,CAAqBC;AAF1B,GADqC;AAK3CC,EAAAA,IAAI,EAAE;AACFN,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CADf;AAEFC,IAAAA,KAAK,EAAE;AAFL;AALqC,CAAZ,CAAD,CAAV,CASpB7B,SAToB,CAAxB;AAWA,MAAMkB,SAAS,GAAG1B,UAAU,CAAEgC,KAAD,KAAY;AACrCS,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE,QADT;AAEFC,IAAAA,KAAK,EAAE,MAFL;AAGFC,IAAAA,UAAU,EAAEZ,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAHV;AAIFC,IAAAA,KAAK,EAAE;AAJL,GAD+B;AAOrCQ,EAAAA,aAAa,EAAE;AACXH,IAAAA,SAAS,EAAE,UADA;AAEXC,IAAAA,KAAK,EAAE,sBAFI;AAGXG,IAAAA,OAAO,EAAE,MAHE;AAIXF,IAAAA,UAAU,EAAEZ,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAJD;AAKXC,IAAAA,KAAK,EAAE;AALI,GAPsB;AAcrCU,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE,mBADF;AAENL,IAAAA,KAAK,EAAE,OAFD;AAGNM,IAAAA,MAAM,EAAE,MAHF;AAINH,IAAAA,OAAO,EAAE,MAJH;AAKNI,IAAAA,QAAQ,EAAE,UALJ;AAMNN,IAAAA,UAAU,EAAEZ,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CANN;AAONC,IAAAA,KAAK,EAAE;AAPD,GAd2B;AAuBrCV,EAAAA,WAAW,EAAE;AACTgB,IAAAA,KAAK,EAAE,iBADE;AAETM,IAAAA,MAAM,EAAE;AAFC,GAvBwB;AA2BrCE,EAAAA,SAAS,EAAE;AACPC,IAAAA,SAAS,EAAE;AADJ,GA3B0B;AA8BrCC,EAAAA,KAAK,EAAE;AACHhB,IAAAA,KAAK,EAAEL,KAAK,CAACG,OAAN,CAAcmB,IAAd,CAAmBC,OADvB;AAEHC,IAAAA,SAAS,EAAE,QAFR;AAGHV,IAAAA,OAAO,EAAE,aAHN;AAIHW,IAAAA,YAAY,EAAE,KAJX;AAKHvB,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcoB,OAAd,CAAsBG,IALpC;AAMHC,IAAAA,SAAS,EAAE3B,KAAK,CAAC4B,OAAN,CAAc,CAAd,CANR;AAOHjB,IAAAA,KAAK,EAAE;AAPJ,GA9B8B;AAuCrCkB,EAAAA,MAAM,EAAE;AACJlB,IAAAA,KAAK,EAAE,aADH;AAEJmB,IAAAA,WAAW,EAAE,MAFT;AAGJL,IAAAA,YAAY,EAAE,MAHV;AAIJM,IAAAA,QAAQ,EAAE;AAJN,GAvC6B;AA6CrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GA7C0B;AAiDrCC,EAAAA,cAAc,EAAE;AACZF,IAAAA,OAAO,EAAE,MADG;AAEZnB,IAAAA,OAAO,EAAE,WAFG;AAGZsB,IAAAA,cAAc,EAAE;AAHJ,GAjDqB;AAsDrCC,EAAAA,MAAM,EAAE;AACJzB,IAAAA,UAAU,EAAEZ,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CADR;AAEJU,IAAAA,OAAO,EAAE,OAFL;AAGJ,mBAAe,OAHX;AAIJ,oBAAgB,OAJZ;AAKJT,IAAAA,KAAK,EAAEL,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AALH,GAtD6B;AA6DrCkC,EAAAA,QAAQ,EAAE;AACNL,IAAAA,OAAO,EAAE,MADH;AAENM,IAAAA,aAAa,EAAE,QAFT;AAGNC,IAAAA,UAAU,EAAE,QAHN;AAINJ,IAAAA,cAAc,EAAE,eAJV;AAKNpB,IAAAA,MAAM,EAAE,KALF;AAMN,2BAAuB;AACnByB,MAAAA,SAAS,EAAE,MADQ;AAEnBC,MAAAA,UAAU,EAAE;AAFO;AANjB;AA7D2B,CAAZ,CAAD,CAA5B;;AA0EA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMlD,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAM,CAACkD,SAAD,EAAYC,YAAZ,IAA4B9E,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC+E,UAAD,EAAaC,aAAb,IAA8BhF,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiF,KAAD,EAAQC,QAAR,IAAoBlF,QAAQ,EAAlC;AACA,QAAM,CAACmF,QAAD,EAAWC,WAAX,IAA0BtF,KAAK,CAACE,QAAN,CAAe,CAAf,CAAhC;AAEAF,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AAClB,QAAIkF,KAAK,KAAKI,SAAd,EAAyB;AACrB,YAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC5BH,QAAAA,WAAW,CAAEI,YAAD,IAAmBA,YAAY,KAAKP,KAAK,CAACQ,wBAAvB,GACzBR,KAAK,CAACQ,wBADmB,GAEzBD,YAAY,GAAG,CAFV,CAAX;AAGH,OAJwB,EAItB,EAJsB,CAAzB;AAKA,aAAO,MAAM;AACTE,QAAAA,aAAa,CAACJ,KAAD,CAAb;AACH,OAFD;AAGH;AACJ,GAXD,EAWG,CAACL,KAAD,CAXH;AAaAlF,EAAAA,SAAS,CAAC,MAAM;AACZ4F,IAAAA,WAAW,CAAC,CAAD,EAAI,CAAJ,CAAX;AACAC,IAAAA,QAAQ;AACRC,IAAAA,aAAa;AAChB,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMA,aAAa,GAAG,MAAM;AACxB,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAFU,KAAvB;AAIAC,IAAAA,KAAK,CAAC9F,MAAM,gBAAP,EAAyB2F,cAAzB,CAAL,CACKI,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAKrB,aAAa,CAACqB,IAAD,CAFhC;AAIH,GATD;;AAWA,QAAMV,WAAW,GAAG,OAAOW,IAAP,EAAaC,IAAb,KAAsB;AACtC,UAAMT,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAFU,KAAvB;AAIA,UAAMC,KAAK,CAAC9F,MAAM,+BACOmG,IADP,mBACoBC,IADpB,qBAAP,EACmDT,cADnD,CAAL,CAEDI,IAFC,CAEIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFhB,EAGDF,IAHC,CAGIG,IAAI,IAAKvB,YAAY,CAACuB,IAAI,CAACG,KAAN,CAHzB,CAAN;AAIH,GATD;;AAWA,QAAMZ,QAAQ,GAAG,YAAY;AACzB,UAAME,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE;AADW,KAAvB;AAGA,UAAME,KAAK,CAAC9F,MAAM,eAAP,EAAwB2F,cAAxB,CAAL,CACDI,IADC,CACIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADhB,EAEDF,IAFC,CAEIG,IAAI,IAAKnB,QAAQ,CAACmB,IAAD,CAFrB,CAAN;AAGH,GAPD;;AAQA,QAAMI,oBAAoB,GAAG,MAAM;AAC/B,wBACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,KAAK,EAAE;AAAE/C,QAAAA,YAAY,EAAE;AAAhB,OAAvB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEhC,OAAO,CAACoB,aAAzB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,OAAO,EAAE,CAA9B;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,oCACI,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA,2CAA0B,QAAC,QAAD;AAAU,gBAAA,SAAS,EAAC,MAApB;AAA2B,gBAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,WAApB;AAAA,qCAAgC,QAAC,QAAD;AAAU,gBAAA,SAAS,EAAC,MAApB;AAA2B,gBAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,mCACI,QAAC,QAAD;AAAU,cAAA,OAAO,EAAC,QAAlB;AAA2B,cAAA,SAAS,EAAC,MAArC;AAA4C,cAAA,KAAK,EAAE,GAAnD;AAAwD,cAAA,MAAM,EAAE;AAAhE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAYK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU4D,GAAV,CAAc,CAACC,CAAD,EAAIC,KAAJ,kBACX,QAAC,IAAD;AAAyB,QAAA,SAAS,EAAElF,OAAO,CAACsB,QAA5C;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA,iCAAyB,QAAC,QAAD;AAAU,YAAA,SAAS,EAAC,MAApB;AAA2B,YAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,WAApB;AAAA,iCAAgC,QAAC,QAAD;AAAU,YAAA,SAAS,EAAC,MAApB;AAA2B,YAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAW4D,KAAK,GAAG,IAAnB;AAAA;AAAA;AAAA;AAAA,cADH,CAZL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH,GArBD;;AAuBA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,wBACI;AAAK,MAAA,SAAS,EAAEnF,OAAO,CAACuC,SAAxB;AAAA,gBACK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUyC,GAAV,CAAc,CAACC,CAAD,EAAIC,KAAJ,kBACX,QAAC,IAAD;AAA4B,QAAA,SAAS,EAAElF,OAAO,CAACoC,MAA/C;AAAA,gCACI;AAAK,UAAA,SAAS,EAAEpC,OAAO,CAAC4B,KAAxB;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA,mCACI,QAAC,QAAD;AAAU,cAAA,SAAS,EAAC,MAApB;AAA2B,cAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAK,UAAA,SAAS,EAAE5B,OAAO,CAAC0C,cAAxB;AAAA,kCACI,QAAC,QAAD;AAAU,YAAA,SAAS,EAAE1C,OAAO,CAAC6C,QAA7B;AAAuC,YAAA,SAAS,EAAC,MAAjD;AAAwD,YAAA,OAAO,EAAC,MAAhE;AAAuE,YAAA,KAAK,EAAC,OAA7E;AAAqF,YAAA,MAAM,EAAC,OAA5F;AAAA,oCACI,QAAC,QAAD;AAAU,cAAA,SAAS,EAAC,MAApB;AAA2B,cAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,MAAhB;AAAuB,cAAA,MAAM,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,QAAD;AAAU,cAAA,SAAS,EAAC,MAApB;AAA2B,cAAA,KAAK,EAAC,MAAjC;AAAwC,cAAA,MAAM,EAAC,MAA/C;AAAsD,cAAA,KAAK,EAAE;AAAEb,gBAAAA,YAAY,EAAE;AAAhB;AAA7D;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,QAAD;AAAU,YAAA,SAAS,EAAEhC,OAAO,CAAC6C,QAA7B;AAAuC,YAAA,SAAS,EAAC,MAAjD;AAAwD,YAAA,OAAO,EAAC,MAAhE;AAAuE,YAAA,KAAK,EAAC,OAA7E;AAAqF,YAAA,MAAM,EAAC,OAA5F;AAAA,oCACI,QAAC,QAAD;AAAU,cAAA,SAAS,EAAC,MAApB;AAA2B,cAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,MAAhB;AAAuB,cAAA,MAAM,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,QAAD;AAAU,cAAA,SAAS,EAAC,MAApB;AAA2B,cAAA,KAAK,EAAC,MAAjC;AAAwC,cAAA,MAAM,EAAC,MAA/C;AAAsD,cAAA,KAAK,EAAE;AAAEb,gBAAAA,YAAY,EAAE;AAAhB;AAA7D;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAWI,QAAC,QAAD;AAAU,YAAA,SAAS,EAAEhC,OAAO,CAAC6C,QAA7B;AAAuC,YAAA,SAAS,EAAC,MAAjD;AAAwD,YAAA,OAAO,EAAC,MAAhE;AAAuE,YAAA,KAAK,EAAC,OAA7E;AAAqF,YAAA,MAAM,EAAC,OAA5F;AAAA,oCACI,QAAC,QAAD;AAAU,cAAA,SAAS,EAAC,MAApB;AAA2B,cAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,MAAhB;AAAuB,cAAA,MAAM,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,QAAD;AAAU,cAAA,SAAS,EAAC,MAApB;AAA2B,cAAA,KAAK,EAAC,MAAjC;AAAwC,cAAA,MAAM,EAAC,MAA/C;AAAsD,cAAA,KAAK,EAAE;AAAEb,gBAAAA,YAAY,EAAE;AAAhB;AAA7D;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA,SAAWkD,KAAK,GAAG,OAAnB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAgCH,GAjCD;;AAmCA,QAAME,WAAW,GAAG,MAAM;AACtB,wBACI,QAAC,IAAD;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAnB;AAA2C,QAAA,OAAO,EAAC,IAAnD;AAAA,+BAAwD,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,MAApB;AAA2B,UAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AAAxD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAEA,UAAAA,UAAU,EAAE;AAAd,SAAnB;AAA2C,QAAA,OAAO,EAAC,IAAnD;AAAA,+BAAwD,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,MAApB;AAA2B,UAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AAAxD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH,GATD;;AAWA,sBACI;AAAA,eACKD,WAAW,EADhB,EAEK7B,KAAK,KAAKI,SAAV,GAAsBoB,oBAAoB,EAA1C,gBACG,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,KAAK,EAAE;AAAE/C,QAAAA,YAAY,EAAE;AAAhB,OAAvB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEhC,OAAO,CAACoB,aAAzB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,OAAO,EAAE,CAA9B;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,oCACI,QAAC,UAAD;AAAY,cAAA,MAAM,MAAlB;AAAmB,cAAA,OAAO,EAAC,IAA3B;AAAA,yBAAiCmC,KAAK,CAAC+B,oBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,UAAD;AAAY,cAAA,MAAM,MAAlB;AAAmB,cAAA,OAAO,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,mCACI,QAAC,yBAAD;AAA2B,cAAA,KAAK,EAAE7B;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEzD,OAAO,CAACsB,QAAzB;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,MAAM,MAAlB;AAAmB,UAAA,OAAO,EAAC,IAA3B;AAAA,oBAAiCiC,KAAK,CAACgC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAY,UAAA,MAAM,MAAlB;AAAmB,UAAA,OAAO,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAgBI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEvF,OAAO,CAACsB,QAAzB;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,MAAM,MAAlB;AAAmB,UAAA,OAAO,EAAC,IAA3B;AAAA,oBAAiCiC,KAAK,CAACiC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAY,UAAA,MAAM,MAAlB;AAAmB,UAAA,OAAO,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ,EAoBKnC,UAAU,CAACoC,iBAAX,KAAiC9B,SAAjC,IAA8C,CAA9C,GAAkD,IAAlD,gBACG,QAAC,IAAD;AAAM,QAAA,SAAS,EAAE3D,OAAO,CAACsB,QAAzB;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,MAAM,MAAlB;AAAmB,UAAA,OAAO,EAAC,IAA3B;AAAA,oBAAiC+B,UAAU,CAACoC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAY,UAAA,MAAM,MAAlB;AAAmB,UAAA,OAAO,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArBR;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR,EA+BKpC,UAAU,CAACqC,UAAX,KAA0B/B,SAA1B,GAAsCwB,iBAAiB,EAAvD,gBACG;AAAK,MAAA,SAAS,EAAEnF,OAAO,CAACuC,SAAxB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEvC,OAAO,CAACoC,MAAzB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAEpC,OAAO,CAAC4B,KAAxB;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA,wCAAuCyB,UAAU,CAACsC,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAE3F,OAAO,CAAC0C,cAAxB;AAAA,kCACI,QAAC,OAAD;AACI,YAAA,QAAQ,EAAEW,UAAU,CAACsC,UADzB;AAEI,YAAA,YAAY,EAAEtC,UAAU,CAACuC,cAF7B;AAGI,YAAA,IAAI,EAAE,gBAAgBvC,UAAU,CAACuC,cAHrC;AAII,YAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI,QAAC,OAAD;AACI,YAAA,QAAQ,EAAEvC,UAAU,CAACsC,UADzB;AAEI,YAAA,YAAY,EAAEtC,UAAU,CAACwC,aAF7B;AAGI,YAAA,IAAI,EAAE,kBAAkBxC,UAAU,CAACwC,aAHvC;AAII,YAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAaI,QAAC,OAAD;AACI,YAAA,QAAQ,EAAExC,UAAU,CAACsC,UADzB;AAEI,YAAA,YAAY,EAAEtC,UAAU,CAACyC,cAF7B;AAGI,YAAA,IAAI,EAAE,gBAAgBzC,UAAU,CAACyC,cAHrC;AAII,YAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eA0BI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAE9F,OAAO,CAACoC,MAAzB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAEpC,OAAO,CAAC4B,KAAxB;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA,4CAA2CyB,UAAU,CAAC0C,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAE/F,OAAO,CAAC0C,cAAxB;AAAA,kCACI,QAAC,OAAD;AACI,YAAA,QAAQ,EAAEW,UAAU,CAAC0C,SADzB;AAEI,YAAA,YAAY,EAAE1C,UAAU,CAAC2C,aAF7B;AAGI,YAAA,IAAI,EAAE,gBAAgB3C,UAAU,CAAC2C,aAHrC;AAII,YAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI,QAAC,OAAD;AACI,YAAA,QAAQ,EAAE3C,UAAU,CAAC0C,SADzB;AAEI,YAAA,YAAY,EAAE1C,UAAU,CAAC4C,YAF7B;AAGI,YAAA,IAAI,EAAE,kBAAkB5C,UAAU,CAAC4C,YAHvC;AAII,YAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAaI,QAAC,OAAD;AACI,YAAA,QAAQ,EAAE5C,UAAU,CAAC0C,SADzB;AAEI,YAAA,YAAY,EAAE1C,UAAU,CAAC6C,aAF7B;AAGI,YAAA,IAAI,EAAE,gBAAgB7C,UAAU,CAAC6C,aAHrC;AAII,YAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BJ,eAmDI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAElG,OAAO,CAACoC,MAAzB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAEpC,OAAO,CAAC4B,KAAxB;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA,6CAA4CyB,UAAU,CAACqC,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAE1F,OAAO,CAAC0C,cAAxB;AAAA,kCACI,QAAC,OAAD;AACI,YAAA,QAAQ,EAAEW,UAAU,CAACqC,UADzB;AAEI,YAAA,YAAY,EAAErC,UAAU,CAAC8C,cAF7B;AAGI,YAAA,IAAI,EAAE,gBAAgB9C,UAAU,CAAC8C,cAHrC;AAII,YAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI,QAAC,OAAD;AACI,YAAA,QAAQ,EAAE9C,UAAU,CAACqC,UADzB;AAEI,YAAA,YAAY,EAAErC,UAAU,CAAC+C,aAF7B;AAGI,YAAA,IAAI,EAAE,kBAAkB/C,UAAU,CAAC+C,aAHvC;AAII,YAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAaI,QAAC,OAAD;AACI,YAAA,QAAQ,EAAE/C,UAAU,CAACqC,UADzB;AAEI,YAAA,YAAY,EAAErC,UAAU,CAACgD,cAF7B;AAGI,YAAA,IAAI,EAAE,gBAAgBhD,UAAU,CAACgD,cAHrC;AAII,YAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCR,EA8GKlD,SAAS,KAAKQ,SAAd,gBAA0B;AAAA;AAAA;AAAA;AAAA,YAA1B,gBACG,QAAC,IAAD;AAAM,MAAA,SAAS,EAAE3D,OAAO,CAACgB,IAAzB;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,KAAK,EAAC;AADV;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAEhB,OAAO,CAAC0B,SAAnC;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,YAAY,MAAnB;AAAoB,wBAAW,cAA/B;AAAA,kCACI,QAAC,SAAD;AAAA,mCACI,QAAC,QAAD;AAAA,sCACI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAOI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAUI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ,eAaI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbJ,eAgBI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBJ,eAmBI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBJ,eAsBI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtBJ,eAyBI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzBJ,eA4BI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,sBA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAkCI,QAAC,SAAD;AAAA,sBACKyB,SAAS,CAAC6B,GAAV,CAAc,CAACsB,QAAD,EAAWpB,KAAX,kBACX,QAAC,QAAD;AAAU,cAAA,KAAK,MAAf;AAAA,sCACI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA,0BACKA,KAAK,GAAG;AADb;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA,0BACKoB,QAAQ,CAACC;AADd;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAOI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA,0BACKD,QAAQ,CAACE,MAAT,CAAgBC;AADrB;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAUI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA,0BACKH,QAAQ,CAACE,MAAT,CAAgBE;AADrB;AAAA;AAAA;AAAA;AAAA,sBAVJ,eAaI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA,0BACKJ,QAAQ,CAACE,MAAT,CAAgBG;AADrB;AAAA;AAAA;AAAA;AAAA,sBAbJ,eAgBI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA,0BACKL,QAAQ,CAAC7E,QAAT,CAAkBgF;AADvB;AAAA;AAAA;AAAA;AAAA,sBAhBJ,eAmBI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA,0BACKH,QAAQ,CAACM,UAAT,CAAoBH;AADzB;AAAA;AAAA;AAAA;AAAA,sBAnBJ,eAsBI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA,0BACKH,QAAQ,CAACO,UAAT,KAAwB,IAAxB,gBACG,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,wBADH,gBACyB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAF9B;AAAA;AAAA;AAAA;AAAA,sBAtBJ,eA0BI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA,0BACKP,QAAQ,CAACQ,cAAT,CAAwBC,QAAxB,GAAmCC,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C;AADL;AAAA;AAAA;AAAA;AAAA,sBA1BJ,eA6BI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,QAAvB;AAAA,uCACI,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAE;AAAEC,oBAAAA,QAAQ,mCAA4BX,QAAQ,CAACC,EAArC;AAAV,mBAAV;AAAA,yCACI,QAAC,UAAD;AAAY,oBAAA,SAAS,EAAEvG,OAAO,CAAC4C,MAA/B;AAAuC,oBAAA,IAAI,EAAC,OAA5C;AAAoD,kCAAW,MAA/D;AAAA,2CACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBA7BJ;AAAA,eAAqB0D,QAAQ,CAACC,EAA9B;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA/GR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuMH,CApUD;;IAAMrD,Y;UACcjD,S;;;MADdiD,Y;AAqUN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport APIURL from '../../Services/Globals'\r\nimport { Link } from \"react-router-dom\";\r\nimport { StatBar } from \"../GlobalComponents\"\r\n\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.progressBox} position=\"relative\" display=\"inline-flex\">\r\n            <CircularProgress className={classes.progressBox} variant=\"determinate\" {...props} />\r\n            <Box\r\n                top={0}\r\n                left={0}\r\n                bottom={0}\r\n                right={0}\r\n                position=\"absolute\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <Typography variant=\"h5\" component=\"div\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        backgroundColor: theme.palette.grey[400],\r\n        color: \"black\",\r\n    },\r\n}))(TableCell)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: '1.5rem',\r\n        width: '100%',\r\n        background: theme.palette.grey[800],\r\n        color: \"white\",\r\n    },\r\n    remoteWorkBox: {\r\n        marginTop: '1.2rem 0',\r\n        width: \"calc(366px - 1.2rem)\",\r\n        padding: \"10px\",\r\n        background: theme.palette.grey[800],\r\n        color: \"white\",\r\n    },\r\n    statsBox: {\r\n        margin: '0 0 1.2rem 1.2rem',\r\n        width: \"120px\",\r\n        height: \"60px\",\r\n        padding: \"12px\",\r\n        position: \"relative\",\r\n        background: theme.palette.grey[800],\r\n        color: \"white\",\r\n    },\r\n    progressBox: {\r\n        width: \"100% !important\",\r\n        height: \"100% !important\",\r\n    },\r\n    container: {\r\n        maxHeight: 540,\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '2px 6px 2px',\r\n        marginBottom: '5px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n        width: '100%',\r\n    },\r\n    barBox: {\r\n        width: 'max-content',\r\n        marginRight: '1rem',\r\n        marginBottom: '1rem',\r\n        minWidth: '366px',\r\n    },\r\n    statsMain: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    statsContainer: {\r\n        display: 'flex',\r\n        padding: '0 4px 4px',\r\n        justifyContent: 'space-around'\r\n    },\r\n    button: {\r\n        background: theme.palette.grey[300],\r\n        padding: \".4rem\",\r\n        \"margin-left\": \".2rem\",\r\n        \"margin-right\": \".2rem\",\r\n        color: theme.palette.grey[800]\r\n    },\r\n    skeleton: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: 'space-between',\r\n        margin: '4px',\r\n        '& .MuiSkeleton-root': {\r\n            transform: 'none',\r\n            visibility: 'visible !important'\r\n        }\r\n    }\r\n}));\r\n\r\nconst HR_Dashboard = () => {\r\n    const classes = useStyles();\r\n    const [employees, setEmployees] = useState([]);\r\n    const [tasksStats, setTasksStats] = useState({});\r\n    const [stats, setStats] = useState();\r\n    const [progress, setProgress] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        if (stats !== undefined) {\r\n            const timer = setInterval(() => {\r\n                setProgress((prevProgress) => (prevProgress === stats.remoteEmploeesPercentage\r\n                    ? stats.remoteEmploeesPercentage\r\n                    : prevProgress + 1));\r\n            }, 45);\r\n            return () => {\r\n                clearInterval(timer);\r\n            };\r\n        }\r\n    }, [stats]);\r\n\r\n    useEffect(() => {\r\n        getEmploees(1, 5);\r\n        getStats();\r\n        getTasksStats();\r\n    }, []);\r\n\r\n    const getTasksStats = () => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        fetch(APIURL + `tasks/stats`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => (setTasksStats(data)));\r\n\r\n    }\r\n\r\n    const getEmploees = async (page, size) => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        await fetch(APIURL +\r\n            `employee/all?page=${page}&size=${size}&order=date-desc`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => (setEmployees(data.items)));\r\n    }\r\n\r\n    const getStats = async () => {\r\n        const requestOptions = {\r\n            method: 'Get'\r\n        };\r\n        await fetch(APIURL + `home/stats`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => (setStats(data)));\r\n    }\r\n    const generalStatsSkeleton = () => {\r\n        return (\r\n            <Grid container style={{ marginBottom: '1.2rem' }}>\r\n                <Card className={classes.remoteWorkBox}>\r\n                    <Grid container item spacing={4}>\r\n                        <Grid item xs={7} >\r\n                            <Typography variant=\"h5\"> <Skeleton animation=\"wave\" width=\"95%\" /></Typography>\r\n                            <Typography variant=\"subtitle1\"><Skeleton animation=\"wave\" width=\"90%\" /></Typography>\r\n                        </Grid>\r\n                        <Grid item xs={5}>\r\n                            <Skeleton variant=\"circle\" animation=\"wave\" width={125} height={125} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Card>\r\n                {[1, 2, 3].map((n, index) => (\r\n                    <Card key={index + 'ss'} className={classes.statsBox}>\r\n                        <Typography variant=\"h5\"><Skeleton animation=\"wave\" width=\"42px\" /></Typography>\r\n                        <Typography variant=\"subtitle1\"><Skeleton animation=\"wave\" width=\"95%\" /></Typography>\r\n                    </Card>\r\n                ))}\r\n            </Grid>);\r\n    }\r\n\r\n    const tasksStatSkeleton = () => {\r\n        return (\r\n            <div className={classes.statsMain}>\r\n                {[1, 2, 3].map((n, index) => (\r\n                    <Card key={index + \"skiel\"} className={classes.barBox}>\r\n                        <div className={classes.title}>\r\n                            <Typography variant=\"h6\">\r\n                                <Skeleton animation=\"wave\" width=\"95%\" />\r\n                            </Typography>\r\n\r\n                        </div>\r\n                        <div className={classes.statsContainer}>\r\n                            <Skeleton className={classes.skeleton} animation=\"wave\" variant=\"rect\" width=\"102px\" height=\"160px\" >\r\n                                <Skeleton animation=\"wave\" width=\"100%\" />\r\n                                <Skeleton width=\"32px\" height=\"102px\" />\r\n                                <Skeleton animation=\"wave\" width=\"17px\" height=\"15px\" style={{ marginBottom: '5px' }} />\r\n                            </Skeleton>\r\n                            <Skeleton className={classes.skeleton} animation=\"wave\" variant=\"rect\" width=\"102px\" height=\"160px\" >\r\n                                <Skeleton animation=\"wave\" width=\"100%\" />\r\n                                <Skeleton width=\"32px\" height=\"102px\" />\r\n                                <Skeleton animation=\"wave\" width=\"17px\" height=\"15px\" style={{ marginBottom: '5px' }} />\r\n                            </Skeleton>\r\n                            <Skeleton className={classes.skeleton} animation=\"wave\" variant=\"rect\" width=\"102px\" height=\"160px\" >\r\n                                <Skeleton animation=\"wave\" width=\"100%\" />\r\n                                <Skeleton width=\"32px\" height=\"102px\" />\r\n                                <Skeleton animation=\"wave\" width=\"17px\" height=\"15px\" style={{ marginBottom: '5px' }} />\r\n                            </Skeleton>\r\n                        </div>\r\n                    </Card>\r\n                ))}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const tabSkeleton = () => {\r\n        return (\r\n            <Card>\r\n                <Typography style={{ marginLeft: '18px' }} variant=\"h3\"><Skeleton animation=\"wave\" width=\"21%\" /></Typography>\r\n                <Typography style={{ marginLeft: '18px' }} variant=\"h6\"><Skeleton animation=\"wave\" width=\"90%\" /></Typography>\r\n\r\n            </Card>\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {tabSkeleton()}\r\n            {stats === undefined ? generalStatsSkeleton() :\r\n                <Grid container style={{ marginBottom: '1.2rem' }}>\r\n                    <Card className={classes.remoteWorkBox}>\r\n                        <Grid container item spacing={4}>\r\n                            <Grid item xs={7} >\r\n                                <Typography noWrap variant=\"h5\">{stats.totalRemoteEmployees} Employees</Typography>\r\n                                <Typography noWrap variant=\"subtitle1\">Work Remotely</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                                <CircularProgressWithLabel value={progress} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Card>\r\n                    <Card className={classes.statsBox}>\r\n                        <Typography noWrap variant=\"h5\">{stats.totalEmployees}</Typography>\r\n                        <Typography noWrap variant=\"subtitle1\">Total Employees</Typography>\r\n                    </Card>\r\n                    <Card className={classes.statsBox}>\r\n                        <Typography noWrap variant=\"h5\">{stats.totalJobApplications}</Typography>\r\n                        <Typography noWrap variant=\"subtitle1\">Job Applicatios</Typography>\r\n                    </Card>\r\n                    {tasksStats.totalDelayedTasks === undefined || 0 ? null :\r\n                        <Card className={classes.statsBox}>\r\n                            <Typography noWrap variant=\"h5\">{tasksStats.totalDelayedTasks}</Typography>\r\n                            <Typography noWrap variant=\"subtitle1\">Delayed Tasks</Typography>\r\n                        </Card>\r\n                    }\r\n                </Grid>\r\n            }\r\n            {tasksStats.monthTotal === undefined ? tasksStatSkeleton() :\r\n                <div className={classes.statsMain}>\r\n                    <Card className={classes.barBox}>\r\n                        <div className={classes.title}>\r\n                            <Typography variant=\"h6\">Today Tasks: {tasksStats.todayTotal}</Typography>\r\n                        </div>\r\n                        <div className={classes.statsContainer}>\r\n                            <StatBar\r\n                                valueMax={tasksStats.todayTotal}\r\n                                valueCurrent={tasksStats.todayRequested}\r\n                                text={\"Requested: \" + tasksStats.todayRequested}\r\n                                bcolor='rgb(231, 170, 35)'\r\n                            />\r\n                            <StatBar\r\n                                valueMax={tasksStats.todayTotal}\r\n                                valueCurrent={tasksStats.todayProgress}\r\n                                text={\"In-Progress: \" + tasksStats.todayProgress}\r\n                                bcolor='rgb(56, 81, 216)'\r\n                            />\r\n                            <StatBar\r\n                                valueMax={tasksStats.todayTotal}\r\n                                valueCurrent={tasksStats.todayCompleted}\r\n                                text={\"Completed: \" + tasksStats.todayCompleted}\r\n                                bcolor='rgb(0, 158, 7)'\r\n                            />\r\n                        </div>\r\n                    </Card>\r\n                    <Card className={classes.barBox}>\r\n                        <div className={classes.title}>\r\n                            <Typography variant=\"h6\">This Week Tasks: {tasksStats.weekTotal}</Typography>\r\n                        </div>\r\n                        <div className={classes.statsContainer}>\r\n                            <StatBar\r\n                                valueMax={tasksStats.weekTotal}\r\n                                valueCurrent={tasksStats.weekRequested}\r\n                                text={\"Requested: \" + tasksStats.weekRequested}\r\n                                bcolor='rgb(231, 170, 35)'\r\n                            />\r\n                            <StatBar\r\n                                valueMax={tasksStats.weekTotal}\r\n                                valueCurrent={tasksStats.weekProgress}\r\n                                text={\"In-Progress: \" + tasksStats.weekProgress}\r\n                                bcolor='rgb(56, 81, 216)'\r\n                            />\r\n                            <StatBar\r\n                                valueMax={tasksStats.weekTotal}\r\n                                valueCurrent={tasksStats.weekCompleted}\r\n                                text={\"Completed: \" + tasksStats.weekCompleted}\r\n                                bcolor='rgb(0, 158, 7)'\r\n                            />\r\n                        </div>\r\n                    </Card>\r\n                    <Card className={classes.barBox}>\r\n                        <div className={classes.title}>\r\n                            <Typography variant=\"h6\">This Month Tasks: {tasksStats.monthTotal}</Typography>\r\n                        </div>\r\n                        <div className={classes.statsContainer}>\r\n                            <StatBar\r\n                                valueMax={tasksStats.monthTotal}\r\n                                valueCurrent={tasksStats.monthRequested}\r\n                                text={\"Requested: \" + tasksStats.monthRequested}\r\n                                bcolor='rgb(231, 170, 35)'\r\n                            />\r\n                            <StatBar\r\n                                valueMax={tasksStats.monthTotal}\r\n                                valueCurrent={tasksStats.monthProgress}\r\n                                text={\"In-Progress: \" + tasksStats.monthProgress}\r\n                                bcolor='rgb(56, 81, 216)'\r\n                            />\r\n                            <StatBar\r\n                                valueMax={tasksStats.monthTotal}\r\n                                valueCurrent={tasksStats.monthCompleted}\r\n                                text={\"Completed: \" + tasksStats.monthCompleted}\r\n                                bcolor='rgb(0, 158, 7)'\r\n                            />\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n            }\r\n            {employees === undefined ? <div></div> :\r\n                <Card className={classes.root}>\r\n                    <CardHeader\r\n                        title=\"Newly Hired Employees:\"\r\n\r\n                    />\r\n                    <TableContainer className={classes.container}>\r\n                        <Table stickyHeader aria-label=\"sticky table\" >\r\n                            <TableHead>\r\n                                <TableRow >\r\n                                    <StyledTableCell align=\"center\">\r\n                                        #\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        ID\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Name\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Surname\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Email\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Position\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Department\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Remote Work\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Employment Date\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell>\r\n                                    </StyledTableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody >\r\n                                {employees.map((employee, index) => (\r\n                                    <TableRow hover key={employee.id}>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {index + 1}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.id}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.person.name}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.person.surname}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.person.email}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.position.name}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.department.name}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.remoteWork === true ?\r\n                                                <CheckCircleIcon /> : <CloseIcon />}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.employmentDate.toString().split('T')[0]}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            <Link to={{ pathname: `/main/employee-details/${employee.id}` }}>\r\n                                                <IconButton className={classes.button} size=\"small\" aria-label=\"view\">\r\n                                                    <VisibilityIcon />\r\n                                                </IconButton>\r\n                                            </Link>\r\n                                        </StyledTableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Card>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default HR_Dashboard;"]},"metadata":{},"sourceType":"module"}