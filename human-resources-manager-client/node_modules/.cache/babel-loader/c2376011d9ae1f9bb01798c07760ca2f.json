{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\Teams\\\\TeamTasks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport APIURL from '../../Services/Globals';\nimport { getTasks, changeTaskStatus } from \"../../Services/TasksService\";\nimport { getCurrentUser } from '../../Services/AuthService';\nimport { DarkTextField, DarkSelect } from '../GlobalComponents';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Accordion, AccordionSummary, AccordionDetails, Chip } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from \"@date-io/moment\";\nimport Checkbox from '@material-ui/core/Checkbox';\nconst useStyles = makeStyles(theme => ({\n  whiteText: {\n    color: \"white\",\n    margin: \"0px\",\n    marginRight: \"8px\"\n  },\n  membersContainer: {\n    margin: '0 auto',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  listComponent: {\n    margin: '8px',\n    width: '100%',\n    paddingTop: 0,\n    backgroundColor: theme.palette.background.paper,\n    color: 'white',\n    boxShadow: theme.shadows[2],\n    borderRadius: '4px',\n    display: \"flex\",\n    flexDirection: 'column'\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '6px 0',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2],\n    borderRadius: '3px 3px 0 0',\n    width: '100%'\n  }\n}));\nconst leaderID = getCurrentUser().userDetails.employeeDTO.id;\n\nconst TeamTasks = () => {\n  _s();\n\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [members, setMembers] = useState([]);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    const requestOptions = {\n      method: 'Get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(APIURL + `teams/leader/${leaderID}`, requestOptions).then(response => response.json()).then(data => setMembers(data.members));\n  };\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: members.length === 0 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.membersContainer,\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        component: \"nav\",\n        className: classes.listComponent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"List of Members:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), members.map((member, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            selected: selectedIndex === index,\n            onClick: event => handleListItemClick(event, index),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: member.person.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            style: {\n              width: \"100%\",\n              margin: \"0\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this)]\n        }, member.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.tasksDetailsCol,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            noWrap: true,\n            variant: \"h5\",\n            children: \"tiitle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          style: {\n            paddingTop: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TeamTasks, \"qMVAFfvJbRb+niQ76bjFCZgat2s=\", false, function () {\n  return [useStyles];\n});\n\n_c = TeamTasks;\nexport default TeamTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamTasks\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/Teams/TeamTasks.js"],"names":["React","useEffect","useState","makeStyles","APIURL","getTasks","changeTaskStatus","getCurrentUser","DarkTextField","DarkSelect","Card","CardContent","Typography","Accordion","AccordionSummary","AccordionDetails","Chip","ExpandMoreIcon","Button","IconButton","List","ListItem","ListItemText","Divider","ButtonGroup","ArrowDropDownIcon","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","Pagination","Toolbar","KeyboardDatePicker","MuiPickersUtilsProvider","MomentUtils","Checkbox","useStyles","theme","whiteText","color","margin","marginRight","membersContainer","display","flexDirection","justifyContent","listComponent","width","paddingTop","backgroundColor","palette","background","paper","boxShadow","shadows","borderRadius","title","text","primary","textAlign","padding","main","leaderID","userDetails","employeeDTO","id","TeamTasks","classes","selectedIndex","setSelectedIndex","members","setMembers","getData","requestOptions","method","headers","fetch","then","response","json","data","handleListItemClick","event","index","length","map","member","person","name","tasksDetailsCol"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport APIURL from '../../Services/Globals';\r\nimport { getTasks, changeTaskStatus } from \"../../Services/TasksService\";\r\nimport { getCurrentUser } from '../../Services/AuthService';\r\nimport { DarkTextField, DarkSelect } from '../GlobalComponents';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Accordion, AccordionSummary, AccordionDetails, Chip } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    whiteText: {\r\n        color: \"white\",\r\n        margin: \"0px\",\r\n        marginRight: \"8px\",\r\n    },\r\n    membersContainer: {\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center'\r\n    },\r\n    listComponent: {\r\n        margin: '8px',\r\n        width: '100%',\r\n        paddingTop: 0,\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: 'white',\r\n        boxShadow: theme.shadows[2],\r\n        borderRadius: '4px',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '6px 0',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n        borderRadius: '3px 3px 0 0',\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nconst leaderID = getCurrentUser().userDetails.employeeDTO.id;\r\nconst TeamTasks = () => {\r\n    const classes = useStyles();\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n    const [members, setMembers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        fetch(APIURL + `teams/leader/${leaderID}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => (\r\n                setMembers(data.members)\r\n            ));\r\n    }\r\n\r\n    const handleListItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {members.length === 0 ? null :\r\n                <div className={classes.membersContainer}>\r\n                    <List component=\"nav\" className={classes.listComponent}>\r\n                        <div className={classes.title}>\r\n                            <Typography variant=\"h6\">\r\n                                List of Members:\r\n                            </Typography>\r\n                        </div>\r\n                        {members.map((member, index) => (\r\n                            <div key={member.id}>\r\n                                <ListItem\r\n                                    button\r\n                                    selected={selectedIndex === index}\r\n                                    onClick={(event) => handleListItemClick(event, index)}\r\n                                >\r\n                                    <ListItemText primary={member.person.name} />\r\n\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" style={{ width: \"100%\", margin: \"0\" }} />\r\n                            </div>\r\n                        ))\r\n                        }\r\n                    </List>\r\n                    <Card className={classes.tasksDetailsCol}>\r\n                        <div className={classes.title}>\r\n                            <Typography noWrap variant=\"h5\">\r\n                                {\"tiitle\"}\r\n                            </Typography>\r\n                        </div>\r\n                        <CardContent style={{ paddingTop: 0 }}>\r\n\r\n                        </CardContent>\r\n\r\n                    </Card>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default TeamTasks;"]},"metadata":{},"sourceType":"module"}