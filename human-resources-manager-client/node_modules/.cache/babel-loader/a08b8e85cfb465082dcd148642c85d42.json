{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\Employees\\\\EmployeeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DarkTextField, DarkSelect, DarkChipList } from '../GlobalComponents';\nimport APIURL from '../../Services/Globals';\nimport { authHeader } from '../../Services/AuthService';\nimport { useLocation } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { format } from 'date-fns';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  mainConteiner: {\n    marginTop: \"1.8rem\",\n    background: theme.palette.grey[800],\n    paddingBottom: '20px'\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '1px',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2]\n  },\n  formGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    justifyContent: \"space-between\",\n    alignContent: \"space-between\",\n    gridGap: \"1.2rem 1.2rem\"\n  },\n  datePicker: {\n    marginTop: '0',\n    marginLeft: \"20px\"\n  },\n  createButton: {\n    margin: '0 auto',\n    display: 'block',\n    width: \"19rem\"\n  }\n}));\n\nconst EmployeeForm = ({\n  createdEmployee,\n  employeeToEdit\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const [seniorityLvs] = useState([{\n    id: 1,\n    name: \"Junior\"\n  }, {\n    id: 2,\n    name: \"Regular\"\n  }, {\n    id: 3,\n    name: \"Senior\"\n  }]);\n  const [employee, setEmployee] = useState(location.employee !== undefined ? location.employee.employee : employeeToEdit !== undefined ? employeeToEdit : {\n    id: 0,\n    employmentDate: format(new Date(), \"yyy-MM-dd\"),\n    remoteWork: false,\n    person: {\n      id: 0,\n      name: \"\",\n      surname: \"\",\n      phoneNumber: \"\",\n      email: \"\",\n      employeeAddress: {\n        id: 0,\n        city: \"\",\n        postCode: \"\",\n        street: \"\"\n      }\n    },\n    position: {\n      id: 0,\n      name: \"\"\n    },\n    department: {\n      id: 0,\n      name: \"\"\n    },\n    seniority: \"\",\n    permissions: []\n  });\n  const [departments, setDepartments] = useState([]);\n  const [positions, setPositions] = useState([]);\n  const remoteWork = [{\n    id: false,\n    name: \"Office\"\n  }, {\n    id: true,\n    name: \"Remote\"\n  }];\n  const [allPermissions, setAllPermissions] = useState([]);\n  const [employeePermissions, setEmployeePermissions] = useState(location.employee !== undefined ? location.employee.employee.permissions : employeeToEdit !== undefined ? employeeToEdit.permissions : []);\n  const [allertProps, setAllertProps] = useState({\n    text: '',\n    open: false,\n    type: 'success'\n  });\n  useEffect(() => {\n    getEmployeeProps();\n  }, []);\n  useEffect(() => {\n    setEmployee({ ...employee,\n      ['permissions']: employeePermissions\n    });\n  }, [employeePermissions]);\n\n  const PostEmployee = formData => {\n    const requestOptions = {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': authHeader()\n      }),\n      body: JSON.stringify(formData)\n    };\n    fetch(APIURL + 'employee/create', requestOptions).then(response => response.json()).then(() => {\n      setAllertProps({\n        text: \"Employee Created\",\n        open: true,\n        type: \"success\"\n      });\n    }, err => {\n      console.log(err);\n      setAllertProps({\n        text: \"Employee Creation Error!\",\n        open: true,\n        type: \"error\"\n      });\n    });\n  };\n\n  const PutEmployee = (id, formData) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': authHeader()\n      }),\n      body: JSON.stringify(formData)\n    };\n    fetch(APIURL + 'employee/put/' + id, requestOptions).then(() => setAllertProps({\n      text: \"Employee Modified\",\n      open: true,\n      type: 'success'\n    }), err => {\n      console.log(err);\n      setAllertProps({\n        text: \"Employee Edit Error!\",\n        open: true,\n        type: \"error\"\n      });\n    });\n  };\n\n  const getEmployeeProps = async () => {\n    const requestOptions = {\n      method: 'Get',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': authHeader()\n      })\n    };\n    await fetch(APIURL + \"departments\", requestOptions).then(response => response.json()).then(data => setDepartments(data));\n    await fetch(APIURL + \"positions\", requestOptions).then(response => response.json()).then(data => setPositions(data));\n    await fetch(APIURL + \"permissions\", requestOptions).then(response => response.json()).then(data => setAllPermissions(data));\n  };\n\n  const headleFormChange = e => {\n    if (e.target.name === \"permissionSelect\") {\n      if (employeePermissions.length === 0) {\n        setEmployeePermissions([e.target.value]);\n      } else {\n        let isPicked = false;\n        employeePermissions.forEach(element => {\n          if (element.id === e.target.value.id) {\n            isPicked = true;\n          }\n        });\n\n        if (!isPicked) {\n          setEmployeePermissions([...employeePermissions, e.target.value]);\n        }\n      }\n    }\n\n    setEmployee({ ...employee,\n      person: { ...employee.person,\n        name: e.target.name === \"employeeName\" ? e.target.value : employee.person.name,\n        surname: e.target.name === \"employeeSurname\" ? e.target.value : employee.person.surname,\n        phoneNumber: e.target.name === \"employeePhone\" ? e.target.value : employee.person.phoneNumber,\n        email: e.target.name === \"employeeEmail\" ? e.target.value : employee.person.email,\n        employeeAddress: { ...employee.person.employeeAddress,\n          city: e.target.name === \"employeeCity\" ? e.target.value : employee.person.employeeAddress.city,\n          postCode: e.target.name === \"employeePostCode\" ? e.target.value : employee.person.employeeAddress.postCode,\n          street: e.target.name === \"employeeStreet\" ? e.target.value : employee.person.employeeAddress.street\n        }\n      },\n      position: e.target.name === \"positionSelect\" ? e.target.value : employee.position,\n      department: e.target.name === \"departmentSelect\" ? e.target.value : employee.department,\n      employmentDate: employee.employmentDate,\n      remoteWork: e.target.name === \"remoteWork\" ? e.target.value.id : employee.remoteWork,\n      seniority: e.target.name === \"seniority\" ? e.target.value.name : employee.seniority,\n      permissions: employee.permissions\n    });\n  };\n\n  const headleDateChange = e => {\n    setEmployee({ ...employee,\n      employmentDate: e\n    });\n  };\n\n  const hendlePermissionDelete = chipToDelete => {\n    setEmployeePermissions(chips => chips.filter(chip => chip.name !== chipToDelete.name));\n  };\n\n  const hendleSubmitEmployee = () => {\n    if (createdEmployee !== undefined) {\n      createdEmployee(employee);\n      return;\n    }\n\n    if (location.employee !== undefined) {\n      PutEmployee(employee.id, employee);\n      return;\n    }\n\n    PostEmployee(employee);\n  };\n\n  const setSelectVall = (colection, objId) => {\n    if (colection[0] === undefined || objId === 0) return '';\n    return colection[colection.findIndex(item => item.id === objId)];\n  };\n\n  const handleAllertClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setAllertProps({ ...allertProps,\n      open: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainConteiner,\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: allertProps.open,\n      autoHideDuration: 4000,\n      onClose: handleAllertClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleAllertClose,\n        severity: allertProps.type,\n        children: allertProps.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      boxshadow: 2,\n      className: classes.title,\n      children: employee.id !== 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: 'Edit Employee: ' + employee.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGrid,\n        children: [/*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"Name\",\n          name: \"employeeName\",\n          value: employee.person.name,\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"Surname\",\n          name: \"employeeSurname\",\n          value: employee.person.surname,\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"Phone Number\",\n          name: \"employeePhone\",\n          type: \"tel\",\n          value: employee.person.phoneNumber,\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"Email\",\n          name: \"employeeEmail\",\n          value: employee.person.email,\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"City\",\n          name: \"employeeCity\",\n          value: employee.person.employeeAddress.city,\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"Post Code\",\n          name: \"employeePostCode\",\n          value: employee.person.employeeAddress.postCode,\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"Street\",\n          name: \"employeeStreet\",\n          value: employee.person.employeeAddress.street,\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkSelect, {\n          label: \"Department\",\n          name: \"departmentSelect\",\n          collection: departments,\n          value: setSelectVall(departments, employee.department.id),\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkSelect, {\n          label: \"Position\",\n          name: \"positionSelect\",\n          collection: positions,\n          value: setSelectVall(positions, employee.position.id),\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkSelect, {\n          label: \"Seniority\",\n          name: \"seniority\",\n          collection: seniorityLvs,\n          value: seniorityLvs[seniorityLvs.findIndex(item => item.name === employee.seniority)] //sen\n          ,\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkSelect, {\n          label: \"Work Type\",\n          name: \"remoteWork\",\n          collection: remoteWork,\n          value: employee.remoteWork === false ? remoteWork[0] : remoteWork[1],\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            className: classes.datePicker,\n            disableToolbar: true,\n            name: \"datePicker\",\n            variant: \"inline\",\n            format: \"yyyy-MM-dd\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Employment Date\",\n            value: employee.employmentDate,\n            onChange: headleDateChange,\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkChipList, {\n        label: \"Permissions\",\n        name: \"permissionSelect\",\n        collection: allPermissions,\n        clipListCollection: employeePermissions,\n        onChange: headleFormChange,\n        onDelete: hendlePermissionDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.createButton,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: hendleSubmitEmployee,\n        children: \"Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployeeForm, \"VnfgtKkUr2am69nglrSxDZAyn54=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c2 = EmployeeForm;\nexport default EmployeeForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"EmployeeForm\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/Employees/EmployeeForm.js"],"names":["React","useEffect","useState","makeStyles","DarkTextField","DarkSelect","DarkChipList","APIURL","authHeader","useLocation","Button","DateFnsUtils","format","KeyboardDatePicker","MuiPickersUtilsProvider","Snackbar","MuiAlert","Alert","props","useStyles","theme","mainConteiner","marginTop","background","palette","grey","paddingBottom","title","color","text","primary","textAlign","padding","backgroundColor","main","boxShadow","shadows","formGrid","display","gridTemplateColumns","justifyContent","alignContent","gridGap","datePicker","marginLeft","createButton","margin","width","EmployeeForm","createdEmployee","employeeToEdit","classes","location","seniorityLvs","id","name","employee","setEmployee","undefined","employmentDate","Date","remoteWork","person","surname","phoneNumber","email","employeeAddress","city","postCode","street","position","department","seniority","permissions","departments","setDepartments","positions","setPositions","allPermissions","setAllPermissions","employeePermissions","setEmployeePermissions","allertProps","setAllertProps","open","type","getEmployeeProps","PostEmployee","formData","requestOptions","method","headers","Headers","body","JSON","stringify","fetch","then","response","json","err","console","log","PutEmployee","data","headleFormChange","e","target","length","value","isPicked","forEach","element","headleDateChange","hendlePermissionDelete","chipToDelete","chips","filter","chip","hendleSubmitEmployee","setSelectVall","colection","objId","findIndex","item","handleAllertClose","event","reason","root"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DarkTextField, DarkSelect, DarkChipList } from '../GlobalComponents';\r\nimport APIURL from '../../Services/Globals'\r\nimport { authHeader } from '../../Services/AuthService'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns'\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainConteiner: {\r\n        marginTop: \"1.8rem\",\r\n        background: theme.palette.grey[800],\r\n        paddingBottom: '20px'\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '1px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n    },\r\n    formGrid: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr 1fr\",\r\n        justifyContent: \"space-between\",\r\n        alignContent: \"space-between\",\r\n        gridGap: \"1.2rem 1.2rem\",\r\n    },\r\n    datePicker: {\r\n        marginTop: '0',\r\n        marginLeft: \"20px\"\r\n    },\r\n    createButton: {\r\n        margin: '0 auto',\r\n        display: 'block',\r\n        width: \"19rem\",\r\n    }\r\n}));\r\n\r\nconst EmployeeForm = ({ createdEmployee, employeeToEdit }) => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const [seniorityLvs] = useState([\r\n        { id: 1, name: \"Junior\" },\r\n        { id: 2, name: \"Regular\" },\r\n        { id: 3, name: \"Senior\" },\r\n    ]);\r\n    const [employee, setEmployee] = useState(\r\n        location.employee !== undefined ? location.employee.employee :\r\n            employeeToEdit !== undefined ? employeeToEdit :\r\n                {\r\n                    id: 0,\r\n                    employmentDate: format(new Date(), \"yyy-MM-dd\"),\r\n                    remoteWork: false,\r\n                    person: {\r\n                        id: 0,\r\n                        name: \"\",\r\n                        surname: \"\",\r\n                        phoneNumber: \"\",\r\n                        email: \"\",\r\n                        employeeAddress: {\r\n                            id: 0,\r\n                            city: \"\",\r\n                            postCode: \"\",\r\n                            street: \"\"\r\n                        }\r\n                    },\r\n                    position: {\r\n                        id: 0,\r\n                        name: \"\",\r\n                    },\r\n                    department: {\r\n                        id: 0,\r\n                        name: \"\",\r\n                    },\r\n                    seniority: \"\",\r\n                    permissions: []\r\n                });\r\n    const [departments, setDepartments] = useState([]);\r\n    const [positions, setPositions] = useState([]);\r\n    const remoteWork = [\r\n        { id: false, name: \"Office\" },\r\n        { id: true, name: \"Remote\" }\r\n    ];\r\n    const [allPermissions, setAllPermissions] = useState([]);\r\n    const [employeePermissions, setEmployeePermissions] = useState(\r\n        location.employee !== undefined ? location.employee.employee.permissions :\r\n            employeeToEdit !== undefined ? employeeToEdit.permissions : []\r\n    );\r\n    const [allertProps, setAllertProps] = useState({\r\n        text: '',\r\n        open: false,\r\n        type: 'success'\r\n    });\r\n\r\n    useEffect(() => {\r\n        getEmployeeProps()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setEmployee({\r\n            ...employee,\r\n            ['permissions']: employeePermissions\r\n        })\r\n    }, [employeePermissions]);\r\n\r\n    const PostEmployee = (formData) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() }),\r\n            body: JSON.stringify(formData),\r\n        };\r\n        fetch(APIURL + 'employee/create', requestOptions)\r\n            .then(response => response.json())\r\n            .then(() => {\r\n                setAllertProps({\r\n                    text: \"Employee Created\",\r\n                    open: true,\r\n                    type: \"success\"\r\n                })\r\n            }\r\n                , (err) => {\r\n                    console.log(err)\r\n                    setAllertProps({\r\n                        text: \"Employee Creation Error!\",\r\n                        open: true,\r\n                        type: \"error\"\r\n                    })\r\n                });\r\n    }\r\n\r\n    const PutEmployee = (id, formData) => {\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() }),\r\n            body: JSON.stringify(formData),\r\n        };\r\n        fetch(APIURL + 'employee/put/' + id, requestOptions)\r\n            .then(() => setAllertProps({\r\n                text: \"Employee Modified\",\r\n                open: true,\r\n                type: 'success'\r\n            })\r\n                , (err) => {\r\n                    console.log(err)\r\n                    setAllertProps({\r\n                        text: \"Employee Edit Error!\",\r\n                        open: true,\r\n                        type: \"error\"\r\n                    })\r\n                }\r\n            );\r\n    }\r\n\r\n    const getEmployeeProps = async () => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() })\r\n        };\r\n        await fetch(APIURL + `departments`,\r\n            requestOptions\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => setDepartments(data));\r\n\r\n        await fetch(APIURL + `positions`,\r\n            requestOptions\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => setPositions(data));\r\n\r\n        await fetch(APIURL + `permissions`,\r\n            requestOptions\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => setAllPermissions(data));\r\n    }\r\n\r\n    const headleFormChange = e => {\r\n\r\n        if (e.target.name === \"permissionSelect\") {\r\n            if (employeePermissions.length === 0) {\r\n                setEmployeePermissions([e.target.value]);\r\n            } else {\r\n                let isPicked = false;\r\n                employeePermissions.forEach(element => {\r\n                    if (element.id === e.target.value.id) {\r\n                        isPicked = true;\r\n                    }\r\n                });\r\n                if (!isPicked) {\r\n                    setEmployeePermissions([...employeePermissions, e.target.value]);\r\n                }\r\n            }\r\n        }\r\n        setEmployee({\r\n            ...employee,\r\n            person: {\r\n                ...employee.person,\r\n                name: e.target.name === \"employeeName\" ? e.target.value : employee.person.name,\r\n                surname: e.target.name === \"employeeSurname\" ? e.target.value : employee.person.surname,\r\n                phoneNumber: e.target.name === \"employeePhone\" ? e.target.value : employee.person.phoneNumber,\r\n                email: e.target.name === \"employeeEmail\" ? e.target.value : employee.person.email,\r\n                employeeAddress: {\r\n                    ...employee.person.employeeAddress,\r\n                    city: e.target.name === \"employeeCity\" ? e.target.value : employee.person.employeeAddress.city,\r\n                    postCode: e.target.name === \"employeePostCode\" ? e.target.value : employee.person.employeeAddress.postCode,\r\n                    street: e.target.name === \"employeeStreet\" ? e.target.value : employee.person.employeeAddress.street\r\n                }\r\n            },\r\n            position: e.target.name === \"positionSelect\" ? e.target.value : employee.position,\r\n            department: e.target.name === \"departmentSelect\" ? e.target.value : employee.department,\r\n            employmentDate: employee.employmentDate,\r\n            remoteWork: e.target.name === \"remoteWork\" ? e.target.value.id : employee.remoteWork,\r\n            seniority: e.target.name === \"seniority\" ? e.target.value.name : employee.seniority,\r\n            permissions: employee.permissions\r\n        })\r\n    }\r\n\r\n    const headleDateChange = (e) => {\r\n        setEmployee({ ...employee, employmentDate: e })\r\n    }\r\n    const hendlePermissionDelete = chipToDelete => {\r\n        setEmployeePermissions(chips => chips.filter(chip => chip.name !== chipToDelete.name));\r\n    }\r\n\r\n    const hendleSubmitEmployee = () => {\r\n        if (createdEmployee !== undefined) {\r\n            createdEmployee(employee);\r\n            return;\r\n        }\r\n\r\n        if (location.employee !== undefined) {\r\n            PutEmployee(employee.id, employee)\r\n            return;\r\n        }\r\n        PostEmployee(employee);\r\n    }\r\n\r\n    const setSelectVall = (colection, objId) => {\r\n        if (colection[0] === undefined || objId === 0)\r\n            return '';\r\n\r\n        return colection[colection.findIndex((item) => item.id === objId)];\r\n    }\r\n\r\n    const handleAllertClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAllertProps({ ...allertProps, open: false });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.mainConteiner}>\r\n            <Snackbar open={allertProps.open} autoHideDuration={4000} onClose={handleAllertClose}>\r\n                <Alert onClose={handleAllertClose} severity={allertProps.type}>\r\n                    {allertProps.text}\r\n                </Alert>\r\n            </Snackbar>\r\n            <div boxshadow={2} className={classes.title}>\r\n                {employee.id !== 0 ?\r\n                    <h3 >{'Edit Employee: ' + employee.id}</h3> :\r\n                    <h3 >Create New Employee</h3>\r\n                }\r\n            </div>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <div className={classes.formGrid}>\r\n                    <DarkTextField\r\n                        label=\"Name\"\r\n                        name=\"employeeName\"\r\n                        value={employee.person.name}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkTextField\r\n                        label=\"Surname\"\r\n                        name=\"employeeSurname\"\r\n                        value={employee.person.surname}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkTextField\r\n                        label=\"Phone Number\"\r\n                        name=\"employeePhone\"\r\n                        type=\"tel\"\r\n                        value={employee.person.phoneNumber}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkTextField\r\n                        label=\"Email\"\r\n                        name=\"employeeEmail\"\r\n                        value={employee.person.email}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkTextField\r\n                        label=\"City\"\r\n                        name=\"employeeCity\"\r\n                        value={employee.person.employeeAddress.city}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkTextField\r\n                        label=\"Post Code\"\r\n                        name=\"employeePostCode\"\r\n                        value={employee.person.employeeAddress.postCode}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkTextField\r\n                        label=\"Street\"\r\n                        name=\"employeeStreet\"\r\n                        value={employee.person.employeeAddress.street}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkSelect\r\n                        label=\"Department\"\r\n                        name=\"departmentSelect\"\r\n                        collection={departments}\r\n                        value={setSelectVall(departments, employee.department.id)}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkSelect\r\n                        label=\"Position\"\r\n                        name=\"positionSelect\"\r\n                        collection={positions}\r\n                        value={setSelectVall(positions, employee.position.id)}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkSelect\r\n                        label=\"Seniority\"\r\n                        name=\"seniority\"\r\n                        collection={seniorityLvs}\r\n                        value={\r\n                            seniorityLvs[seniorityLvs.findIndex((item) => item.name === employee.seniority)]} //sen\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkSelect\r\n                        label=\"Work Type\"\r\n                        name=\"remoteWork\"\r\n                        collection={remoteWork}\r\n                        value={employee.remoteWork === false ? remoteWork[0] : remoteWork[1]}\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            className={classes.datePicker}\r\n                            disableToolbar\r\n                            name=\"datePicker\"\r\n                            variant=\"inline\"\r\n                            format=\"yyyy-MM-dd\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Employment Date\"\r\n                            value={employee.employmentDate}\r\n                            onChange={headleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </div>\r\n                <DarkChipList\r\n                    label=\"Permissions\"\r\n                    name=\"permissionSelect\"\r\n                    collection={allPermissions}\r\n                    clipListCollection={employeePermissions}\r\n                    onChange={headleFormChange}\r\n                    onDelete={hendlePermissionDelete}\r\n                />\r\n                <Button\r\n                    className={classes.createButton}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={hendleSubmitEmployee}\r\n                >Submit </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default EmployeeForm;"]},"metadata":{},"sourceType":"module"}