{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\JobOffers\\\\JobOfferView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport APIURL, { ClientURL } from '../../Services/Globals';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams } from \"react-router-dom\";\nimport { authHeader } from '../../Services/AuthService';\nconst useStyles = makeStyles(theme => ({\n  detailsConteiner: {\n    background: theme.palette.grey[800],\n    color: theme.palette.text.primary\n  },\n  gridConteiner: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    gridTemplateRows: \"1fr \",\n    justifyContent: \"space-evenly\",\n    gridGap: '8px',\n    alignContent: \"center\",\n    marginTop: \"5px\",\n    '& p': {\n      margin: \"5px\",\n      display: 'inline',\n      fontSize: \"17px\"\n    },\n    '& h3': {\n      margin: \"5px\",\n      display: 'inline'\n    }\n  },\n  description: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  JobApplicationLink: {\n    padding: \"6px\",\n    margin: \"5px\",\n    backgroundColor: theme.palette.grey[200],\n    borderRadius: '4px',\n    boxShadow: theme.shadows[3],\n    \"& a\": {\n      textDecoration: \"none\",\n      fontWeight: \"bold\",\n      fontSize: '15px'\n    }\n  }\n}));\n\nconst JobOfferView = jobOfferId => {\n  _s();\n\n  const classes = useStyles();\n  const [jobOffer, setJobOffer] = useState({});\n  const params = useParams();\n  useEffect(() => {\n    getJobOffer(params.id === undefined ? jobOfferId.jobOfferId : params.id);\n  });\n\n  const getJobOffer = async id => {\n    const requestOptions = {\n      method: 'Get',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': authHeader()\n      })\n    };\n    await fetch(APIURL + \"jobOffers/\" + id, requestOptions).then(response => response.json()).then(data => setJobOffer(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.detailsConteiner,\n      children: jobOffer.position === undefined ? null : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.gridConteiner,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Available Jobs: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: jobOffer.availableJobs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Position: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: jobOffer.position.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.description,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Description: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: jobOffer.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.JobApplicationLink,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: ClientURL + 'submit-application/' + jobOffer.id,\n            children: ClientURL + 'submit-application/' + jobOffer.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobOfferView, \"6At5EjgbWz3fD4IxEm+mKEcnpPM=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = JobOfferView;\nexport default JobOfferView;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobOfferView\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/JobOffers/JobOfferView.js"],"names":["React","useEffect","useState","APIURL","ClientURL","makeStyles","useParams","authHeader","useStyles","theme","detailsConteiner","background","palette","grey","color","text","primary","gridConteiner","display","gridTemplateColumns","gridTemplateRows","justifyContent","gridGap","alignContent","marginTop","margin","fontSize","description","flexDirection","JobApplicationLink","padding","backgroundColor","borderRadius","boxShadow","shadows","textDecoration","fontWeight","JobOfferView","jobOfferId","classes","jobOffer","setJobOffer","params","getJobOffer","id","undefined","requestOptions","method","headers","Headers","fetch","then","response","json","data","position","availableJobs","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APIURL, { ClientURL } from '../../Services/Globals'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { authHeader } from '../../Services/AuthService'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    detailsConteiner: {\r\n        background: theme.palette.grey[800],\r\n        color: theme.palette.text.primary,\r\n    },\r\n    gridConteiner: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: `1fr 1fr`,\r\n        gridTemplateRows: \"1fr \",\r\n        justifyContent: \"space-evenly\",\r\n        gridGap: '8px',\r\n        alignContent: \"center\",\r\n        marginTop: \"5px\",\r\n        '& p': {\r\n            margin: \"5px\",\r\n            display: 'inline',\r\n            fontSize: \"17px\"\r\n        },\r\n        '& h3': {\r\n            margin: \"5px\",\r\n            display: 'inline',\r\n\r\n        }\r\n    },\r\n    description: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    JobApplicationLink: {\r\n        padding: \"6px\",\r\n        margin: \"5px\",\r\n        backgroundColor: theme.palette.grey[200],\r\n        borderRadius: '4px',\r\n        boxShadow: theme.shadows[3],\r\n        \"& a\": {\r\n            textDecoration: \"none\",\r\n            fontWeight: \"bold\",\r\n            fontSize: '15px'\r\n        }\r\n    }\r\n}));\r\n\r\nconst JobOfferView = (jobOfferId) => {\r\n    const classes = useStyles();\r\n    const [jobOffer, setJobOffer] = useState({});\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        getJobOffer(params.id === undefined ? jobOfferId.jobOfferId : params.id);\r\n    })\r\n\r\n    const getJobOffer = async (id) => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() })\r\n        };\r\n        await fetch(APIURL + `jobOffers/` + id,\r\n            requestOptions\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => setJobOffer(data));\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classes.detailsConteiner}>\r\n                {jobOffer.position === undefined ? null :\r\n                    <React.Fragment>\r\n                        <div className={classes.gridConteiner}>\r\n                            <div  >\r\n                                <h3>Available Jobs: </h3>\r\n                                <p>{jobOffer.availableJobs}</p>\r\n                            </div>\r\n                            <div  >\r\n                                <h3>Position: </h3>\r\n                                <p>{jobOffer.position.name}</p>\r\n                            </div>\r\n                            <div className={classes.description}>\r\n                                <h3>Description: </h3>\r\n                                <p>{jobOffer.description}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.JobApplicationLink}>\r\n                            <a href={ClientURL + 'submit-application/' + jobOffer.id}>\r\n                                {ClientURL + 'submit-application/' + jobOffer.id}\r\n                            </a>\r\n                        </div>\r\n                    </React.Fragment>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default JobOfferView"]},"metadata":{},"sourceType":"module"}