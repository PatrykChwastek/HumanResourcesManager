{"ast":null,"code":"import APIURL from './Globals';\nimport { authHeader } from './AuthService';\nexport const getTasks = async (page, size, employeeid, taskName, status, bStartTime, aStartTime, bDeadline, aDeadline) => {\n  let getTasksUrl = \"tasks?page=\".concat(page, \"&size=\").concat(size, \"&employeeid=\").concat(employeeid);\n\n  if (taskName !== undefined) {\n    if (taskName !== '') getTasksUrl += \"&name=\".concat(taskName);\n  }\n\n  if (status !== undefined) {\n    getTasksUrl += \"&status=\".concat(status);\n  }\n\n  if (bStartTime !== undefined) {\n    getTasksUrl += \"&b_start_time=\".concat(bStartTime);\n  }\n\n  ;\n\n  if (aStartTime !== undefined) {\n    getTasksUrl += \"&a_start_time=\".concat(aStartTime);\n  }\n\n  ;\n\n  if (bDeadline !== undefined) {\n    getTasksUrl += \"&b_deadline=\".concat(bDeadline);\n  }\n\n  ;\n\n  if (aDeadline !== undefined) {\n    getTasksUrl += \"&a_deadline=\".concat(aDeadline);\n  }\n\n  ;\n  const requestOptions = {\n    method: 'Get',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': authHeader()\n    })\n  };\n  return await fetch(APIURL + getTasksUrl, requestOptions).then(response => {\n    if (response.ok) {\n      return response.json();\n      console.log('rr');\n    } else {\n      console.log(\"eee\");\n      return Promise.reject();\n    }\n  }).then(data => {\n    return data;\n  });\n};\nexport const getTeamTasks = async (page, size, teamid, taskName, status, bStartTime, aStartTime, bDeadline, aDeadline) => {\n  let getTasksUrl = \"tasks/byteam?page=\".concat(page, \"&size=\").concat(size, \"&teamId=\").concat(teamid);\n\n  if (taskName !== undefined) {\n    if (taskName !== '') getTasksUrl += \"&name=\".concat(taskName);\n  }\n\n  if (status !== undefined) {\n    getTasksUrl += \"&status=\".concat(status);\n  }\n\n  if (bStartTime !== undefined) {\n    getTasksUrl += \"&b_start_time=\".concat(bStartTime);\n  }\n\n  ;\n\n  if (aStartTime !== undefined) {\n    getTasksUrl += \"&a_start_time=\".concat(aStartTime);\n  }\n\n  ;\n\n  if (bDeadline !== undefined) {\n    getTasksUrl += \"&b_deadline=\".concat(bDeadline);\n  }\n\n  ;\n\n  if (aDeadline !== undefined) {\n    getTasksUrl += \"&a_deadline=\".concat(aDeadline);\n  }\n\n  ;\n  const requestOptions = {\n    method: 'Get',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': authHeader()\n    })\n  };\n  return await fetch(APIURL + getTasksUrl, requestOptions).then(response => {\n    if (response.ok) return response.json();else return Promise.reject();\n  }).then(data => {\n    return data;\n  });\n};\nexport const changeTaskStatus = async (taskID, status) => {\n  const requestOptions = {\n    method: 'Put',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': authHeader()\n    })\n  };\n  return await fetch(APIURL + \"tasks?id=\".concat(taskID, \"&status=\").concat(status), requestOptions).then(response => {\n    if (response.ok) return response.json();else return Promise.reject();\n  }).then(data => {\n    return data;\n  });\n};\nexport const getUserTasksStats = async employeeID => {\n  const requestOptions = {\n    method: 'Get',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': authHeader()\n    })\n  };\n  return await fetch(APIURL + \"tasks/stats?employeeid=\".concat(employeeID), requestOptions).then(response => {\n    if (response.ok) return response.json();else return Promise.reject();\n  }).then(data => {\n    return data;\n  });\n}; // eslint-disable-next-line\n\nexport default {\n  getTasks,\n  getTeamTasks,\n  changeTaskStatus,\n  getUserTasksStats\n};","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Services/TasksService.js"],"names":["APIURL","authHeader","getTasks","page","size","employeeid","taskName","status","bStartTime","aStartTime","bDeadline","aDeadline","getTasksUrl","undefined","requestOptions","method","headers","Headers","fetch","then","response","ok","json","console","log","Promise","reject","data","getTeamTasks","teamid","changeTaskStatus","taskID","getUserTasksStats","employeeID"],"mappings":"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","sourcesContent":["import APIURL from './Globals'\r\nimport { authHeader } from './AuthService'\r\n\r\nexport const getTasks = async (page, size, employeeid, taskName, status, bStartTime, aStartTime, bDeadline, aDeadline) => {\r\n    let getTasksUrl = `tasks?page=${page}&size=${size}&employeeid=${employeeid}`;\r\n\r\n    if (taskName !== undefined) {\r\n        if (taskName !== '')\r\n            getTasksUrl += `&name=${taskName}`\r\n    }\r\n\r\n    if (status !== undefined) {\r\n        getTasksUrl += `&status=${status}`\r\n    }\r\n\r\n    if (bStartTime !== undefined) {\r\n        getTasksUrl += `&b_start_time=${bStartTime}`\r\n    };\r\n\r\n    if (aStartTime !== undefined) {\r\n        getTasksUrl += `&a_start_time=${aStartTime}`\r\n    };\r\n\r\n    if (bDeadline !== undefined) {\r\n        getTasksUrl += `&b_deadline=${bDeadline}`\r\n    };\r\n\r\n    if (aDeadline !== undefined) {\r\n        getTasksUrl += `&a_deadline=${aDeadline}`\r\n    };\r\n\r\n    const requestOptions = {\r\n        method: 'Get',\r\n        headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() })\r\n    };\r\n\r\n    return await fetch(APIURL + getTasksUrl,\r\n        requestOptions\r\n    ).then((response) => {\r\n        if (response.ok) { return response.json(); console.log('rr'); }\r\n\r\n        else {\r\n            console.log(\"eee\");\r\n            return Promise.reject();\r\n        }\r\n    })\r\n        .then(data => {\r\n            return data\r\n        })\r\n}\r\n\r\nexport const getTeamTasks = async (page, size, teamid, taskName, status, bStartTime, aStartTime, bDeadline, aDeadline) => {\r\n    let getTasksUrl = `tasks/byteam?page=${page}&size=${size}&teamId=${teamid}`;\r\n\r\n    if (taskName !== undefined) {\r\n        if (taskName !== '')\r\n            getTasksUrl += `&name=${taskName}`\r\n    }\r\n\r\n    if (status !== undefined) {\r\n        getTasksUrl += `&status=${status}`\r\n    }\r\n\r\n    if (bStartTime !== undefined) {\r\n        getTasksUrl += `&b_start_time=${bStartTime}`\r\n    };\r\n\r\n    if (aStartTime !== undefined) {\r\n        getTasksUrl += `&a_start_time=${aStartTime}`\r\n    };\r\n\r\n    if (bDeadline !== undefined) {\r\n        getTasksUrl += `&b_deadline=${bDeadline}`\r\n    };\r\n\r\n    if (aDeadline !== undefined) {\r\n        getTasksUrl += `&a_deadline=${aDeadline}`\r\n    };\r\n\r\n    const requestOptions = {\r\n        method: 'Get',\r\n        headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() })\r\n    };\r\n\r\n    return await fetch(APIURL + getTasksUrl,\r\n        requestOptions\r\n    ).then((response) => {\r\n        if (response.ok)\r\n            return response.json();\r\n        else\r\n            return Promise.reject();\r\n    })\r\n        .then(data => {\r\n            return data\r\n        })\r\n}\r\n\r\nexport const changeTaskStatus = async (taskID, status) => {\r\n    const requestOptions = {\r\n        method: 'Put',\r\n        headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() })\r\n    };\r\n    return await fetch(APIURL +\r\n        `tasks?id=${taskID}&status=${status}`,\r\n        requestOptions\r\n    ).then((response) => {\r\n        if (response.ok)\r\n            return response.json();\r\n        else\r\n            return Promise.reject();\r\n    })\r\n        .then(data => {\r\n            return data\r\n        })\r\n}\r\n\r\nexport const getUserTasksStats = async (employeeID) => {\r\n    const requestOptions = {\r\n        method: 'Get',\r\n        headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() })\r\n    };\r\n    return await fetch(APIURL +\r\n        `tasks/stats?employeeid=${employeeID}`,\r\n        requestOptions\r\n    ).then((response) => {\r\n        if (response.ok)\r\n            return response.json();\r\n        else\r\n            return Promise.reject();\r\n    })\r\n        .then(data => {\r\n            return data\r\n        })\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    getTasks,\r\n    getTeamTasks,\r\n    changeTaskStatus,\r\n    getUserTasksStats\r\n};"]},"metadata":{},"sourceType":"module"}