{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\Teams\\\\TeamManager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport APIURL from '../../Services/Globals';\nimport { getCurrentUser } from '../../Services/AuthService';\nimport { Link } from \"react-router-dom\";\nimport { getTasks } from \"../../Services/TasksService\";\nimport { StatBar } from \"../GlobalComponents\";\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Typography from '@material-ui/core/Typography';\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white\n  },\n  body: {\n    backgroundColor: theme.palette.grey[400],\n    color: \"black\"\n  }\n}))(TableCell);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '1rem',\n    width: '100%'\n  },\n  container: {\n    maxHeight: 550\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '2px 6px 2px',\n    marginBottom: '5px',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2],\n    width: '100%'\n  },\n  button: {\n    background: theme.palette.grey[300],\n    padding: \".4rem\",\n    \"margin-left\": \".2rem\",\n    \"margin-right\": \".2rem\",\n    color: theme.palette.grey[800]\n  },\n  whiteText: {\n    color: \"white\",\n    marginLeft: \"0px\",\n    marginRight: \"8px\"\n  },\n  currentTask: {\n    borderRadius: '4px',\n    backgroundColor: \"green\",\n    color: \"white\",\n    boxShadow: theme.shadows[2]\n  },\n  noTask: {\n    borderRadius: '4px',\n    backgroundColor: \"#bd0000\",\n    color: \"white\",\n    boxShadow: theme.shadows[2]\n  }\n}));\nconst leaderID = getCurrentUser().userDetails.employeeDTO.id;\n\nconst TeamManager = () => {\n  _s();\n\n  const classes = useStyles();\n  const [team, setTeam] = useState({});\n  const [tasksStats, setTasksStats] = useState({});\n  const [currentTasks, setCurrentTasks] = useState([]);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    const requestOptions = {\n      method: 'Get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(APIURL + `teams/leader/${leaderID}`, requestOptions).then(response => response.json()).then(data => (setTeam(data), getTasksStats(data.id), data.members.map(member => {\n      getTasks(1, 1, member.id, undefined, \"In-Progress\").then(data => {\n        setCurrentTasks(old => [...old, data.items[0]]);\n      });\n    })));\n  };\n\n  const getTasksStats = teamId => {\n    const requestOptions = {\n      method: 'Get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(APIURL + `tasks/stats?teamid=${teamId}`, requestOptions).then(response => response.json()).then(data => setTasksStats(data));\n  };\n\n  const currentTaskBar = memberId => {\n    let boxStyle = classes.currentTask;\n    let text = loadCurrrentTask(memberId);\n\n    if (text === undefined) {\n      boxStyle = classes.noTask;\n      text = \"No Task Assigned\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      className: boxStyle,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  };\n\n  const loadCurrrentTask = id => {\n    let currTask;\n    currentTasks.map(task => {\n      if (task !== undefined) {\n        if (task.assignedEmployeeId === id) {\n          currTask = task.name;\n        }\n      }\n    });\n    return currTask;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tasksStats === undefined ? null : /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Today Tasks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(StatBar, {\n        valueMax: 10,\n        valueCurrent: 2,\n        text: \"Requested\",\n        bcolor: \"rgb(231, 170, 35)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(StatBar, {\n        valueMax: 10,\n        valueCurrent: 2,\n        text: \"In-Progress\",\n        bcolor: \"rgb(56, 81, 216)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(StatBar, {\n        valueMax: 10,\n        valueCurrent: 2,\n        text: \"Completed\",\n        bcolor: \"rgb(0, 158, 7)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }, this), team.members === undefined ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 43\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: '\"' + team.name + '\"' + \" Team Members:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Surname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Remote Work\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Now Working On\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: team.members.map((employee, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: employee.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: employee.person.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: employee.person.surname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: employee.person.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: employee.position.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: employee.remoteWork === true ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 71\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: currentTasks.length !== team.members.length ? null : currentTaskBar(employee.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: {\n                    pathname: `/main/employee-details/${employee.id}`\n                  },\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    className: classes.button,\n                    size: \"small\",\n                    \"aria-label\": \"view\",\n                    children: /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 41\n              }, this)]\n            }, employee.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TeamManager, \"WMo3UxxpsbZWQsrRH3SFuFbTD5U=\", false, function () {\n  return [useStyles];\n});\n\n_c = TeamManager;\nexport default TeamManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamManager\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/Teams/TeamManager.js"],"names":["React","useEffect","useState","makeStyles","withStyles","APIURL","getCurrentUser","Link","getTasks","StatBar","Card","CardHeader","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Button","IconButton","VisibilityIcon","CloseIcon","CheckCircleIcon","Typography","StyledTableCell","theme","head","backgroundColor","palette","grey","color","common","white","body","useStyles","root","marginTop","width","container","maxHeight","title","text","primary","textAlign","padding","marginBottom","main","boxShadow","shadows","button","background","whiteText","marginLeft","marginRight","currentTask","borderRadius","noTask","leaderID","userDetails","employeeDTO","id","TeamManager","classes","team","setTeam","tasksStats","setTasksStats","currentTasks","setCurrentTasks","getData","requestOptions","method","headers","fetch","then","response","json","data","getTasksStats","members","map","member","undefined","old","items","teamId","currentTaskBar","memberId","boxStyle","loadCurrrentTask","currTask","task","assignedEmployeeId","name","employee","index","person","surname","email","position","remoteWork","length","pathname"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport APIURL from '../../Services/Globals';\r\nimport { getCurrentUser } from '../../Services/AuthService';\r\nimport { Link } from \"react-router-dom\";\r\nimport { getTasks } from \"../../Services/TasksService\";\r\nimport { StatBar } from \"../GlobalComponents\"\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        backgroundColor: theme.palette.grey[400],\r\n        color: \"black\",\r\n    },\r\n}))(TableCell)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: '1rem',\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 550,\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '2px 6px 2px',\r\n        marginBottom: '5px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        background: theme.palette.grey[300],\r\n        padding: \".4rem\",\r\n        \"margin-left\": \".2rem\",\r\n        \"margin-right\": \".2rem\",\r\n        color: theme.palette.grey[800],\r\n    },\r\n    whiteText: {\r\n        color: \"white\",\r\n        marginLeft: \"0px\",\r\n        marginRight: \"8px\",\r\n    },\r\n    currentTask: {\r\n        borderRadius: '4px',\r\n        backgroundColor: \"green\",\r\n        color: \"white\",\r\n        boxShadow: theme.shadows[2],\r\n    },\r\n    noTask: {\r\n        borderRadius: '4px',\r\n        backgroundColor: \"#bd0000\",\r\n        color: \"white\",\r\n        boxShadow: theme.shadows[2],\r\n    }\r\n}));\r\nconst leaderID = getCurrentUser().userDetails.employeeDTO.id;\r\nconst TeamManager = () => {\r\n    const classes = useStyles();\r\n\r\n    const [team, setTeam] = useState({});\r\n    const [tasksStats, setTasksStats] = useState({});\r\n    const [currentTasks, setCurrentTasks] = useState([]);\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        fetch(APIURL + `teams/leader/${leaderID}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => (\r\n                setTeam(data),\r\n                getTasksStats(data.id),\r\n                data.members.map((member) => {\r\n                    getTasks(1, 1, member.id, undefined, \"In-Progress\").then((data) => {\r\n                        setCurrentTasks(old => [\r\n                            ...old, data.items[0]\r\n                        ])\r\n                    })\r\n                })\r\n            ));\r\n    }\r\n\r\n    const getTasksStats = (teamId) => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        fetch(APIURL + `tasks/stats?teamid=${teamId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => (setTasksStats(data)));\r\n\r\n    }\r\n\r\n    const currentTaskBar = (memberId) => {\r\n        let boxStyle = classes.currentTask;\r\n        let text = loadCurrrentTask(memberId);\r\n        if (text === undefined) {\r\n            boxStyle = classes.noTask;\r\n            text = \"No Task Assigned\"\r\n        }\r\n        return (\r\n            <Typography variant=\"body1\" className={boxStyle}>\r\n                {text}\r\n            </Typography>\r\n        );\r\n    }\r\n    const loadCurrrentTask = (id) => {\r\n        let currTask;\r\n        currentTasks.map(task => {\r\n            if (task !== undefined) {\r\n                if (task.assignedEmployeeId === id) {\r\n                    currTask = task.name;\r\n                }\r\n            }\r\n        });\r\n        return currTask;\r\n    }\r\n    return (\r\n        <div>\r\n            {tasksStats === undefined ? null :\r\n                <Card>\r\n                    <div className={classes.title}>\r\n                        <Typography variant=\"h6\">Today Tasks:</Typography>\r\n                    </div>\r\n                    <StatBar\r\n                        valueMax={10}\r\n                        valueCurrent={2}\r\n                        text=\"Requested\"\r\n                        bcolor='rgb(231, 170, 35)'\r\n                    />\r\n                    <StatBar\r\n                        valueMax={10}\r\n                        valueCurrent={2}\r\n                        text=\"In-Progress\"\r\n                        bcolor='rgb(56, 81, 216)'\r\n                    />\r\n                    <StatBar\r\n                        valueMax={10}\r\n                        valueCurrent={2}\r\n                        text=\"Completed\"\r\n                        bcolor='rgb(0, 158, 7)'\r\n                    />\r\n                </Card>\r\n            }\r\n            {team.members === undefined ? <div></div> :\r\n                <Card className={classes.root}>\r\n                    <CardHeader\r\n                        title={'\"' + team.name + '\"' + \" Team Members:\"}\r\n                    />\r\n\r\n                    <TableContainer className={classes.container}>\r\n                        <Table stickyHeader aria-label=\"sticky table\" >\r\n                            <TableHead>\r\n                                <TableRow >\r\n                                    <StyledTableCell align=\"center\">\r\n                                        #\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        ID\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Name\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Surname\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Email\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Position\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Remote Work\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">\r\n                                        Now Working On\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell>\r\n                                    </StyledTableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody >\r\n                                {team.members.map((employee, index) => (\r\n                                    <TableRow hover key={employee.id}>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {index + 1}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.id}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.person.name}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.person.surname}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.person.email}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.position.name}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            {employee.remoteWork === true ?\r\n                                                <CheckCircleIcon /> : <CloseIcon />}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n\r\n                                            {currentTasks.length !== team.members.length ? null :\r\n                                                currentTaskBar(employee.id)\r\n                                            }\r\n\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">\r\n                                            <Link to={{ pathname: `/main/employee-details/${employee.id}` }}>\r\n                                                <IconButton className={classes.button} size=\"small\" aria-label=\"view\">\r\n                                                    <VisibilityIcon />\r\n                                                </IconButton>\r\n                                            </Link>\r\n                                        </StyledTableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Card>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default TeamManager;"]},"metadata":{},"sourceType":"module"}