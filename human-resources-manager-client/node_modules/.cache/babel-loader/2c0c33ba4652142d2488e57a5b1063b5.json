{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\Employees\\\\HR_Manager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DarkTextField, ConfirmDialog } from '../GlobalComponents';\nimport APIURL from '../../Services/Globals';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Divider from '@material-ui/core/Divider';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nconst useStyles = makeStyles(theme => ({\n  mainConteiner: {\n    display: 'flex'\n  },\n  listComponent: {\n    margin: '8px',\n    width: '100%',\n    minHeight: '610px',\n    maxHeight: '610px',\n    paddingTop: 0,\n    backgroundColor: theme.palette.background.paper,\n    color: 'white',\n    boxShadow: theme.shadows[2],\n    borderRadius: '4px',\n    display: \"flex\",\n    flexDirection: 'column',\n    \"& span\": {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginRight: '4px'\n    }\n  },\n  title: {\n    color: theme.palette.text.primary,\n    padding: '6px 0',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2],\n    borderRadius: '3px 3px 0 0',\n    width: '100%'\n  },\n  inputBox: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '98%',\n    paddingRight: '8px',\n    \"& .MuiFormControl-root\": {\n      width: '100%'\n    }\n  }\n}));\n\nconst HR_Manager = () => {\n  _s();\n\n  const classes = useStyles();\n  const [positions, setPositions] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [toEdit, setToEdit] = useState({\n    id: 0,\n    text: '',\n    element: ''\n  });\n  const [delDialogProps, setDelDialogProps] = useState({\n    open: false,\n    id: 0,\n    item: {\n      name: ''\n    },\n    itemType: ''\n  });\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    const requestOptions = {\n      method: 'Get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    await fetch(APIURL + `departments`, requestOptions).then(response => response.json()).then(data => setDepartments(data));\n    await fetch(APIURL + `positions`, requestOptions).then(response => response.json()).then(data => setPositions(data));\n  };\n\n  const hendleEdit = () => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: toEdit.id,\n        name: toEdit.text\n      })\n    };\n\n    if (toEdit.element === \"department\") {\n      fetch(APIURL + `departments/${toEdit.id}`, requestOptions).then(data => {\n        setToEdit({ ...toEdit,\n          id: 0\n        });\n        getData();\n      });\n    }\n  };\n\n  const hendleDelete = async () => {\n    const requestOptions = {\n      method: 'Delete',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    if (delDialogProps.itemType === 'Department') {\n      await fetch(APIURL + `departments/${delDialogProps.item.id}`, requestOptions).then(data => getData());\n      return;\n    }\n\n    await fetch(APIURL + `positions/${delDialogProps.item.id}`, requestOptions).then(data => getData());\n  };\n\n  const delDialogOpen = () => {\n    setDelDialogProps({ ...delDialogProps,\n      open: !delDialogProps.open\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainConteiner,\n    children: [/*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      title: delDialogProps.item.name + \" \" + delDialogProps.itemType,\n      open: delDialogProps.open,\n      setOpen: delDialogOpen,\n      onConfirm: hendleDelete,\n      children: 'Are you sure you want to delete ' + delDialogProps.itemType.toLowerCase() + '?'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      component: \"nav\",\n      className: classes.listComponent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginLeft: '16px'\n          },\n          children: \"Departments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputBox,\n        children: [/*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"New Department\",\n          name: \"positionTF\",\n          onChange: () => console.log('n')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginLeft: '15px'\n          },\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => console.log(),\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"inset\",\n        style: {\n          width: \"100%\",\n          margin: \"0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), departments.length <= 0 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflow: 'auto'\n        },\n        children: departments.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body1\",\n                  color: \"textPrimary\",\n                  children: 'ID: '\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body1\",\n                  color: \"textSecondary\",\n                  children: item.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    marginLeft: '18px'\n                  },\n                  component: \"span\",\n                  variant: \"body1\",\n                  color: \"textPrimary\",\n                  children: 'Name: '\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 49\n                }, this), toEdit.id === item.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.inputBox,\n                  children: [/*#__PURE__*/_jsxDEV(DarkTextField, {\n                    label: \"Department Name\",\n                    name: \"positionTF\",\n                    defaultValue: item.name,\n                    onChange: e => setToEdit({ ...toEdit,\n                      text: e.target.value,\n                      element: 'department'\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      marginLeft: '4px'\n                    },\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: hendleEdit,\n                    children: \"edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body1\",\n                  color: \"textSecondary\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: [toEdit.id === item.id ? null : /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => setToEdit({ ...toEdit,\n                  id: item.id\n                }),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => setDelDialogProps({\n                  itemType: 'Department',\n                  item: item,\n                  open: true\n                }),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            style: {\n              width: \"100%\",\n              margin: \"0\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 33\n          }, this)]\n        }, \"position\" + item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      component: \"nav\",\n      className: classes.listComponent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginLeft: '16px'\n          },\n          children: \"Positions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputBox,\n        children: [/*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"New Position\",\n          name: \"positionTF\",\n          onChange: () => console.log('n')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginLeft: '15px'\n          },\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => console.log(),\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"inset\",\n        style: {\n          width: \"100%\",\n          margin: \"0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), positions.length <= 0 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflow: 'auto'\n        },\n        children: positions.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body1\",\n                  color: \"textPrimary\",\n                  children: 'ID: '\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body1\",\n                  color: \"textSecondary\",\n                  children: item.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    marginLeft: '18px'\n                  },\n                  component: \"span\",\n                  variant: \"body1\",\n                  color: \"textPrimary\",\n                  children: 'Name: '\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body1\",\n                  color: \"textSecondary\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => console.log('edit'),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => setDelDialogProps({\n                  itemType: 'Position',\n                  item: item,\n                  open: true\n                }),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            style: {\n              width: \"100%\",\n              margin: \"0\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 33\n          }, this)]\n        }, \"position\" + item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HR_Manager, \"q+rwPlXtiMM/Ctt9c/J2nyrNDMY=\", false, function () {\n  return [useStyles];\n});\n\n_c = HR_Manager;\nexport default HR_Manager;\n\nvar _c;\n\n$RefreshReg$(_c, \"HR_Manager\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/Employees/HR_Manager.js"],"names":["React","useEffect","useState","makeStyles","DarkTextField","ConfirmDialog","APIURL","Typography","Button","IconButton","AddCircleIcon","List","ListItem","ListItemText","ListItemSecondaryAction","Divider","DeleteIcon","EditIcon","useStyles","theme","mainConteiner","display","listComponent","margin","width","minHeight","maxHeight","paddingTop","backgroundColor","palette","background","paper","color","boxShadow","shadows","borderRadius","flexDirection","alignItems","marginRight","title","text","primary","padding","main","inputBox","paddingRight","HR_Manager","classes","positions","setPositions","departments","setDepartments","toEdit","setToEdit","id","element","delDialogProps","setDelDialogProps","open","item","name","itemType","getData","requestOptions","method","headers","fetch","then","response","json","data","hendleEdit","body","JSON","stringify","hendleDelete","delDialogOpen","toLowerCase","marginLeft","console","log","length","overflow","map","index","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DarkTextField, ConfirmDialog } from '../GlobalComponents';\r\nimport APIURL from '../../Services/Globals';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainConteiner: {\r\n        display: 'flex',\r\n    },\r\n    listComponent: {\r\n        margin: '8px',\r\n        width: '100%',\r\n        minHeight: '610px',\r\n        maxHeight: '610px',\r\n        paddingTop: 0,\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: 'white',\r\n        boxShadow: theme.shadows[2],\r\n        borderRadius: '4px',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        \"& span\": {\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            marginRight: '4px'\r\n        }\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        padding: '6px 0',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n        borderRadius: '3px 3px 0 0',\r\n        width: '100%',\r\n    },\r\n    inputBox: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '98%',\r\n        paddingRight: '8px',\r\n        \"& .MuiFormControl-root\": { width: '100%' }\r\n    }\r\n}));\r\n\r\nconst HR_Manager = () => {\r\n    const classes = useStyles();\r\n    const [positions, setPositions] = useState([]);\r\n    const [departments, setDepartments] = useState([]);\r\n    const [toEdit, setToEdit] = useState({ id: 0, text: '', element: '' });\r\n    const [delDialogProps, setDelDialogProps] = useState({\r\n        open: false,\r\n        id: 0,\r\n        item: { name: '' },\r\n        itemType: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    const getData = async () => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        await fetch(APIURL + `departments`,\r\n            requestOptions\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => setDepartments(data));\r\n\r\n        await fetch(APIURL + `positions`,\r\n            requestOptions\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => setPositions(data));\r\n    };\r\n\r\n    const hendleEdit = () => {\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id: toEdit.id, name: toEdit.text })\r\n        };\r\n\r\n        if (toEdit.element === \"department\") {\r\n            fetch(APIURL +\r\n                `departments/${toEdit.id}`,\r\n                requestOptions\r\n            ).then(data => {\r\n                setToEdit({ ...toEdit, id: 0 })\r\n                getData()\r\n            });\r\n        }\r\n    };\r\n\r\n    const hendleDelete = async () => {\r\n        const requestOptions = {\r\n            method: 'Delete',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n\r\n        if (delDialogProps.itemType === 'Department') {\r\n            await fetch(APIURL +\r\n                `departments/${delDialogProps.item.id}`,\r\n                requestOptions\r\n            ).then(data => getData());\r\n            return;\r\n        }\r\n        await fetch(APIURL +\r\n            `positions/${delDialogProps.item.id}`,\r\n            requestOptions\r\n        ).then(data => getData());\r\n    };\r\n\r\n    const delDialogOpen = () => {\r\n        setDelDialogProps({ ...delDialogProps, open: !delDialogProps.open })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.mainConteiner}>\r\n            <ConfirmDialog\r\n                title={delDialogProps.item.name + \" \" + delDialogProps.itemType}\r\n                open={delDialogProps.open}\r\n                setOpen={delDialogOpen}\r\n                onConfirm={hendleDelete}\r\n            >\r\n                {'Are you sure you want to delete ' + delDialogProps.itemType.toLowerCase() + '?'}\r\n            </ConfirmDialog>\r\n            <List component=\"nav\" className={classes.listComponent}>\r\n                <div className={classes.title}>\r\n                    <Typography variant=\"h6\" style={{ marginLeft: '16px' }}>\r\n                        Departments:\r\n                    </Typography>\r\n\r\n                </div>\r\n                <div className={classes.inputBox}>\r\n                    <DarkTextField\r\n                        label=\"New Department\"\r\n                        name=\"positionTF\"\r\n                        onChange={() => console.log('n')}\r\n                    />\r\n                    <Button\r\n                        style={{ marginLeft: '15px' }}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => console.log()}\r\n                    >Create</Button>\r\n                </div>\r\n                <Divider variant=\"inset\" style={{ width: \"100%\", margin: \"0\" }} />\r\n                {departments.length <= 0 ? null :\r\n                    <div style={{ overflow: 'auto', }}>\r\n                        {departments.map((item, index) => (\r\n                            <div key={\"position\" + item.id}>\r\n                                <ListItem>\r\n                                    <ListItemText\r\n                                        primary={\r\n                                            <React.Fragment>\r\n                                                <Typography\r\n                                                    component=\"span\"\r\n                                                    variant=\"body1\"\r\n                                                    color=\"textPrimary\"\r\n                                                >\r\n                                                    {'ID: '}\r\n                                                </Typography>\r\n                                                <Typography\r\n                                                    component=\"span\"\r\n                                                    variant=\"body1\"\r\n                                                    color=\"textSecondary\"\r\n                                                >\r\n                                                    {item.id}\r\n                                                </Typography>\r\n\r\n                                                <Typography style={{ marginLeft: '18px' }}\r\n                                                    component=\"span\"\r\n                                                    variant=\"body1\"\r\n                                                    color=\"textPrimary\"\r\n                                                >\r\n                                                    {'Name: '}\r\n                                                </Typography>\r\n                                                {toEdit.id === item.id ?\r\n                                                    <div className={classes.inputBox}>\r\n                                                        <DarkTextField\r\n                                                            label=\"Department Name\"\r\n                                                            name=\"positionTF\"\r\n                                                            defaultValue={item.name}\r\n                                                            onChange={(e) => setToEdit({\r\n                                                                ...toEdit,\r\n                                                                text: e.target.value,\r\n                                                                element: 'department'\r\n                                                            })}\r\n                                                        />\r\n                                                        <Button\r\n                                                            style={{ marginLeft: '4px' }}\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            onClick={hendleEdit}\r\n                                                        >edit</Button>\r\n                                                    </div> :\r\n                                                    <Typography\r\n                                                        component=\"span\"\r\n                                                        variant=\"body1\"\r\n                                                        color=\"textSecondary\"\r\n                                                    >\r\n                                                        {item.name}\r\n                                                    </Typography>\r\n                                                }\r\n                                            </React.Fragment>}\r\n                                    />\r\n                                    <ListItemSecondaryAction>\r\n                                        {toEdit.id === item.id ? null :\r\n                                            <IconButton edge=\"end\" onClick={() => setToEdit({ ...toEdit, id: item.id })}>\r\n                                                <EditIcon />\r\n                                            </IconButton>\r\n                                        }\r\n\r\n                                        <IconButton edge=\"end\" onClick={() => setDelDialogProps({\r\n                                            itemType: 'Department',\r\n                                            item: item,\r\n                                            open: true\r\n                                        })}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" style={{ width: \"100%\", margin: \"0\" }} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                }\r\n            </List>\r\n            <List component=\"nav\" className={classes.listComponent}>\r\n                <div className={classes.title}>\r\n                    <Typography variant=\"h6\" style={{ marginLeft: '16px' }}>\r\n                        Positions:\r\n                    </Typography>\r\n\r\n                </div>\r\n                <div className={classes.inputBox}>\r\n                    <DarkTextField\r\n                        label=\"New Position\"\r\n                        name=\"positionTF\"\r\n                        onChange={() => console.log('n')}\r\n                    />\r\n                    <Button\r\n                        style={{ marginLeft: '15px' }}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => console.log()}\r\n                    >Create</Button>\r\n                </div>\r\n                <Divider variant=\"inset\" style={{ width: \"100%\", margin: \"0\" }} />\r\n                {positions.length <= 0 ? null :\r\n                    <div style={{ overflow: 'auto', }}>\r\n                        {positions.map((item, index) => (\r\n                            <div key={\"position\" + item.id}>\r\n                                <ListItem>\r\n                                    <ListItemText\r\n                                        primary={\r\n                                            <React.Fragment>\r\n                                                <Typography\r\n                                                    component=\"span\"\r\n                                                    variant=\"body1\"\r\n                                                    color=\"textPrimary\"\r\n                                                >\r\n                                                    {'ID: '}\r\n                                                </Typography>\r\n                                                <Typography\r\n                                                    component=\"span\"\r\n                                                    variant=\"body1\"\r\n                                                    color=\"textSecondary\"\r\n                                                >\r\n                                                    {item.id}\r\n                                                </Typography>\r\n\r\n                                                <Typography style={{ marginLeft: '18px' }}\r\n                                                    component=\"span\"\r\n                                                    variant=\"body1\"\r\n                                                    color=\"textPrimary\"\r\n                                                >\r\n                                                    {'Name: '}\r\n                                                </Typography>\r\n                                                <Typography\r\n                                                    component=\"span\"\r\n                                                    variant=\"body1\"\r\n                                                    color=\"textSecondary\"\r\n                                                >\r\n                                                    {item.name}\r\n                                                </Typography>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    />\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" onClick={() => console.log('edit')}>\r\n                                            <EditIcon />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" onClick={() => setDelDialogProps({\r\n                                            itemType: 'Position',\r\n                                            item: item,\r\n                                            open: true\r\n                                        })}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" style={{ width: \"100%\", margin: \"0\" }} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                }\r\n            </List>\r\n        </div>\r\n    )\r\n};\r\nexport default HR_Manager;"]},"metadata":{},"sourceType":"module"}