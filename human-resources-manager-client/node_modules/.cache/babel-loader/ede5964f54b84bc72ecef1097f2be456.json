{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\JobOffers\\\\JobOffersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport APIURL from '../../Services/Globals';\nimport { authHeader } from '../../Services/AuthService';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { DarkTextField, DarkSelect, ConfirmDialog } from '../GlobalComponents';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Divider from '@material-ui/core/Divider';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  filterBox: {\n    padding: \".1rem\",\n    paddingLeft: \"1.1rem\",\n    paddingRight: \"1.1rem\",\n    borderRadius: '4px',\n    marginLeft: '8px',\n    width: \"max-content\",\n    background: theme.palette.grey[800],\n    boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\"\n  },\n  whiteText: {\n    color: \"white\",\n    margin: \"0px\",\n    marginRight: \"8px\"\n  },\n  offersContainer: {\n    margin: '0 auto',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  listComponent: {\n    margin: '8px',\n    width: '100%',\n    minHeight: '700px',\n    maxHeight: '700px',\n    paddingTop: 0,\n    backgroundColor: theme.palette.background.paper,\n    color: 'white',\n    boxShadow: theme.shadows[2],\n    borderRadius: '4px',\n    display: \"flex\",\n    flexDirection: 'column'\n  },\n  pagination: {\n    display: 'grid',\n    padding: '8px',\n    marginTop: 'auto',\n    \"& .Mui-selected\": {\n      color: 'white',\n      backgroundColor: 'rgb(63 81 181 / 80%)'\n    },\n    \"& .MuiPaginationItem-outlined\": {\n      boxShadow: theme.shadows[2],\n      border: '1px solid rgb(149 149 149 / 23%)'\n    }\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '6px 0',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2],\n    borderRadius: '3px 3px 0 0',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  linkButton: {\n    marginRight: '10px',\n    marginLeft: 'auto',\n    textDecoration: \"none\",\n    color: \"white\"\n  },\n  menuItem: {\n    textDecoration: \"none\",\n    color: \"white\",\n    \"& .MuiListItemIcon-root\": {\n      minWidth: '32px'\n    }\n  }\n}));\nconst searchMode = [{\n  id: 'all',\n  name: 'Show All'\n}, {\n  id: 'teamName',\n  name: 'Team Name'\n}, {\n  id: 'leaderName',\n  name: 'Team Leader Name'\n}, {\n  id: 'memberName',\n  name: 'Member Name'\n}];\n\nconst JobOffersList = () => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [jobOffers, setJobOffers] = useState([]);\n  const [jobApplications, setJobApplications] = useState([]);\n  const [searchParams, setSearchParams] = useState({\n    offers: {\n      name: '',\n      position: 0\n    },\n    applications: {\n      searchBy: searchMode[0].id,\n      search: ''\n    }\n  });\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    size: 9,\n    totalPages: 1\n  });\n  const [allertProps, setAllertProps] = useState({\n    text: '',\n    open: false,\n    type: 'success'\n  });\n  const [delDialogProps, setDelDialogProps] = useState({\n    open: false,\n    data: null,\n    type: '',\n    title: '',\n    text: ''\n  });\n  useEffect(() => {\n    getJobOffers();\n  }, []);\n\n  const getJobOffers = async selected => {\n    const requestOptions = {\n      method: 'Get',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': authHeader()\n      })\n    };\n    await fetch(APIURL + 'jobOffers' + \"?name=\".concat(searchParams.offers.name) + \"&position=\".concat(searchParams.offers.position), requestOptions).then(response => response.json()).then(data => {\n      if (selected !== undefined) {\n        setSelectedIndex(selected);\n      }\n\n      setJobOffers(data);\n      getJobApplications(pagination.page, pagination.size, data[selectedIndex].id);\n    });\n  };\n\n  const getJobApplications = async (page, size, offerId) => {\n    const requestOptions = {\n      method: 'Get',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': authHeader()\n      })\n    };\n    let requestUrl = \"jobApplications?page=\".concat(page, \"&size=\").concat(size, \"&jobOffer=\").concat(offerId);\n    await fetch(APIURL + requestUrl, requestOptions).then(response => response.json()).then(data => {\n      setPagination({\n        page: page,\n        size: size,\n        totalPages: data.totalPages\n      });\n      setJobApplications(data.items);\n    });\n  };\n\n  const handleChangeSearchParams = e => {\n    if (e.target.name === 'searchBySel') {\n      return;\n    }\n  };\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n    getJobApplications(pagination.page, pagination.size, jobOffers[index]);\n  };\n\n  const handleSearchOffer = (event, index) => {};\n\n  const handlePageChange = (event, value) => {\n    getJobApplications(value, pagination.size, jobOffers[selectedIndex]);\n  };\n\n  const handleViewApplication = (event, value) => {};\n\n  const handleEditJobOffer = (event, value) => {};\n\n  const delDialogOpen = () => {\n    setDelDialogProps({ ...delDialogProps,\n      open: !delDialogProps.open\n    });\n  };\n\n  const onDialogConfirm = () => {\n    switch (delDialogProps.type) {\n      case 'offerRemove':\n        console.log(\"todo\");\n        break;\n\n      case 'applicationRemove':\n        console.log(\"todo\");\n        break;\n    }\n  };\n\n  const handleAllertClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setAllertProps({ ...allertProps,\n      open: false\n    });\n  };\n\n  const listSkeleton = () => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n        style: {\n          marginLeft: '15px'\n        },\n        width: \"95%\",\n        height: \"75px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        style: {\n          marginLeft: '15px'\n        },\n        width: \"95%\",\n        height: \"75px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        style: {\n          marginLeft: '15px'\n        },\n        width: \"95%\",\n        height: \"75px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        style: {\n          marginLeft: '15px'\n        },\n        width: \"95%\",\n        height: \"75px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        style: {\n          marginLeft: '15px'\n        },\n        width: \"95%\",\n        height: \"75px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        style: {\n          marginLeft: '15px'\n        },\n        width: \"95%\",\n        height: \"75px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this);\n  };\n\n  const jobApplicationsSkeleton = () => {\n    return /*#__PURE__*/_jsxDEV(List, {\n      component: \"nav\",\n      className: classes.listComponent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginLeft: '16px'\n          },\n          children: \"Job Applications:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: classes.linkButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), listSkeleton()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      title: delDialogProps.title,\n      open: delDialogProps.open,\n      setOpen: delDialogOpen,\n      onConfirm: onDialogConfirm,\n      children: delDialogProps.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: allertProps.open,\n      autoHideDuration: 4000,\n      onClose: handleAllertClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleAllertClose,\n        severity: allertProps.type,\n        children: allertProps.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.filterBox,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.whiteText,\n        children: \"Search Team: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkSelect, {\n        label: \"Search by:\",\n        name: \"searchBySel\",\n        collection: searchMode,\n        defaultValue: searchMode[0],\n        onChange: handleChangeSearchParams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n        onChange: handleChangeSearchParams,\n        disabled: searchParams.searchBy === 'all',\n        label: \"Search...\",\n        name: \"searchTF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginLeft: '15px'\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSearchOffer,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.offersContainer,\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        component: \"nav\",\n        className: classes.listComponent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            style: {\n              marginLeft: '16px'\n            },\n            children: \"Job Offers List:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: classes.linkButton,\n            to: \"/main/create-team\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"contained\",\n              color: \"secondary\",\n              endIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 42\n              }, this),\n              children: \"NEW Job Offer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), jobOffers.length === 0 ? listSkeleton() : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: jobOffers.map((jobOffer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              selected: selectedIndex === index,\n              onClick: event => handleListItemClick(event, index),\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: 'Name: ' + jobOffer.name,\n                secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"span\",\n                    variant: \"body2\",\n                    color: \"textPrimary\",\n                    children: 'Position: '\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 53\n                  }, this), jobOffer.position.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  marginRight: '15px'\n                },\n                children: 'Available Jobs: ' + jobOffer.availableJobs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: /*#__PURE__*/_jsxDEV(PopupState, {\n                  variant: \"popover\",\n                  popupId: \"team-menu\",\n                  children: popupState => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                      edge: \"end\",\n                      ...bindTrigger(popupState),\n                      children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 362,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Menu, { ...bindMenu(popupState),\n                      children: [/*#__PURE__*/_jsxDEV(Link, {\n                        style: {\n                          textDecoration: 'none'\n                        },\n                        to: {\n                          pathname: \"/main/create-team\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                          className: classes.menuItem,\n                          onClick: handleEditJobOffer,\n                          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                            children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                              fontSize: \"small\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 368,\n                              columnNumber: 73\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 367,\n                            columnNumber: 69\n                          }, this), \"Edit Job Offer\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 366,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 365,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        className: classes.menuItem,\n                        onClick: e => setDelDialogProps({\n                          open: true,\n                          data: jobOffer.id,\n                          type: 'offerRemove',\n                          title: \"Remove Job Offer : \".concat(jobOffer.name),\n                          text: 'Are you sure you want to remove this offer?'\n                        }),\n                        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                            fontSize: \"small\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 382,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 381,\n                          columnNumber: 65\n                        }, this), \"Delete Job Offer\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 373,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              variant: \"inset\",\n              style: {\n                width: \"100%\",\n                margin: \"0\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 37\n            }, this)]\n          }, jobOffer.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this), jobApplications.length === 0 ? jobApplicationsSkeleton() : /*#__PURE__*/_jsxDEV(List, {\n        component: \"nav\",\n        className: classes.listComponent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            style: {\n              marginLeft: '16px'\n            },\n            children: \"Job Applications:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 25\n        }, this), jobApplications.length <= 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginLeft: '12px'\n          },\n          children: \"No Applications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 56\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              overflow: 'auto'\n            },\n            children: jobApplications.map((jobApplication, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: jobApplication.person.name + \" \" + jobApplication.person.surname,\n                  secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"body2\",\n                      color: \"textPrimary\",\n                      children: 'Application Date: '\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 61\n                    }, this), jobApplication.applicationDate]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    marginRight: '9px',\n                    marginLeft: '5px',\n                    color: 'rgba(255, 255, 255, 0.7)'\n                  },\n                  children: jobApplication.person.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  children: /*#__PURE__*/_jsxDEV(PopupState, {\n                    variant: \"popover\",\n                    popupId: \"member-menu\",\n                    children: popupState => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                        edge: \"end\",\n                        ...bindTrigger(popupState),\n                        children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 433,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 432,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(Menu, { ...bindMenu(popupState),\n                        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                          className: classes.menuItem,\n                          onClick: () => handleViewApplication(jobApplication.id),\n                          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                            children: /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n                              fontSize: \"small\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 438,\n                              columnNumber: 77\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 437,\n                            columnNumber: 73\n                          }, this), \"Show Application\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 436,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          className: classes.menuItem,\n                          onClick: e => setDelDialogProps({\n                            open: true,\n                            data: jobApplication.id,\n                            type: 'applicationRemove',\n                            title: \"Remove Job Application: \".concat(jobApplication.person.name, \" \").concat(jobApplication.person.surname),\n                            text: 'Are you sure you want to remove this job application?'\n                          }),\n                          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                              fontSize: \"small\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 451,\n                              columnNumber: 77\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 450,\n                            columnNumber: 73\n                          }, this), \"Remove Application\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 442,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 435,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 431,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                variant: \"inset\",\n                style: {\n                  width: \"100%\",\n                  margin: \"0\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 45\n              }, this)]\n            }, \"member\" + jobApplication.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            className: classes.pagination,\n            count: pagination.totalPages,\n            page: pagination.page,\n            onChange: handlePageChange,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobOffersList, \"yHPo7QmDQfAPyepj8fjW0ZdRwAw=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c2 = JobOffersList;\nexport default JobOffersList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"JobOffersList\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/JobOffers/JobOffersList.js"],"names":["React","useEffect","useState","makeStyles","APIURL","authHeader","Link","useHistory","DarkTextField","DarkSelect","ConfirmDialog","Skeleton","Typography","Button","IconButton","AddCircleIcon","List","ListItem","ListItemText","ListItemSecondaryAction","Divider","Pagination","Toolbar","Menu","MenuItem","PopupState","bindTrigger","bindMenu","ListItemIcon","MoreVertIcon","DeleteIcon","EditIcon","VisibilityIcon","Snackbar","MuiAlert","Alert","props","useStyles","theme","filterBox","padding","paddingLeft","paddingRight","borderRadius","marginLeft","width","background","palette","grey","boxShadow","whiteText","color","margin","marginRight","offersContainer","display","flexDirection","justifyContent","listComponent","minHeight","maxHeight","paddingTop","backgroundColor","paper","shadows","pagination","marginTop","border","title","text","primary","textAlign","main","linkButton","textDecoration","menuItem","minWidth","searchMode","id","name","JobOffersList","classes","history","jobOffers","setJobOffers","jobApplications","setJobApplications","searchParams","setSearchParams","offers","position","applications","searchBy","search","selectedIndex","setSelectedIndex","setPagination","page","size","totalPages","allertProps","setAllertProps","open","type","delDialogProps","setDelDialogProps","data","getJobOffers","selected","requestOptions","method","headers","Headers","fetch","then","response","json","undefined","getJobApplications","offerId","requestUrl","items","handleChangeSearchParams","e","target","handleListItemClick","event","index","handleSearchOffer","handlePageChange","value","handleViewApplication","handleEditJobOffer","delDialogOpen","onDialogConfirm","console","log","handleAllertClose","reason","listSkeleton","jobApplicationsSkeleton","length","map","jobOffer","availableJobs","popupState","pathname","overflow","jobApplication","person","surname","applicationDate","email"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport APIURL from '../../Services/Globals';\r\nimport { authHeader } from '../../Services/AuthService'\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DarkTextField, DarkSelect, ConfirmDialog } from '../GlobalComponents';\r\n\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    filterBox: {\r\n        padding: \".1rem\",\r\n        paddingLeft: \"1.1rem\",\r\n        paddingRight: \"1.1rem\",\r\n        borderRadius: '4px',\r\n        marginLeft: '8px',\r\n        width: \"max-content\",\r\n        background: theme.palette.grey[800],\r\n        boxShadow:\r\n            \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n    },\r\n    whiteText: {\r\n        color: \"white\",\r\n        margin: \"0px\",\r\n        marginRight: \"8px\",\r\n    },\r\n    offersContainer: {\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center'\r\n    },\r\n    listComponent: {\r\n        margin: '8px',\r\n        width: '100%',\r\n        minHeight: '700px',\r\n        maxHeight: '700px',\r\n        paddingTop: 0,\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: 'white',\r\n        boxShadow: theme.shadows[2],\r\n        borderRadius: '4px',\r\n        display: \"flex\",\r\n        flexDirection: 'column'\r\n    },\r\n    pagination: {\r\n        display: 'grid',\r\n        padding: '8px',\r\n        marginTop: 'auto',\r\n        \"& .Mui-selected\": {\r\n            color: 'white',\r\n            backgroundColor: 'rgb(63 81 181 / 80%)',\r\n        },\r\n        \"& .MuiPaginationItem-outlined\": {\r\n            boxShadow: theme.shadows[2],\r\n            border: '1px solid rgb(149 149 149 / 23%)'\r\n        }\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '6px 0',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n        borderRadius: '3px 3px 0 0',\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    linkButton: {\r\n        marginRight: '10px',\r\n        marginLeft: 'auto',\r\n        textDecoration: \"none\",\r\n        color: \"white\",\r\n    },\r\n    menuItem: {\r\n        textDecoration: \"none\",\r\n        color: \"white\",\r\n        \"& .MuiListItemIcon-root\": {\r\n            minWidth: '32px'\r\n        }\r\n    }\r\n}));\r\n\r\nconst searchMode = [\r\n    { id: 'all', name: 'Show All' },\r\n    { id: 'teamName', name: 'Team Name' },\r\n    { id: 'leaderName', name: 'Team Leader Name' },\r\n    { id: 'memberName', name: 'Member Name' },]\r\n\r\n\r\nconst JobOffersList = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [jobOffers, setJobOffers] = useState([]);\r\n    const [jobApplications, setJobApplications] = useState([]);\r\n    const [searchParams, setSearchParams] = useState({\r\n        offers: {\r\n            name: '',\r\n            position: 0,\r\n        },\r\n        applications: {\r\n            searchBy: searchMode[0].id,\r\n            search: ''\r\n        }\r\n\r\n    });\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n    const [pagination, setPagination] = useState({\r\n        page: 1,\r\n        size: 9,\r\n        totalPages: 1\r\n    });\r\n    const [allertProps, setAllertProps] = useState({\r\n        text: '',\r\n        open: false,\r\n        type: 'success'\r\n    });\r\n    const [delDialogProps, setDelDialogProps] = useState({\r\n        open: false,\r\n        data: null,\r\n        type: '',\r\n        title: '',\r\n        text: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        getJobOffers()\r\n    }, []);\r\n\r\n    const getJobOffers = async (selected) => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() })\r\n        };\r\n\r\n        await fetch(APIURL + 'jobOffers' +\r\n            `?name=${searchParams.offers.name}` +\r\n            `&position=${searchParams.offers.position}`,\r\n            requestOptions)\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                if (selected !== undefined) {\r\n                    setSelectedIndex(selected);\r\n                }\r\n                setJobOffers(data);\r\n                getJobApplications(\r\n                    pagination.page,\r\n                    pagination.size,\r\n                    data[selectedIndex].id\r\n                )\r\n            });\r\n    }\r\n\r\n    const getJobApplications = async (page, size, offerId) => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': authHeader() })\r\n        };\r\n\r\n        let requestUrl = `jobApplications?page=${page}&size=${size}&jobOffer=${offerId}`;\r\n\r\n        await fetch(APIURL + requestUrl, requestOptions)\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                setPagination({\r\n                    page: page,\r\n                    size: size,\r\n                    totalPages: data.totalPages,\r\n                })\r\n                setJobApplications(data.items);\r\n            });\r\n    }\r\n\r\n    const handleChangeSearchParams = e => {\r\n        if (e.target.name === 'searchBySel') {\r\n            return;\r\n        }\r\n    };\r\n\r\n    const handleListItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n        getJobApplications(\r\n            pagination.page,\r\n            pagination.size,\r\n            jobOffers[index]\r\n        )\r\n    };\r\n\r\n    const handleSearchOffer = (event, index) => {\r\n\r\n    }\r\n\r\n    const handlePageChange = (event, value) => {\r\n        getJobApplications(value, pagination.size, jobOffers[selectedIndex]);\r\n    };\r\n\r\n    const handleViewApplication = (event, value) => {\r\n\r\n    }\r\n\r\n    const handleEditJobOffer = (event, value) => {\r\n\r\n    }\r\n\r\n    const delDialogOpen = () => {\r\n        setDelDialogProps({ ...delDialogProps, open: !delDialogProps.open })\r\n    }\r\n    const onDialogConfirm = () => {\r\n        switch (delDialogProps.type) {\r\n            case 'offerRemove':\r\n                console.log(\"todo\");\r\n                break;\r\n            case 'applicationRemove':\r\n                console.log(\"todo\");\r\n                break;\r\n        }\r\n    }\r\n    const handleAllertClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAllertProps({ ...allertProps, open: false });\r\n    };\r\n\r\n    const listSkeleton = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Skeleton style={{ marginLeft: '15px' }} width=\"95%\" height=\"75px\" />\r\n                <Skeleton style={{ marginLeft: '15px' }} width=\"95%\" height=\"75px\" />\r\n                <Skeleton style={{ marginLeft: '15px' }} width=\"95%\" height=\"75px\" />\r\n                <Skeleton style={{ marginLeft: '15px' }} width=\"95%\" height=\"75px\" />\r\n                <Skeleton style={{ marginLeft: '15px' }} width=\"95%\" height=\"75px\" />\r\n                <Skeleton style={{ marginLeft: '15px' }} width=\"95%\" height=\"75px\" />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const jobApplicationsSkeleton = () => {\r\n        return (\r\n            <List component=\"nav\" className={classes.listComponent}>\r\n                <div className={classes.title}>\r\n                    <Typography variant=\"h6\" style={{ marginLeft: '16px' }}>\r\n                        Job Applications:\r\n                    </Typography>\r\n                    <a className={classes.linkButton}></a>\r\n                </div>\r\n                {listSkeleton()}\r\n            </List>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ConfirmDialog\r\n                title={delDialogProps.title}\r\n                open={delDialogProps.open}\r\n                setOpen={delDialogOpen}\r\n                onConfirm={onDialogConfirm}\r\n            >\r\n                {delDialogProps.text}\r\n            </ConfirmDialog>\r\n            <Snackbar open={allertProps.open} autoHideDuration={4000} onClose={handleAllertClose}>\r\n                <Alert onClose={handleAllertClose} severity={allertProps.type}>\r\n                    {allertProps.text}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Toolbar className={classes.filterBox}>\r\n                <h3 className={classes.whiteText}>Search Team: </h3>\r\n                <DarkSelect\r\n                    label=\"Search by:\"\r\n                    name=\"searchBySel\"\r\n                    collection={searchMode}\r\n                    defaultValue={searchMode[0]}\r\n                    onChange={handleChangeSearchParams}\r\n                />\r\n                <DarkTextField\r\n                    onChange={handleChangeSearchParams}\r\n                    disabled={searchParams.searchBy === 'all'}\r\n                    label='Search...'\r\n                    name='searchTF'\r\n                />\r\n                <Button\r\n                    style={{ marginLeft: '15px' }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleSearchOffer}\r\n                >Search</Button>\r\n            </Toolbar>\r\n\r\n            <div className={classes.offersContainer}>\r\n                <List component=\"nav\" className={classes.listComponent}>\r\n                    <div className={classes.title}>\r\n                        <Typography variant=\"h6\" style={{ marginLeft: '16px' }}>\r\n                            Job Offers List:\r\n                        </Typography>\r\n                        <Link className={classes.linkButton} to=\"/main/create-team\">\r\n                            <Button\r\n                                size=\"small\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                endIcon={<AddCircleIcon />}\r\n                            >NEW Job Offer</Button>\r\n                        </Link>\r\n                    </div>\r\n                    {jobOffers.length === 0 ? listSkeleton() :\r\n                        <React.Fragment>\r\n                            {jobOffers.map((jobOffer, index) => (\r\n                                <div key={jobOffer.id}>\r\n                                    <ListItem\r\n                                        button\r\n                                        selected={selectedIndex === index}\r\n                                        onClick={(event) => handleListItemClick(event, index)}\r\n                                    >\r\n                                        <ListItemText\r\n                                            primary={'Name: ' + jobOffer.name}\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        color=\"textPrimary\"\r\n                                                    >\r\n                                                        {'Position: '}\r\n                                                    </Typography>\r\n                                                    {jobOffer.position.name}\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n\r\n                                        <p style={{ marginRight: '15px' }}>{'Available Jobs: ' + jobOffer.availableJobs}</p>\r\n                                        <ListItemSecondaryAction>\r\n                                            <PopupState variant=\"popover\" popupId=\"team-menu\">\r\n                                                {(popupState) => (\r\n                                                    <React.Fragment>\r\n                                                        <IconButton edge=\"end\" {...bindTrigger(popupState)}>\r\n                                                            <MoreVertIcon />\r\n                                                        </IconButton>\r\n                                                        <Menu {...bindMenu(popupState)}>\r\n                                                            <Link style={{ textDecoration: 'none' }} to={{ pathname: `/main/create-team` }}>\r\n                                                                <MenuItem className={classes.menuItem} onClick={handleEditJobOffer}>\r\n                                                                    <ListItemIcon>\r\n                                                                        <EditIcon fontSize=\"small\" />\r\n                                                                    </ListItemIcon>\r\n                                                                    Edit Job Offer\r\n                                                                </MenuItem>\r\n                                                            </Link>\r\n                                                            <MenuItem className={classes.menuItem} onClick={(e) =>\r\n                                                                setDelDialogProps({\r\n                                                                    open: true,\r\n                                                                    data: jobOffer.id,\r\n                                                                    type: 'offerRemove',\r\n                                                                    title: `Remove Job Offer : ${jobOffer.name}`,\r\n                                                                    text: 'Are you sure you want to remove this offer?'\r\n                                                                })}>\r\n                                                                <ListItemIcon>\r\n                                                                    <DeleteIcon fontSize=\"small\" />\r\n                                                                </ListItemIcon>\r\n                                                                Delete Job Offer\r\n                                                            </MenuItem>\r\n                                                        </Menu>\r\n                                                    </React.Fragment>\r\n                                                )}\r\n                                            </PopupState>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    <Divider variant=\"inset\" style={{ width: \"100%\", margin: \"0\" }} />\r\n                                </div>\r\n                            ))}\r\n                        </React.Fragment>\r\n                    }\r\n                </List>\r\n                {jobApplications.length === 0 ? jobApplicationsSkeleton() :\r\n                    <List component=\"nav\" className={classes.listComponent}>\r\n                        <div className={classes.title}>\r\n                            <Typography variant=\"h6\" style={{ marginLeft: '16px' }}>\r\n                                Job Applications:\r\n                            </Typography>\r\n                        </div>\r\n                        {jobApplications.length <= 0 ? <p style={{ marginLeft: '12px' }}>No Applications</p> :\r\n                            <React.Fragment>\r\n                                <div style={{ overflow: 'auto', }}>\r\n                                    {jobApplications.map((jobApplication, index) => (\r\n                                        <div key={\"member\" + jobApplication.id}>\r\n                                            <ListItem>\r\n                                                <ListItemText\r\n                                                    primary={jobApplication.person.name + \" \" + jobApplication.person.surname}\r\n                                                    secondary={\r\n                                                        <React.Fragment>\r\n                                                            <Typography\r\n                                                                component=\"span\"\r\n                                                                variant=\"body2\"\r\n                                                                color=\"textPrimary\"\r\n                                                            >\r\n                                                                {'Application Date: '}\r\n                                                            </Typography>\r\n                                                            {jobApplication.applicationDate}\r\n                                                        </React.Fragment>\r\n                                                    }\r\n                                                />\r\n                                                <p>Email:</p>\r\n                                                <p style={{ marginRight: '9px', marginLeft: '5px', color: 'rgba(255, 255, 255, 0.7)' }}>{jobApplication.person.email}</p>\r\n                                                <ListItemSecondaryAction>\r\n                                                    <PopupState variant=\"popover\" popupId=\"member-menu\">\r\n                                                        {(popupState) => (\r\n                                                            <React.Fragment>\r\n                                                                <IconButton edge=\"end\" {...bindTrigger(popupState)}>\r\n                                                                    <MoreVertIcon />\r\n                                                                </IconButton>\r\n                                                                <Menu {...bindMenu(popupState)}>\r\n                                                                    <MenuItem className={classes.menuItem} onClick={() => handleViewApplication(jobApplication.id)}>\r\n                                                                        <ListItemIcon>\r\n                                                                            <VisibilityIcon fontSize=\"small\" />\r\n                                                                        </ListItemIcon>\r\n                                                                        Show Application\r\n                                                                    </MenuItem>\r\n                                                                    <MenuItem className={classes.menuItem} onClick={(e) =>\r\n                                                                        setDelDialogProps({\r\n                                                                            open: true,\r\n                                                                            data: jobApplication.id,\r\n                                                                            type: 'applicationRemove',\r\n                                                                            title: `Remove Job Application: ${jobApplication.person.name} ${jobApplication.person.surname}`,\r\n                                                                            text: 'Are you sure you want to remove this job application?'\r\n                                                                        })}>\r\n                                                                        <ListItemIcon>\r\n                                                                            <DeleteIcon fontSize=\"small\" />\r\n                                                                        </ListItemIcon>\r\n                                                                        Remove Application\r\n                                                                    </MenuItem>\r\n                                                                </Menu>\r\n                                                            </React.Fragment>\r\n                                                        )}\r\n                                                    </PopupState>\r\n                                                </ListItemSecondaryAction>\r\n                                            </ListItem>\r\n                                            <Divider variant=\"inset\" style={{ width: \"100%\", margin: \"0\" }} />\r\n                                        </div>\r\n                                    ))}\r\n\r\n\r\n                                </div>\r\n                                <Pagination\r\n                                    className={classes.pagination}\r\n                                    count={pagination.totalPages}\r\n                                    page={pagination.page}\r\n                                    onChange={handlePageChange}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </React.Fragment>\r\n                        }\r\n                    </List>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default JobOffersList"]},"metadata":{},"sourceType":"module"}