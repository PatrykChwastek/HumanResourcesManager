{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\Tasks\\\\CreateTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DarkTextField, DarkSelect, DarkChipList } from '../GlobalComponents';\nimport APIURL from '../../Services/Globals';\nimport Button from '@material-ui/core/Button';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { format } from 'date-fns';\nconst useStyles = makeStyles(theme => ({\n  mainConteiner: {\n    marginTop: \"1.8rem\",\n    background: theme.palette.grey[800],\n    paddingBottom: '20px'\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '1px',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2]\n  },\n  formGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    justifyContent: \"space-between\",\n    alignContent: \"space-between\",\n    gridGap: \"1.2rem 1.2rem\"\n  },\n  datePicker: {\n    marginTop: '0',\n    marginLeft: \"20px\"\n  },\n  createButton: {\n    margin: '0 auto',\n    display: 'block',\n    width: \"19rem\"\n  }\n}));\nconst leaderID = getCurrentUser().userDetails.employeeDTO.id;\n\nconst CreateTask = () => {\n  _s();\n\n  const classes = useStyles();\n  const [task, setTask] = useState({});\n  const [allEmployees, setAllEmployees] = useState([]);\n  const [employeesToAssign, setEmployeesToAssign] = useState([]);\n  useEffect(() => {\n    getMembers();\n  }, []);\n\n  const getMembers = () => {\n    const requestOptions = {\n      method: 'Get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(APIURL + `teams/leader/${leaderID}`, requestOptions).then(response => response.json()).then(data => setAllEmployees(data.members));\n  };\n\n  const headleFormChange = e => {};\n\n  const headleDateChange = e => {// setEmployee({ ...employee, employmentDate: e })\n  };\n\n  const hendlePermissionDelete = chipToDelete => {// setEmployeePermissions(chips => chips.filter(chip => chip.name !== chipToDelete.name));\n  };\n\n  const hendlePostTask = () => {// PostEmployee(employee);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainConteiner,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      boxshadow: 2,\n      className: classes.title,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGrid,\n        children: [/*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \" Task Name\",\n          name: \"taskName\",\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DarkTextField, {\n          label: \"Description\",\n          maxRows: 5,\n          name: \"taskDescription\",\n          onChange: headleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            className: classes.datePicker,\n            disableToolbar: true,\n            name: \"dateStart\",\n            variant: \"inline\",\n            format: \"yyyy-MM-dd\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Start Time\",\n            value: task.startTime,\n            onChange: headleDateChange,\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            className: classes.datePicker,\n            disableToolbar: true,\n            name: \"dateDeadline\",\n            variant: \"inline\",\n            format: \"yyyy-MM-dd\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Deadline\",\n            value: task.Deadline,\n            onChange: headleDateChange,\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DarkChipList, {\n        label: \"Employees\",\n        name: \"employeeSelect\",\n        collection: allEmployees,\n        clipListCollection: employeesToAssign,\n        onChange: headleFormChange,\n        onDelete: hendlePermissionDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.createButton,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: hendlePostTask,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateTask, \"UntV4j2ZI3QIgEa87twfJBWXVi4=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/Tasks/CreateTask.js"],"names":["React","useEffect","useState","makeStyles","DarkTextField","DarkSelect","DarkChipList","APIURL","Button","KeyboardDatePicker","MuiPickersUtilsProvider","DateFnsUtils","format","useStyles","theme","mainConteiner","marginTop","background","palette","grey","paddingBottom","title","color","text","primary","textAlign","padding","backgroundColor","main","boxShadow","shadows","formGrid","display","gridTemplateColumns","justifyContent","alignContent","gridGap","datePicker","marginLeft","createButton","margin","width","leaderID","getCurrentUser","userDetails","employeeDTO","id","CreateTask","classes","task","setTask","allEmployees","setAllEmployees","employeesToAssign","setEmployeesToAssign","getMembers","requestOptions","method","headers","fetch","then","response","json","data","members","headleFormChange","e","headleDateChange","hendlePermissionDelete","chipToDelete","hendlePostTask","root","startTime","Deadline"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DarkTextField, DarkSelect, DarkChipList } from '../GlobalComponents';\r\nimport APIURL from '../../Services/Globals'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainConteiner: {\r\n        marginTop: \"1.8rem\",\r\n        background: theme.palette.grey[800],\r\n        paddingBottom: '20px'\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '1px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n    },\r\n    formGrid: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr 1fr\",\r\n        justifyContent: \"space-between\",\r\n        alignContent: \"space-between\",\r\n        gridGap: \"1.2rem 1.2rem\",\r\n    },\r\n    datePicker: {\r\n        marginTop: '0',\r\n        marginLeft: \"20px\"\r\n    },\r\n    createButton: {\r\n        margin: '0 auto',\r\n        display: 'block',\r\n        width: \"19rem\",\r\n    }\r\n}));\r\n\r\nconst leaderID = getCurrentUser().userDetails.employeeDTO.id;\r\nconst CreateTask = () => {\r\n    const classes = useStyles();\r\n    const [task, setTask] = useState({})\r\n    const [allEmployees, setAllEmployees] = useState([])\r\n    const [employeesToAssign, setEmployeesToAssign] = useState([])\r\n\r\n    useEffect(() => {\r\n        getMembers();\r\n    }, []);\r\n\r\n    const getMembers = () => {\r\n        const requestOptions = {\r\n            method: 'Get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        fetch(APIURL + `teams/leader/${leaderID}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => (\r\n                setAllEmployees(data.members)\r\n            ));\r\n    }\r\n\r\n    const headleFormChange = e => {\r\n\r\n    }\r\n\r\n    const headleDateChange = (e) => {\r\n        // setEmployee({ ...employee, employmentDate: e })\r\n    }\r\n    const hendlePermissionDelete = chipToDelete => {\r\n        // setEmployeePermissions(chips => chips.filter(chip => chip.name !== chipToDelete.name));\r\n    }\r\n\r\n    const hendlePostTask = () => {\r\n\r\n        // PostEmployee(employee);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.mainConteiner}>\r\n            <div boxshadow={2} className={classes.title}>\r\n                <h3 >Create New Task</h3>\r\n            </div>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <div className={classes.formGrid}>\r\n                    <DarkTextField\r\n                        label=\" Task Name\"\r\n                        name=\"taskName\"\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <DarkTextField\r\n                        label=\"Description\"\r\n                        maxRows={5}\r\n                        name=\"taskDescription\"\r\n                        onChange={headleFormChange}\r\n                    />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            className={classes.datePicker}\r\n                            disableToolbar\r\n                            name=\"dateStart\"\r\n                            variant=\"inline\"\r\n                            format=\"yyyy-MM-dd\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Start Time\"\r\n                            value={task.startTime}\r\n                            onChange={headleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            className={classes.datePicker}\r\n                            disableToolbar\r\n                            name=\"dateDeadline\"\r\n                            variant=\"inline\"\r\n                            format=\"yyyy-MM-dd\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Deadline\"\r\n                            value={task.Deadline}\r\n                            onChange={headleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </div>\r\n                <DarkChipList\r\n                    label=\"Employees\"\r\n                    name=\"employeeSelect\"\r\n                    collection={allEmployees}\r\n                    clipListCollection={employeesToAssign}\r\n                    onChange={headleFormChange}\r\n                    onDelete={hendlePermissionDelete}\r\n                />\r\n                <Button\r\n                    className={classes.createButton}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={hendlePostTask}\r\n                >Create</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default CreateTask;"]},"metadata":{},"sourceType":"module"}