{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\source\\\\repos\\\\HumanResourcesManager\\\\human-resources-manager-client\\\\src\\\\Components\\\\GlobalComponents.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport Card from \"@material-ui/core/Card\";\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nconst StyledTextField = withStyles({\n  root: {\n    '& .MuiInputBase-root': {\n      color: \"white\",\n      marginRight: \"10px\",\n      marginLeft: \"20px\",\n      marginBottom: \"11px\"\n    },\n    '& .MuiFormLabel-root': {\n      color: \"#999999\",\n      marginLeft: \"20px\"\n    },\n    '& label.Mui-focused': {\n      color: 'white'\n    },\n    '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\n      borderBottomColor: 'white'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'white'\n    },\n    '& .MuiInput-underline:before': {\n      borderBottomColor: '#999999'\n    },\n    '& input[type=\"password\" i]': {\n      webkitTextSecurity: 'disc !important'\n    }\n  }\n})(TextField);\nconst StyledSelectFC = withStyles({\n  root: {\n    '& .MuiInputBase-root': {\n      color: \"white\",\n      marginRight: \"10px\",\n      marginLeft: \"20px\",\n      marginBottom: \"11px\"\n    },\n    '& .MuiFormLabel-root': {\n      color: \"#999999\",\n      marginLeft: \"20px\"\n    },\n    '& label.Mui-focused': {\n      color: 'white'\n    },\n    '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\n      borderBottomColor: 'white'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'white'\n    },\n    '& .MuiInput-underline:before': {\n      borderBottomColor: '#999999'\n    },\n    '& .MuiSelect-icon': {\n      color: '#999999'\n    }\n  }\n})(FormControl);\nconst BorderLinearProgress = withStyles(theme => {\n  return {\n    root: {\n      borderRadius: \"6px\",\n      width: \"32px\",\n      height: \"100%\",\n      marginBottom: \"2px\"\n    },\n    colorPrimary: {\n      boxShadow: 'inset 0px 3px 3px -2px rgb(0 0 0 / 20%), inset 0px 3px 4px 0px rgb(0 0 0 / 14%), inset 0px 1px 8px 0px rgb(0 0 0 / 12%), ' + theme.shadows[1],\n      backgroundColor: '#a9a6a6',\n      borderRadius: '4px'\n    },\n    bar: {\n      borderRadius: \"6px\",\n      boxShadow: theme.shadows[3],\n      transform: ({\n        value\n      }) => {\n        return \"translateY(\".concat(value, \"%) !important\");\n      },\n      backgroundColor: ({\n        bcolor\n      }) => {\n        return bcolor;\n      }\n    }\n  };\n})(LinearProgress);\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 138\n  },\n  darkChipListBox: {\n    display: 'flex'\n  },\n  chipListContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    paddingTop: \"12px\",\n    width: \"max-content\",\n    margin: \"0\"\n  },\n  chipItem: {\n    margin: theme.spacing(0.5)\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    padding: '2px 6px 2px',\n    marginBottom: '5px',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: theme.shadows[2],\n    width: '100%'\n  },\n  barBox: {\n    minHeight: \"160px\",\n    display: \"flex\",\n    padding: \"0\",\n    margin: '6px',\n    width: \"max-content\",\n    boxshadow: theme.shadows[2]\n  },\n  stats: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    backgroundColor: '#bdbdbd',\n    color: 'black'\n  }\n}));\nexport const DarkTextField = ({\n  onChange,\n  label,\n  name,\n  type,\n  maxRows,\n  value,\n  defaultValue,\n  disabled\n}) => {\n  return /*#__PURE__*/_jsxDEV(StyledTextField, {\n    onChange: onChange,\n    multiline: maxRows !== undefined ? true : false,\n    maxRows: maxRows,\n    label: label,\n    name: name,\n    type: type,\n    value: value,\n    defaultValue: defaultValue,\n    disabled: disabled\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n};\n_c = DarkTextField;\nexport const DarkSelect = ({\n  onChange,\n  label,\n  name,\n  value,\n  firstVal,\n  collection,\n  defaultValue\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(StyledSelectFC, {\n    className: classes.formControl,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      id: \"select-params-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"select-params-label\",\n      id: \"select-params\",\n      name: name,\n      onChange: onChange,\n      value: value,\n      defaultValue: defaultValue === undefined ? '' : defaultValue,\n      children: [firstVal === undefined ? null : /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: firstVal.id,\n        children: firstVal.name\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }, this), collection === undefined ? null : collection.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: item,\n        children: item.name\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DarkSelect, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = DarkSelect;\nexport const DarkChipList = ({\n  onChange,\n  label,\n  name,\n  value,\n  firstVal,\n  firstLabel,\n  collection,\n  clipListCollection,\n  onDelete\n}) => {\n  _s2();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.darkChipListBox,\n    children: [/*#__PURE__*/_jsxDEV(StyledSelectFC, {\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"select-params-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"select-params-label\",\n        id: \"select-params\",\n        name: name,\n        onChange: onChange,\n        value: value,\n        children: [firstVal === undefined ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 47\n        }, this) : /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: firstVal,\n          children: firstLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), collection === undefined ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 49\n        }, this) : collection.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          id: \"chipMenuItem\" + item.id,\n          value: item,\n          children: item.name\n        }, \"chipKey\" + item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.chipListContainer,\n      children: clipListCollection === undefined ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 53\n      }, this) : clipListCollection.map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            className: classes.chipItem,\n            label: data.name,\n            onDelete: () => onDelete(data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(DarkChipList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = DarkChipList;\nexport const StatBar = ({\n  valueMax,\n  valueCurrent,\n  text,\n  bcolor\n}) => {\n  _s3();\n\n  const classes = useStyles();\n  const barLvl = valueMax === 0 && valueCurrent === 0 ? 100 : 100 - valueCurrent * 100 / valueMax;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.barBox,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.stats,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          noWrap: true,\n          variant: \"body2\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BorderLinearProgress, {\n        variant: \"determinate\",\n        bcolor: bcolor,\n        value: barLvl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"button\",\n        children: [Math.round(100 - barLvl), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(StatBar, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c4 = StatBar;\nexport const ConfirmDialog = props => {\n  const {\n    title,\n    children,\n    open,\n    setOpen,\n    onConfirm\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: () => setOpen(false),\n    \"aria-labelledby\": \"confirm-dialog\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"confirm-dialog\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => setOpen(false),\n        color: \"secondary\",\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          setOpen(false);\n          onConfirm();\n        },\n        color: \"default\",\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 9\n  }, this);\n};\n_c5 = ConfirmDialog;\nexport const InfoDialog = props => {\n  const {\n    title,\n    children,\n    open,\n    setOpen,\n    onConfirm\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: () => setOpen(false),\n    \"aria-labelledby\": \"info-dialog\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      style: {\n        padding: '16px 29px 0'\n      },\n      id: \"info-dialog\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: 0\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      style: {\n        maxWidth: '650px'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          setOpen(false);\n          onConfirm();\n        },\n        color: \"default\",\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 9\n  }, this);\n};\n_c6 = InfoDialog;\nexport default {\n  DarkChipList,\n  DarkSelect,\n  DarkTextField,\n  StatBar,\n  ConfirmDialog,\n  InfoDialog\n};\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"DarkTextField\");\n$RefreshReg$(_c2, \"DarkSelect\");\n$RefreshReg$(_c3, \"DarkChipList\");\n$RefreshReg$(_c4, \"StatBar\");\n$RefreshReg$(_c5, \"ConfirmDialog\");\n$RefreshReg$(_c6, \"InfoDialog\");","map":{"version":3,"sources":["C:/Users/Komputer/source/repos/HumanResourcesManager/human-resources-manager-client/src/Components/GlobalComponents.js"],"names":["makeStyles","withStyles","TextField","FormControl","Select","InputLabel","MenuItem","Chip","Card","Typography","LinearProgress","Button","Dialog","DialogActions","DialogContent","DialogTitle","StyledTextField","root","color","marginRight","marginLeft","marginBottom","borderBottomColor","webkitTextSecurity","StyledSelectFC","BorderLinearProgress","theme","borderRadius","width","height","colorPrimary","boxShadow","shadows","backgroundColor","bar","transform","value","bcolor","useStyles","formControl","minWidth","darkChipListBox","display","chipListContainer","justifyContent","flexWrap","listStyle","padding","spacing","paddingTop","margin","chipItem","title","palette","text","primary","textAlign","main","barBox","minHeight","boxshadow","stats","alignItems","flexDirection","DarkTextField","onChange","label","name","type","maxRows","defaultValue","disabled","undefined","DarkSelect","firstVal","collection","classes","id","map","item","index","DarkChipList","firstLabel","clipListCollection","onDelete","data","StatBar","valueMax","valueCurrent","barLvl","Math","round","ConfirmDialog","props","children","open","setOpen","onConfirm","InfoDialog","maxWidth"],"mappings":"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","sourcesContent":["import { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst StyledTextField = withStyles({\r\n    root: {\r\n\r\n        '& .MuiInputBase-root': {\r\n            color: \"white\",\r\n            marginRight: \"10px\",\r\n            marginLeft: \"20px\",\r\n            marginBottom: \"11px\",\r\n        },\r\n\r\n        '& .MuiFormLabel-root': {\r\n            color: \"#999999\",\r\n            marginLeft: \"20px\",\r\n        },\r\n\r\n        '& label.Mui-focused': {\r\n            color: 'white',\r\n        },\r\n        '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:before': {\r\n            borderBottomColor: '#999999',\r\n        },\r\n        '& input[type=\"password\" i]': {\r\n            webkitTextSecurity: 'disc !important'\r\n        }\r\n    },\r\n})(TextField);\r\n\r\nconst StyledSelectFC = withStyles({\r\n    root: {\r\n        '& .MuiInputBase-root': {\r\n            color: \"white\",\r\n            marginRight: \"10px\",\r\n            marginLeft: \"20px\",\r\n            marginBottom: \"11px\",\r\n        },\r\n\r\n        '& .MuiFormLabel-root': {\r\n            color: \"#999999\",\r\n            marginLeft: \"20px\",\r\n        },\r\n\r\n        '& label.Mui-focused': {\r\n            color: 'white',\r\n        },\r\n        '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:before': {\r\n            borderBottomColor: '#999999',\r\n        },\r\n        '& .MuiSelect-icon': {\r\n            color: '#999999',\r\n        },\r\n    },\r\n})(FormControl);\r\n\r\nconst BorderLinearProgress = withStyles((theme) => {\r\n    return {\r\n        root: {\r\n            borderRadius: \"6px\",\r\n            width: \"32px\",\r\n            height: \"100%\",\r\n            marginBottom: \"2px\"\r\n        },\r\n        colorPrimary: {\r\n            boxShadow: 'inset 0px 3px 3px -2px rgb(0 0 0 / 20%), inset 0px 3px 4px 0px rgb(0 0 0 / 14%), inset 0px 1px 8px 0px rgb(0 0 0 / 12%), ' + theme.shadows[1],\r\n            backgroundColor: '#a9a6a6',\r\n            borderRadius: '4px',\r\n        },\r\n        bar: {\r\n            borderRadius: \"6px\",\r\n            boxShadow: theme.shadows[3],\r\n            transform: ({ value }) => {\r\n                return `translateY(${value}%) !important`;\r\n            },\r\n            backgroundColor: ({ bcolor }) => { return bcolor }\r\n        },\r\n    };\r\n})(LinearProgress);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 138,\r\n    },\r\n    darkChipListBox: {\r\n        display: 'flex',\r\n    },\r\n    chipListContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(0.5),\r\n        paddingTop: \"12px\",\r\n        width: \"max-content\",\r\n        margin: \"0\",\r\n    },\r\n    chipItem: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'center',\r\n        padding: '2px 6px 2px',\r\n        marginBottom: '5px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        boxShadow: theme.shadows[2],\r\n        width: '100%',\r\n    },\r\n    barBox: {\r\n        minHeight: \"160px\",\r\n        display: \"flex\",\r\n        padding: \"0\",\r\n        margin: '6px',\r\n        width: \"max-content\",\r\n        boxshadow: theme.shadows[2]\r\n    },\r\n    stats: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: '#bdbdbd',\r\n        color: 'black'\r\n    }\r\n}));\r\n\r\nexport const DarkTextField = ({ onChange, label, name, type, maxRows, value, defaultValue, disabled }) => {\r\n    return (\r\n        <StyledTextField\r\n            onChange={onChange}\r\n            multiline={maxRows !== undefined ? true : false}\r\n            maxRows={maxRows}\r\n            label={label}\r\n            name={name}\r\n            type={type}\r\n            value={value}\r\n            defaultValue={defaultValue}\r\n            disabled={disabled}\r\n        />\r\n    );\r\n};\r\n\r\nexport const DarkSelect = ({ onChange, label, name, value, firstVal, collection, defaultValue }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <StyledSelectFC className={classes.formControl}>\r\n            <InputLabel id=\"select-params-label\">{label}</InputLabel>\r\n            <Select\r\n                labelId=\"select-params-label\"\r\n                id=\"select-params\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                defaultValue={defaultValue === undefined ? '' : defaultValue}\r\n            >\r\n                {\r\n                    firstVal === undefined ? null :\r\n                        <MenuItem key={0} value={firstVal.id} >{firstVal.name}</MenuItem>\r\n                }\r\n                {collection === undefined ? null :\r\n                    collection.map((item, index) => (\r\n                        <MenuItem key={index + 1} value={item}>{item.name}</MenuItem>\r\n                    ))\r\n                }\r\n            </Select>\r\n        </StyledSelectFC>\r\n    );\r\n};\r\n\r\nexport const DarkChipList = ({ onChange, label, name, value, firstVal, firstLabel, collection, clipListCollection, onDelete }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.darkChipListBox}>\r\n            <StyledSelectFC className={classes.formControl}>\r\n                <InputLabel id=\"select-params-label\">{label}</InputLabel>\r\n                <Select\r\n                    labelId=\"select-params-label\"\r\n                    id=\"select-params\"\r\n                    name={name}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                >\r\n                    {firstVal === undefined ? <div></div> :\r\n                        <MenuItem value={firstVal}>{firstLabel}</MenuItem>\r\n                    }\r\n                    {collection === undefined ? <div></div> :\r\n                        collection.map((item, index) => (\r\n                            <MenuItem id={\"chipMenuItem\" + item.id} key={\"chipKey\" + item.id} value={item}>{item.name}</MenuItem>\r\n                        ))\r\n                    }\r\n                </Select>\r\n            </StyledSelectFC>\r\n            <ul className={classes.chipListContainer}>\r\n                {clipListCollection === undefined ? <div></div> :\r\n                    clipListCollection.map((data, index) => {\r\n                        return (\r\n                            <li key={index}>\r\n                                <Chip\r\n                                    className={classes.chipItem}\r\n                                    label={data.name}\r\n                                    onDelete={() => onDelete(data)}\r\n                                />\r\n                            </li>\r\n                        );\r\n                    })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const StatBar = ({ valueMax, valueCurrent, text, bcolor }) => {\r\n    const classes = useStyles();\r\n\r\n    const barLvl = valueMax === 0 && valueCurrent === 0 ? 100 :\r\n        100 - (valueCurrent * 100) / valueMax;\r\n\r\n    return (\r\n        <Card className={classes.barBox}>\r\n\r\n            <div className={classes.stats}>\r\n                <div className={classes.title}>\r\n                    <Typography noWrap variant=\"body2\">{text}</Typography>\r\n                </div>\r\n                <BorderLinearProgress variant=\"determinate\" bcolor={bcolor} value={barLvl} />\r\n                <Typography variant=\"button\">{Math.round(100 - barLvl)}%</Typography>\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport const ConfirmDialog = (props) => {\r\n    const { title, children, open, setOpen, onConfirm } = props;\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            aria-labelledby=\"confirm-dialog\"\r\n        >\r\n            <DialogTitle id=\"confirm-dialog\">{title}</DialogTitle>\r\n            <DialogContent>{children}</DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => setOpen(false)}\r\n                    color=\"secondary\"\r\n                >\r\n                    No\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                        setOpen(false);\r\n                        onConfirm();\r\n                    }}\r\n                    color=\"default\"\r\n                >\r\n                    Yes\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport const InfoDialog = (props) => {\r\n    const { title, children, open, setOpen, onConfirm } = props;\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            aria-labelledby=\"info-dialog\"\r\n        >\r\n            <DialogTitle style={{ padding: '16px 29px 0' }} id=\"info-dialog\">\r\n                <h3 style={{ margin: 0 }}>{title}</h3>\r\n            </DialogTitle>\r\n            <DialogContent style={{ maxWidth: '650px' }}>{children}</DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                        setOpen(false);\r\n                        onConfirm();\r\n                    }}\r\n                    color=\"default\"\r\n                >\r\n                    OK\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default {\r\n    DarkChipList,\r\n    DarkSelect,\r\n    DarkTextField,\r\n    StatBar,\r\n    ConfirmDialog,\r\n    InfoDialog\r\n};"]},"metadata":{},"sourceType":"module"}